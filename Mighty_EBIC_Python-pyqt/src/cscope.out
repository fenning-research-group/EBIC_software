cscope 15 /home/mightydev2/Mighty_EBIC_Python/src -c 0000642655
	@./CCNT_RX_TX_IV.py

2 import 
	~socket

3 import 
	~time

4 import 
	~struct

5 import 
	~numpy

6 import 
	~pylab

7 import 
	~sys

8 import 
	~CCNT_test

9 from 
	~CCNT_test_unit
 import *

10 import 
	~Queue

11 import 
	~threading

14 
	=IP
 = "10.0.1.8"

15 
	=PORT
 = 5009

18 
	=buf_size
 = 4096

23 
	=dt
 = 
numpy
 . 
	`dtype
 ( 'uint32' )

26 
	=q
 = 
Queue
 . 
	`Queue
 ( )

28 
	=TF_I
 = 
CCNT_test
 . 
TF_index

37 
	=samp
 = 
numpy
 . 
	`int16
 ( 100 )

38 
	=CH
 = 
numpy
 . 
	`int16
 ( 1 )

39 
	=Count
 = 
numpy
 . 
	`int16
 ( 400 )

51 
	=CCNT
 = 
CH
 * 
samp

53 
	=resizeDim
 = ( 
samp
 , 
CH
 )

54 
	=count
 = 0

56 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
Count
 , 
samp
 , 
CH
 ] , 
numpy
 . 
int32
 )

57 print "storedArray" , 
storedArray
 . 
shape

59 
	=header_max
 = 
Count

60 print 
header_max

63 def 
	$test_scanSize
 ( ) :

64 
	=temp
 = 1

65 for 
i
 in 
resizeDim
 :

66 
	=temp
 = 
i
 * 
temp

69 return 
temp
 
	}

71 def 
	$constructPayload
 ( ) :

73 
	=OS_0
 = 2

74 
	=OS_1
 = 3

75 
	=OS_2
 = 5

78 
	=OS0
 = 0b001

79 
	=OS1
 = 0b010

80 
	=OS2
 = 0b100

81 
	=OSI
 = 3

84 if 
OSI
 > 0 :

85 
	=OS_value
 = 
	`int
 ( 
numpy
 . 
	`log2
 ( 
OSI
 ) )

87 
	=OS_value
 = 
OSI

88 print "OS_valuen" , 
	`bin
 ( 
OS_value
 )

90 
	=nStep
 = 
numpy
 . 
	`int16
 ( - 50 )

91 
	=pStep
 = 
numpy
 . 
	`int16
 ( 50 )

92 
	=Count
 = 
numpy
 . 
	`int16
 ( 400 )

93 
	=Start
 = 
numpy
 . 
	`int32
 ( 0 )

94 
	=Stop
 = 
numpy
 . 
	`int16
 ( 0 )

95 
	=Min
 = 
numpy
 . 
	`int16
 ( 0 )

96 
	=Max
 = 
numpy
 . 
	`int16
 ( 200 )

97 
	=STEP
 = 
numpy
 . 
	`int16
 ( 50 )

98 
	=samp
 = 
numpy
 . 
	`int16
 ( 100 )

99 
	=CH
 = 
numpy
 . 
	`int16
 ( 1 )

100 
	=DVAR
 = 
numpy
 . 
	`uint32
 ( 1000 )

101 
	=OS
 = 
numpy
 . 
	`uint16
 ( 2 )

104 
	=OS
 = ( ( 
OS_value
 & 
OS2
 ) >> 2 ) << 
OS_2
 | ( ( 
OS_value
 & 
OS1
 ) >> 1 ) << 
OS_1
 | ( 
OS_value
 & 
OS0
 ) << 
OS_0

105 print "OS" , 
OS

106 
	=XFER
 = 
CH
 << 16 | ( ( 
CH
 * 4 ) - 1 ) << 8

108 print "XFER" , 
XFER

111 print "CCNT" , 
CCNT

119 
	=res
 = "%8x" % 0xa011

120 
	=res
 += "%8x" % 
nStep

121 
	=res
 += "%8x" % 
pStep

122 
	=res
 += "%8x" % 
Count

123 
	=res
 += "%8x" % 
Start

124 
	=res
 += "%8x" % 
Stop

125 
	=res
 += "%8x" % 
Min

126 
	=res
 += "%8x" % 
Max

127 
	=res
 += "%8x" % 
STEP

128 
	=res
 += "%8x" % 
samp

129 
	=res
 += "%8x" % 
CH

130 
	=res
 += "%8x" % 
DVAR

131 
	=res
 += "%8x" % 
OS

132 
	=res
 += "%8x" % 
XFER

133 
	=res
 += "%8x" % 
CCNT

136 return 
res
 
	}

139 def 
	$loop
 ( ) :

140 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

141 
sock
 . 
	`connect
 ( ( 
IP
 , 9930 ) )

144 
	=payload
 = 
	`constructPayload
 ( )

145 print 
payload

146 
sock
 . 
	`send
 ( 
payload
 )

147 
sock
 . 
	`close
 ( ) 
	}

151 def 
	$RX_loop
 ( ) :

153 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

154 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

155 
	=datacount
 = 
CH
 * 
samp

156 print 
datacount

157 
	=count
 = 0

163 
	=data
 = 
sock
 . 
	`recv
 ( 
buf_size
 )

167 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

168 if 
header
 [ 0 ] > 
header_max
 :

173 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

175 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

178 
	=Z
 = 
Copy
 >> 14 
	}

192 def 
	$dump_loop
 ( 
dump
 , 
datacount
 ) :

194 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

195 
sock
 . 
	`settimeout
 ( 3 )

196 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

198 print "data count" , 
datacount

199 
	=count
 = 0

203 
	=Hmax
 = 0

207 
	=data
 = ( 
sock
 . 
	`recv
 ( 
buf_size
 ) )

208 
	=count
 = 
count
 + 1

209 except 
socket
 . 
error
 as 
msg
 :

210 
sock
 . 
	`close
 ( )

211 print "error" , 
msg

214 if not 
data
 :

217 
dump
 . 
	`append
 ( 
data
 )

218 
q
 . 
	`put
 ( 
data
 )

219 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

220 if 
header
 [ 0 ] == 
header_max
 :

221 print "header max" , 
header
 [ 0 ]

223 if 
header
 [ 0 ] > 
header_max
 :

224 
	=Hmax
 = 
Hmax
 + 1

226 print "data length" , 
	`len
 ( 
dump
 )

228 print "length of dump" , 
	`len
 ( 
dump
 )

229 print "queue maxsize" , 
q
 . 
	`qsize
 ( )

230 
sock
 . 
	`close
 ( )

233 return 
Hmax
 , 
count
 
	}

238 def 
	$sortToImage
 ( 
dump
 , 
datacount
 ) :

244 
	=header_dump
 = [ ]

245 
	=Hmax
 = 0

246 for 
i
 in 
	`range
 ( 
	`len
 ( 
dump
 ) ) :

248 
	=data
 = 
dump
 . 
	`pop
 ( - 1 )

249 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

250 
	=ping
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 8 )

251 
	=pong
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 12 )

253 
header_dump
 . 
	`append
 ( 
data
 )

255 if 
header
 [ 0 ] <= 
header_max
 :

259 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

261 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

265 
	=Z
 = 
Copy
 >> 14

279 
	=Hmax
 = 
Hmax
 + 1

281 print "Hmax" , 
Hmax

282 for 
k
 in 
	`range
 ( 
CH
 ) :

284 print 
storedArray
 [ : , : , : , 
k
 ] . 
	`mean
 ( )

285 
pylab
 . 
	`imshow
 ( 
numpy
 . 
	`average
 ( 
storedArray
 [ : , : , : , 
k
 ] , 
axis
 = 2 ) )

288 
pylab
 . 
	`colorbar
 ( )

289 
pylab
 . 
	`show
 ( ) 
	}

298 def 
	$get_data_from_q
 ( 
q
 , 
datacount
 ) :

304 
	=header_dump
 = [ ]

305 
	=Hmax
 = 0

308 
	=data
 = 
q
 . 
	`get
 ( )

309 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

310 
	=ping
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 8 )

311 
	=pong
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 12 )

313 
header_dump
 . 
	`append
 ( 
data
 )

315 if 
header
 [ 0 ] <= 
header_max
 :

319 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

321 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

325 
	=Z
 = 
Copy
 >> 14

335 print 
header
 , 
ping
 , 
pong
 , 
Z
 . 
	`max
 ( ) , 
Z
 . 
	`min
 ( ) , "\n"

340 
	=Hmax
 = 
Hmax
 + 1

342 if 
header
 [ 0 ] == 
header_max
 :

343 break 
	}

352 if 
__name__
 == "__main__" :

354 
	`loop
 ( )

356 
	=dump
 = [ ]

358 
	=datacount
 = 
CH
 * 
samp

359 
	=Producer
 = 
threading
 . 
	`Thread
 ( 
target
 = 
dump_loop
 , 
args
 = ( 
dump
 , 
datacount
 ) )

361 
	=Consumer
 = 
threading
 . 
	`Thread
 ( 
target
 = 
get_data_from_q
 , 
args
 = ( 
q
 , 
datacount
 ) )

362 
Consumer
 . 
	`start
 ( )

363 
Producer
 . 
	`start
 ( )

365 while 
Producer
 . 
	`is_alive
 ( ) :

366 
time
 . 
	`sleep
 ( 1 )

370 print "final length of dump" , 
	`len
 ( 
dump
 )


	@./Mexport.py

2 import 
	~numpy

3 import 
	~scanobject

4 from 
	~scanobject
 import *

6 class 
	cExporter
 :

12 def 
	$__init__
 ( 
self
 ) :

13 return 
	}

15 def 
	$export_csv
 ( 
self
 , 
name
 = None , 
header
 = None , 
data
 = None ) :

16 
	=newfile
 = 
name
 + '.csv'

17 
	=f
 = 
	`open
 ( 
newfile
 , 'w' )

18 if 
header
 != None :

19 
f
 . 
	`write
 ( 
header
 )

20 if 
data
 != None :

21 if 
data
 . 
__class__
 == 
list
 :

22 for 
i
 in 
	`range
 ( 
	`len
 ( 
data
 ) ) :

23 
numpy
 . 
	`savetxt
 ( 
f
 , 
data
 [ 
i
 ] , 
delimiter
 = ',' , 
fmt
 = '%1.4e' )

24 
f
 . 
	`write
 ( '\n' )

26 
numpy
 . 
	`savetxt
 ( 
f
 , 
data
 , 
delimiter
 = ',' , 
fmt
 = '%1.4e' )

27 
f
 . 
	`close
 ( ) 
	}

29 def 
	$make_header
 ( 
self
 , 
scanObject
 , 
index
 = None ) :

30 if 
scanObject
 . 
__class__
 == 
scanobject
 . 
Scan
 :

31 
	=labels
 = 'label: ' + 
scanObject
 . 
labels
 [ 
index
 ] + '\t'

32 
	=units
 = 'units: ' + 
scanObject
 . 
units
 [ 
index
 ] + '\t'

33 
	=name
 = 'scan name:' + 
scanObject
 . 
name
 + '\t'

34 
	=gain
 = 'gain: ' + 
	`str
 ( 
scanObject
 . 
gain
 [ 
index
 ] ) + '\t'

35 
	=extent
 = 'extent: ' + 
	`str
 ( 
scanObject
 . 
extent
 ) + '(units in microns)' + '\t'

36 
	=Ch
 = 'channel: ' + 
	`str
 ( 
index
 ) + '\t'

37 
	=created
 = 'created:' + 
scanObject
 . 
created
 + '\t'

38 
	=header
 = 
name
 + 
Ch
 + 
created
 + 
labels
 + 
units
 + 
gain
 + 
extent
 + '\n'

39 return 
header

40 elif 
scanObject
 . 
__class__
 == 
scanobject
 . 
Profile
 :

41 
	=startpoint
 = 'startpoint: ' + 
	`str
 ( 
scanObject
 . 
startpoint
 ) + '\t'

42 
	=endpoint
 = 'endpoint:' + 
	`str
 ( 
scanObject
 . 
endpoint
 ) + '\t'

43 
	=units
 = 'units: ' + 
scanObject
 . 
units
 [ 
index
 ] + '\t'

44 
	=name
 = 'scan name:' + 
scanObject
 . 
name
 + '\t'

45 
	=gain
 = 'gain: ' + 
	`str
 ( 
scanObject
 . 
gain
 [ 
index
 ] ) + '\t'

47 
	=header
 = 
name
 + 
units
 + 
gain
 + 
startpoint
 + 
endpoint
 + '\n'

48 return 
header

49 elif 
scanObject
 . 
__class__
 == 
scanobject
 . 
Transport
 :

50 
	=created
 = 'created' + 
	`str
 ( 
scanObject
 . 
created
 ) + '\t'

51 
	=delay
 = 'delay' + 
	`str
 ( 
scanObject
 . 
delay
 ) + '\t'

52 
	=gain
 = 'gain' + 
	`str
 ( 
scanObject
 . 
gain
 ) + '\t'

53 
	=header
 = 
created
 + 
delay
 + 
gain
 + '\n'

54 return 
header

56 print 'ohno no header' 
	}


	@./pyQtWindow.py

7 import 
	~sys

8 import 
	~os

9 
	=CWD
 = 
os
 . 
	`getcwd
 ( )

10 
	=PWD
 = 
os
 . 
pardir

11 
sys
 . 
path
 . 
	`append
 ( 
CWD
 + '/proto_Code' )

12 
sys
 . 
path
 . 
	`append
 ( 
PWD
 )

14 import 
	~os.path

18 import 
	~src.pyqtgraph
 as 
pg

20 from 
	~src.pyqtgraph.Qt
 import 
QtCore
 , 
QtGui

21 import 
	~numpy
 as 
np

22 import 
	~time

25 class 
	cCustomViewBox
 ( 
pg
 . 
ViewBox
 ) :

26 def 
	$__init__
 ( 
self
 , * 
args
 , ** 
kwds
 ) :

27 
pg
 . 
ViewBox
 . 
	`__init__
 ( 
self
 , * 
args
 , ** 
kwds
 )

28 
self
 . 
	`setMouseMode
 ( 
self
 . 
RectMode
 )

29 
self
 . 
	`enableAutoRange
 ( ) 
	}

32 def 
	$mouseClickEvent
 ( 
self
 , 
ev
 ) :

33 if 
ev
 . 
	`button
 ( ) == 
QtCore
 . 
Qt
 . 
RightButton
 :

34 
self
 . 
	`autoRange
 ( ) 
	}

36 def 
	$mouseDragEvent
 ( 
self
 , 
ev
 ) :

37 if 
ev
 . 
	`button
 ( ) == 
QtCore
 . 
Qt
 . 
RightButton
 :

38 
ev
 . 
	`ignore
 ( )

40 
pg
 . 
ViewBox
 . 
	`mouseDragEvent
 ( 
self
 , 
ev
 ) 
	}

44 class 
	cCrossHairs
 ( ) :

46 def 
	$__init__
 ( 
self
 , 
vb
 , 
scaleStep
 ) :

47 
self
 . 
	=vb
 = 
vb

48 
self
 . 
	=scaleStep
 = 1 / 
self
 . 
vb
 . 
	`scale
 ( )

49 
self
 . 
	=vLine
 = 
pg
 . 
	`InfiniteLine
 ( 
angle
 = 90 , 
movable
 = False , 
pen
 = 'g' )

50 
self
 . 
	=hLine
 = 
pg
 . 
	`InfiniteLine
 ( 
angle
 = 0 , 
movable
 = False , 
pen
 = 'g' )

51 
self
 . 
	=Display
 = False

52 
self
 . 
	=proxy
 = 
pg
 . 
	`SignalProxy
 ( 
self
 . 
vb
 . 
	`scene
 ( ) . 
sigMouseMoved
 , 
rateLimit
 = 60 , 
slot
 = 
self
 . 
mouseMoved
 )

53 
self
 . 
	=index
 = None 
	}

60 def 
	$show
 ( 
self
 ) :

61 
self
 . 
	=Display
 = True

62 
self
 . 
vb
 . 
	`addItem
 ( 
self
 . 
vLine
 , 
ignoreBounds
 = True )

63 
self
 . 
vb
 . 
	`addItem
 ( 
self
 . 
hLine
 , 
ignoreBounds
 = True )

64 
self
 . 
vLine
 . 
	`setZValue
 ( 10 )

65 
self
 . 
hLine
 . 
	`setZValue
 ( 10 ) 
	}

67 def 
	$hide
 ( 
self
 ) :

68 
self
 . 
	=Display
 = False

69 
self
 . 
vb
 . 
	`removeItem
 ( 
self
 . 
vLine
 )

70 
self
 . 
vb
 . 
	`removeItem
 ( 
self
 . 
hLine
 ) 
	}

73 def 
	$mouseMoved
 ( 
self
 , 
evt
 ) :

74 
	=pos
 = 
evt
 [ 0 ]

75 if 
self
 . 
vb
 . 
	`sceneBoundingRect
 ( ) . 
	`contains
 ( 
pos
 ) and 
self
 . 
Display
 == True :

76 
	=mousePoint
 = 
self
 . 
vb
 . 
	`mapSceneToView
 ( 
pos
 )

77 
self
 . 
	=index
 = [ 
	`int
 ( 
mousePoint
 . 
	`x
 ( ) ) , 
	`int
 ( 
mousePoint
 . 
	`y
 ( ) ) ]

78 
self
 . 
vLine
 . 
	`setPos
 ( 
mousePoint
 . 
	`x
 ( ) )

79 
self
 . 
hLine
 . 
	`setPos
 ( 
mousePoint
 . 
	`y
 ( ) )

81 print 
	`int
 ( 
self
 . 
scaleStep
 * 
mousePoint
 . 
	`x
 ( ) ) , 
	`int
 ( 
self
 . 
scaleStep
 * 
mousePoint
 . 
	`y
 ( ) ) 
	}

84 class 
	cLineSeg
 ( ) :

85 def 
	$__init__
 ( 
self
 , 
vb
 , 
scale
 ) :

86 
self
 . 
	=vb
 = 
vb

87 
self
 . 
	=scale
 = 
self
 . 
vb
 . 
	`scale
 ( )

88 
self
 . 
	=L
 = 
pg
 . 
	`LineSegmentROI
 ( [ [ 110 * 
scale
 , 5 * 
scale
 ] , [ 5 * 
scale
 , 5 * 
scale
 ] ] , 
pen
 = 'r' ) 
	}

90 def 
	$show
 ( 
self
 ) :

91 
self
 . 
vb
 . 
	`addItem
 ( 
self
 . 
L
 , 
ignoreBounds
 = True )

92 
self
 . 
L
 . 
	`setZValue
 ( 10 ) 
	}

94 def 
	$hide
 ( 
self
 ) :

95 
self
 . 
vb
 . 
	`removeItem
 ( 
self
 . 
L
 ) 
	}

98 class 
	cROI_Rec
 ( ) :

99 def 
	$__init__
 ( 
self
 , 
vb
 , 
scale
 ) :

100 
self
 . 
	=vb
 = 
vb

101 
self
 . 
	=scale
 = 
self
 . 
vb
 . 
	`scale
 ( )

102 
self
 . 
	=roi
 = 
pg
 . 
	`ROI
 ( [ 20 * 
scale
 , 20 * 
scale
 ] , [ 40 * 
scale
 , 40 * 
scale
 ] )

103 
self
 . 
roi
 . 
	`addScaleHandle
 ( [ 0.5 , 1 ] , [ 0.5 , 0.5 ] )

104 
self
 . 
roi
 . 
	`addScaleHandle
 ( [ 0 , 0.5 ] , [ 0.5 , 0.5 ] ) 
	}

106 def 
	$show
 ( 
self
 ) :

107 
self
 . 
vb
 . 
	`addItem
 ( 
self
 . 
roi
 )

108 
self
 . 
roi
 . 
	`setZValue
 ( 10 ) 
	}

110 def 
	$hide
 ( 
self
 ) :

111 
self
 . 
vb
 . 
	`removeItem
 ( 
self
 . 
roi
 ) 
	}


	@./Surf.py

1 import 
	~scanobject

2 import 
	~Mfigure

3 import 
	~scipy.ndimage
 as 
nd

6 from 
	~mayavi.mlab
 import *

8 
	=Scan
 = 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( "../data/BNL_Si_PV/2ndpieceAsi5kvtilt45_x2.scan" )

9 
	=EB
 = 
Scan
 . 
DisplayArray
 [ : , : , 1 ]

10 
	=Gaus
 = 
nd
 . 
	`gaussian_filter
 ( 
EB
 , 3 , 
order
 = 0 )

12 
	`surf
 ( 
Gaus
 * - 1e6 , 
warp_scale
 = 'auto' , 
colormap
 = "YlOrRd" , 
vmin
 = 3 , 
vmax
 = 5.33 )


	@./scanobject.py

1 import 
	~numpy

2 import 
	~pickle

3 import 
	~EbicDataManager

4 import 
	~sys

5 import 
	~os

6 import 
	~math

7 import 
	~scipy

8 import 
	~scipy.ndimage

9 from 
	~time
 import 
strftime

12 class 
	cScan
 ( ) :

15 def 
	$__init__
 ( 
self
 , 
bounds
 = ( ( - 0x7fff , - 0x7fff ) , ( 0x7fff , 0x7fff ) ) ,

16 
cal
 = None , 
SEMstate
 = None , 
controllerState
 = None , 
scanstate
 = None , 
name
 = None , 
Notes
 = None ) :

17 
self
 . 
	=created
 = 
	`strftime
 ( "%Y-%m-%d_%H-%M-%S" )

18 
self
 . 
	=name
 = 
name

19 
self
 . 
	=cal
 = 
cal

20 
self
 . 
	=bounds
 = 
bounds

21 
self
 . 
	=rotation
 = [ ]

23 
self
 . 
	=figures
 = None

24 
self
 . 
	=profiles
 = [ ]

25 
self
 . 
	=slices
 = [ ]

26 
self
 . 
	=notes
 = 
Notes

28 
self
 . 
	=viewmin
 = [ ]

29 
self
 . 
	=viewmax
 = [ ]

30 
self
 . 
	=cmap
 = [ '' , '' , '' , '' , '' , '' ]

33 
self
 . 
	=SEMstate
 = 
self
 . 
	`load_SEM_state
 ( 
SEMstate
 )

34 
self
 . 
	=controllerState
 = 
self
 . 
	`load_controller_state
 ( 
controllerState
 )

35 
self
 . 
	=scanstate
 = 
self
 . 
	`load_scan_state
 ( 
scanstate
 ) 
	}

38 def 
	$load_scan_state
 ( 
self
 , 
scanState
 = None ) :

39 if 
scanState
 != None :

41 
self
 . 
	=scanState
 = 
scanState

42 
self
 . 
	=stepH
 = 
scanState
 . 
stepH

43 
self
 . 
	=stepV
 = 
scanState
 . 
stepV

44 
self
 . 
	=pointsH
 = 
scanState
 . 
pointsH

45 
self
 . 
	=pointsV
 = 
scanState
 . 
pointsV

46 
self
 . 
	=offsets
 = 
scanState
 . 
offsets

47 
self
 . 
	=channelMask
 = 
scanState
 . 
channelMask

48 
self
 . 
	=scanMag
 = 
scanState
 . 
mag

49 
self
 . 
	=units
 = 
scanState
 . 
units

50 
self
 . 
	=labels
 = 
scanState
 . 
labels

51 
self
 . 
	=gain
 = 
scanState
 . 
gain

52 
self
 . 
	=delay
 = 
scanState
 . 
delay

53 
self
 . 
	=samples
 = 
scanState
 . 
samplesPerPoint

54 
self
 . 
	=channels
 = 
self
 . 
	`set_channel_scale
 ( )

55 
self
 . 
	=channelCount
 = 
EbicDataManager
 . 
DataManagerUtils
 . 
	`maskToChannelCount
 ( 
self
 . 
channelMask
 )

56 
self
 . 
	`set_position_scale
 ( )

57 
self
 . 
	=rawDataArray
 = 
Scan
 . 
	`makeNDataArray
 ( 
self
 . 
pointsH
 , 
self
 . 
pointsV
 , 
self
 . 
samples
 , 
self
 . 
channelCount
 )

58 
self
 . 
	=DataArray
 = None

59 
self
 . 
	=DisplayArray
 = 
Scan
 . 
	`makeDisplayArray
 ( 
self
 . 
pointsH
 , 
self
 . 
pointsV
 , 
self
 . 
channelCount
 )

61 return 
scanState
 
	}

63 @ 
	`staticmethod

64 def 
	$setup_scan_state
 ( 
stepH
 = None , 
stepV
 = None , 
pointsH
 = None , 
pointsV
 = None , 
spread
 = None , 
offsets
 = None

65 , 
channelMask
 = None , 
units
 = None , 
labels
 = None , 
gain
 = None , 
delay
 = None , 
samples
 = None

66 , 
mag
 = None , 
cal
 = None , 
bounds
 = None ) :

71 
	=delayFine
 , 
	=delayCoarse
 = 
Scan
 . 
	`setDelay
 ( 
delay
 )

72 
	=hMin
 , 
	=hMax
 , 
	=vMin
 , 
	=vMax
 = 
Scan
 . 
	`scan_bounds
 ( 
bounds
 , 
offsets
 , 
spread
 )

73 
	=units
 , 
	=labels
 , 
	=gain
 = 
Scan
 . 
	`compact_channel_info
 ( 
channelMask
 , 
units
 = 
units
 , 
labels
 = 
labels
 , 
gain
 = 
gain
 )

75 
	=scanState
 = 
EbicDataManager
 . 
	`ScanConfig
 ( 
stepH
 , 
stepV
 , 
hMin
 , 
vMin
 , 
pointsH
 , 
pointsV
 , 
samples
 , 
channelMask
 , 
delayFine
 , 
delayCoarse

76 , 
mag
 , 
units
 , 
gain
 , 
labels
 , 
delay
 , 
offsets
 )

78 return 
scanState
 
	}

81 def 
	$load_controller_state
 ( 
self
 , 
controllerState
 = None ) :

82 if 
controllerState
 != None :

83 
self
 . 
	=Aux1
 = 
controllerState
 [ 'Aux1' ]

84 
self
 . 
	=Aux2
 = 
controllerState
 [ 'Aux2' ]

85 return 
controllerState
 
	}

88 def 
	$load_SEM_state
 ( 
self
 , 
SEMstate
 = None ) :

89 if 
SEMstate
 != None :

90 
self
 . 
	=beam
 = 
SEMstate
 [ 'beam' ]

91 
self
 . 
	=accel
 = 
SEMstate
 [ 'accel' ]

92 return 
SEMstate
 
	}

95 def 
	$scale_channels
 ( 
self
 ) :

99 
self
 . 
	=DataArray
 = 
numpy
 . 
	`multiply
 ( 
self
 . 
rawDataArray
 , 
self
 . 
channels
 )

100 print "channels" , 
self
 . 
channels

101 
self
 . 
	=DisplayArray
 = 
numpy
 . 
	`average
 ( 
self
 . 
DataArray
 , 
axis
 = 2 ) 
	}

104 def 
	$set_channel_scale
 ( 
self
 ) :

108 
self
 . 
	=ADC_voltage_step
 = 20.0 / ( 0x40000 )

109 
self
 . 
	=channels
 = 
self
 . 
ADC_voltage_step
 / 
self
 . 
gain

110 return 
self
 . 
channels
 
	}

113 def 
	$set_position_scale
 ( 
self
 ) :

119 if 
self
 . 
cal
 != None :

121 
self
 . 
	=vMagScale
 = 
self
 . 
cal
 [ 'vMagScale' ]

122 
self
 . 
	=hMagScale
 = 
self
 . 
cal
 [ 'hMagScale' ]

124 
self
 . 
	=scanScaleH
 = 
self
 . 
	`scale
 ( 
self
 . 
hMagScale
 , 
self
 . 
scanMag
 )

125 
self
 . 
	=scanScaleV
 = 
self
 . 
	`scale
 ( 
self
 . 
vMagScale
 , 
self
 . 
scanMag
 )

127 
self
 . 
	=deltaH
 = ( 
self
 . 
stepH
 * 
self
 . 
pointsH
 ) * 
self
 . 
scanScaleH

128 
self
 . 
	=deltaV
 = ( 
self
 . 
stepV
 * 
self
 . 
pointsV
 ) * 
self
 . 
scanScaleV

129 
self
 . 
	=left
 = 
self
 . 
scanState
 . 
displayOffsets
 [ 0 ] * 
self
 . 
scanScaleH

130 
self
 . 
	=bottom
 = 
self
 . 
scanState
 . 
displayOffsets
 [ 1 ] * 
self
 . 
scanScaleV

133 
self
 . 
	=deltaH
 = 
self
 . 
pointsH

134 
self
 . 
	=deltaV
 = 
self
 . 
pointsV

135 
self
 . 
	=scanScaleH
 = 1.0

136 
self
 . 
	=scanScaleV
 = 1.0

137 
self
 . 
	=left
 = 0

138 
self
 . 
	=bottom
 = 0

140 
self
 . 
	=extent
 = ( 0 , 
self
 . 
deltaH
 , 0 , 
self
 . 
deltaV
 )

141 
self
 . 
	=displayExtent
 = ( 
self
 . 
left
 , 
self
 . 
deltaH
 + 
self
 . 
left
 , 
self
 . 
bottom
 , 
self
 . 
bottom
 + 
self
 . 
deltaV
 ) 
	}

144 @ 
	`staticmethod

145 def 
	$scale
 ( 
magscale
 , 
scanMag
 ) :

149 
	=scale
 = 
magscale
 / 
scanMag

150 return 
scale
 
	}

152 @ 
	`staticmethod

153 def 
	$step_from_distance
 ( 
stepDistance
 = 1 , 
scale
 = 1 ) :

157 
	=step
 = 
	`int
 ( 
stepDistance
 / 
scale
 )

158 if 
step
 == 0 :

159 
	=step
 = 1

160 return 
step
 
	}

163 @ 
	`staticmethod

164 def 
	$scale_extent
 ( 
extent
 , 
scale
 ) :

165 
	=extent
 = 
scanObjectUtils
 . 
	`scale_size
 ( 
extent
 , 
scale
 )

166 return 
extent
 
	}

169 @ 
	`staticmethod

170 def 
	$scan_points
 ( 
extent
 = 1 , 
step
 = 1 ) :

176 
	=points
 = 
	`int
 ( 
extent
 / 
step
 )

177 
	=spread
 = 
points
 * 
step

179 return 
points
 , 
spread
 
	}

184 @ 
	`staticmethod

185 def 
	$scan_bounds
 ( 
limits
 , 
offset
 , 
spread
 ) :

190 
	=vMin
 = 
	`int
 ( 
limits
 [ 1 ] + 
offset
 [ 1 ] )

191 
	=vMax
 = 
	`int
 ( 
limits
 [ 1 ] + 
offset
 [ 1 ] + 
spread
 [ 1 ] )

192 
	=hMin
 = 
	`int
 ( 
limits
 [ 0 ] + 
offset
 [ 0 ] )

193 
	=hMax
 = 
	`int
 ( 
limits
 [ 0 ] + 
offset
 [ 0 ] + 
spread
 [ 0 ] )

195 if 
vMin
 < - 0x7fff :

196 
	=vMin
 = - 0x7fff

197 if 
vMax
 > 0x7fff :

198 
	=vMax
 = 0x7fff

199 if 
hMin
 < - 0x7fff :

200 
	=vMin
 = - 0x7fff

201 if 
hMax
 > 0x7fff :

202 
	=hMin
 = 0x7fff

204 return 
hMin
 , 
hMax
 , 
vMin
 , 
vMax
 
	}

206 @ 
	`staticmethod

207 def 
	$makeNDataArray
 ( 
lenX
 , 
lenY
 , 
numsamples
 , 
channel
 ) :

208 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
lenY
 , 
lenX
 , 
numsamples
 , 
channel
 ] , 
numpy
 . 
int32
 )

209 return 
storedArray
 
	}

211 @ 
	`staticmethod

212 def 
	$makeDisplayArray
 ( 
lenX
 , 
lenY
 , 
channel
 ) :

213 
	=displayArray
 = 
numpy
 . 
	`zeros
 ( [ 
lenY
 , 
lenX
 , 
channel
 ] , 
numpy
 . 
float
 )

214 return 
displayArray
 
	}

217 @ 
	`staticmethod

218 def 
	$setDelay
 ( 
delayseconds
 ) :

223 
	=delayStep
 = 10e-9

224 
	=delay
 = 
numpy
 . 
	`uint32
 ( 
delayseconds
 / 
delayStep
 )

225 
	=delayFine
 = 
numpy
 . 
	`uint16
 ( 
delay
 & 0xFFFF )

226 
	=delayCoarse
 = 
numpy
 . 
	`uint16
 ( 
delay
 >> 16 )

227 print "delayFine" , 
delayFine
 , "delayCoarse" , 
delayCoarse
 , "delay" , 
delay

228 return 
delay
 , 
delayCoarse
 
	}

231 @ 
	`staticmethod

232 def 
	$compact_channel_info
 ( 
channelMask
 , 
units
 = None , 
gain
 = None , 
labels
 = None ) :

239 
	=count
 = 0

240 
	=c_units
 = [ ]

241 
	=c_labels
 = [ ]

242 
	=c_gain
 = [ ]

243 for 
n
 in 
	`range
 ( 6 ) :

244 if ( ( 
channelMask
 & ( 1 << 
n
 ) ) != False ) :

245 
c_units
 . 
	`append
 ( 
	`str
 ( 
units
 [ 
n
 ] ) )

246 
c_labels
 . 
	`append
 ( 
	`str
 ( 
labels
 [ 
n
 ] ) )

247 
c_gain
 . 
	`append
 ( 
	`float
 ( 
	`str
 ( 
gain
 [ 
n
 ] ) ) )

248 
	=c_gain
 = 
numpy
 . 
	`array
 ( 
c_gain
 , 
dtype
 = 'float' )

249 return 
c_units
 , 
c_labels
 , 
c_gain
 
	}

256 @ 
	`staticmethod

257 def 
	$add_profile
 ( 
startpoint
 , 
endpoint
 , 
Scan
 ) :

258 
Scan
 . 
profiles
 . 
	`append
 ( 
	`Profile
 ( 
startpoint
 = 
startpoint
 , 
endpoint
 = 
endpoint
 , 
Scan
 = 
Scan
 ) ) 
	}

262 class 
	cProfile
 ( ) :

264 def 
	$__init__
 ( 
self
 , 
name
 = None , 
startpoint
 = None , 
endpoint
 = None , 
Scan
 = None ) :

265 
self
 . 
	=name
 = 
	`str
 ( 
name
 )

266 
self
 . 
	=startpoint
 = 
startpoint

267 
self
 . 
	=endpoint
 = 
endpoint

268 
self
 . 
	`extract_profile
 ( 
Scan
 )

269 
self
 . 
	=gain
 = 
Scan
 . 
gain

270 
self
 . 
	=units
 = 
Scan
 . 
units

271 
self
 . 
	=angle
 = None 
	}

273 def 
	$extract_profile
 ( 
self
 , 
Scan
 ) :

274 if 
Scan
 == None :

278 
	=rotate
 = 
	`Rotation
 ( 
self
 . 
startpoint
 , 
self
 . 
endpoint
 , 
Scan
 )

279 
self
 . 
	=angle
 = 
rotate
 . 
angle

280 
self
 . 
	=positionScaleH
 = 
rotate
 . 
scaleH

281 
self
 . 
	=positionScaleV
 = 
rotate
 . 
scaleV

282 print "rotate.p0, rotate.p1" , 
rotate
 . 
p0
 , 
rotate
 . 
p1

283 print "rotate Date" , 
rotate
 . 
rData
 . 
shape

284 print "angle" , 
self
 . 
angle

285 if 
rotate
 . 
p0
 [ 0 ] < 
rotate
 . 
p1
 [ 0 ] :

286 
	=start
 = 
rotate
 . 
p0
 [ 0 ]

287 
	=end
 = 
rotate
 . 
p1
 [ 0 ]

289 
	=start
 = 
rotate
 . 
p1
 [ 0 ]

290 
	=end
 = 
rotate
 . 
p0
 [ 0 ]

291 
self
 . 
	=profileData
 = 
rotate
 . 
rData
 [ 
rotate
 . 
p0
 [ 1 ] , 
start
 : 
end
 , : , : ]

292 print "profile data shape" , 
self
 . 
profileData
 . 
shape

293 
self
 . 
	=profileDataAvg
 = 
numpy
 . 
	`average
 ( 
self
 . 
profileData
 , 
axis
 = 1 )

294 
self
 . 
	=Xposition
 = ( 
numpy
 . 
	`arange
 ( 
self
 . 
profileDataAvg
 . 
shape
 [ 0 ] ) + 
start
 ) * 
self
 . 
positionScaleH
 
	}

298 class 
	cTransport
 ( ) :

300 def 
	$__init__
 ( 
self
 , 
samples
 = 50 , 
channelMask
 = 1 , 
delay
 = 0.5 , 
Start
 = 0 , 
End
 = 2

301 , 
step
 = 0.2 , 
points
 = 50 , 
gain
 = 1 , 
gate
 = None , 
units
 = None , 
labels
 = None , 
name
 = None ) :

302 
self
 . 
	=name
 = 
name

303 
self
 . 
	=samples
 = 
samples

304 
self
 . 
	=created
 = 
	`strftime
 ( "%Y-%m-%d_%H-%M-%S" )

305 
self
 . 
	=delay
 = 
delay

306 
self
 . 
	=vstep
 = 20.0 / 0xffff

307 
self
 . 
	=gain
 = 
gain

308 
self
 . 
	=gate
 = 
gate

309 
self
 . 
	=start
 = 
Start
 / 
self
 . 
vstep

310 
self
 . 
	=channelMask
 = 
channelMask

311 
self
 . 
	=points
 = 
points

312 
self
 . 
	=pointsUp
 = 
	`int
 ( 
	`abs
 ( 
End
 / 
step
 ) ) + 1

313 
self
 . 
	=step
 = 
	`int
 ( 
step
 / 
self
 . 
vstep
 )

314 
self
 . 
	=end
 = 
self
 . 
step
 * ( 
self
 . 
pointsUp
 - 1 )

315 
self
 . 
	=pointsDown
 = 
self
 . 
pointsUp
 - 1

316 
self
 . 
	=dataIRaw
 = [ ]

317 
self
 . 
	=dataI
 = [ ]

318 
self
 . 
	=sentVoltage
 = [ ]

319 
self
 . 
	=dataIstd
 = [ ]

320 
self
 . 
	=soakTime
 = [ ] 
	}

323 class 
	cRotation
 ( ) :

324 def 
	$__init__
 ( 
self
 , 
startpoint
 = None , 
endpoint
 = None , 
scan
 = None ) :

325 
self
 . 
	=scaleH
 = 
scan
 . 
stepH
 * 
scan
 . 
scanScaleH

326 
self
 . 
	=scaleV
 = 
scan
 . 
stepV
 * 
scan
 . 
scanScaleV

327 
	=startpoint
 = [ 
startpoint
 [ 0 ] / 
self
 . 
scaleV
 , 
startpoint
 [ 1 ] / 
self
 . 
scaleH
 ]

328 
	=endpoint
 = [ 
endpoint
 [ 0 ] / 
self
 . 
scaleV
 , 
endpoint
 [ 1 ] / 
self
 . 
scaleH
 ]

329 print "startpoint" , 
startpoint
 , "endpoint" , 
endpoint

332 
self
 . 
	=rData
 , 
self
 . 
	=angle
 , 
self
 . 
	=p0
 , 
self
 . 
	=p1
 = 
scanObjectUtils
 . 
	`rotate_image_points
 ( 
startpoint
 , 
endpoint
 , 
scan
 . 
DataArray
 )

333 
self
 . 
	=rDisplayData
 = 
numpy
 . 
	`average
 ( 
self
 . 
rData
 , 2 )

334 print "r0" , 
self
 . 
p0
 , "r1" , 
self
 . 
p1

335 
self
 . 
	=r0
 = [ 
self
 . 
p0
 [ 0 ] * 
self
 . 
scaleH
 , 
self
 . 
p0
 [ 1 ] * 
self
 . 
scaleV
 ]

336 
self
 . 
	=r1
 = [ 
self
 . 
p1
 [ 0 ] * 
self
 . 
scaleH
 , 
self
 . 
p1
 [ 1 ] * 
self
 . 
scaleV
 ]

337 
self
 . 
	=p0
 = 
self
 . 
p0
 . 
	`round
 ( )

338 
self
 . 
	=p1
 = 
self
 . 
p1
 . 
	`round
 ( )

341 
	=left
 = 
self
 . 
rData
 . 
shape
 [ 1 ] * 
self
 . 
scaleH

342 
	=top
 = 
self
 . 
rData
 . 
shape
 [ 0 ] * 
self
 . 
scaleV

343 
self
 . 
	=extent
 = ( 0 , 
left
 , 0 , 
top
 )

344 print "angle " , 
self
 . 
angle
 
	}

351 class 
	creCenterSlice
 ( ) :

357 def 
	$__init__
 ( 
self
 , 
scan
 = None , 
kind
 = 'recentered' , 
name
 = None ) :

358 
self
 . 
	=profiles
 = [ ]

359 
self
 . 
	=offset
 = None

360 
self
 . 
	=scan
 = 
scan

361 
self
 . 
	=name
 = 
name

362 
self
 . 
	=kind
 = 
kind

363 
self
 . 
	=extent
 = None

364 
self
 . 
	=figures
 = None

365 
self
 . 
	=DisplayArray
 = None

366 
self
 . 
	=sourceExtent
 = None

367 
self
 . 
	=point
 = 1 
	}

371 def 
	$reCenter
 ( 
self
 , 
RefCH
 = 0 , 
margin
 = 11 , 
sobelAxis
 = 1 , 
Gaus_distance
 = 2 ) :

372 
self
 . 
	=margin
 = 
margin

373 
self
 . 
	=RefCH
 = 
RefCH

374 
self
 . 
	=sobelAxis
 = 
sobelAxis

375 
self
 . 
	=Gaus_distance
 = 
Gaus_distance
 """\n        takes the display array and the identified source of secondary channel\n        performs gaussian filter to remove noise before finding the gradient to identify the center \n\n        """

383 
self
 . 
	`getBounds
 ( )

384 
self
 . 
	=sliceData
 = 
self
 . 
scan
 . 
DisplayArray
 [ 
self
 . 
y
 : 
self
 . 
dy
 , 
self
 . 
x
 : 
self
 . 
dx
 , : ]

387 
self
 . 
	=Gaus
 = 
scipy
 . 
ndimage
 . 
	`gaussian_filter
 ( 
self
 . 
sliceData
 [ : , : , 
self
 . 
RefCH
 ] , 
self
 . 
Gaus_distance
 )

388 
self
 . 
	=sx
 = 
scipy
 . 
ndimage
 . 
	`sobel
 ( 
self
 . 
Gaus
 , 
axis
 = 
self
 . 
sobelAxis
 , 
mode
 = 'reflect' )

389 
self
 . 
	=C
 = ( 
self
 . 
sx
 . 
	`argmax
 ( 
axis
 = 
self
 . 
sobelAxis
 ) + 
self
 . 
sx
 . 
	`argmin
 ( 
axis
 = 
self
 . 
sobelAxis
 ) ) / 2

392 
self
 . 
	=distance
 = ( 
self
 . 
sx
 . 
	`argmin
 ( 
axis
 = 1 ) - 
self
 . 
sx
 . 
	`argmax
 ( 
axis
 = 1 ) )

393 
self
 . 
	=radius
 = 
	`int
 ( 
self
 . 
distance
 . 
	`mean
 ( ) / 2 )

394 
self
 . 
	=offset
 = 
self
 . 
radius
 + 
self
 . 
margin

396 
	=Y
 = 
numpy
 . 
	`arange
 ( 
self
 . 
C
 . 
shape
 [ 0 ] )

397 
	=Dx
 = 2 * ( 
self
 . 
offset
 )

398 
	=Dy
 = 
self
 . 
sx
 . 
shape
 [ 0 ]

401 
self
 . 
	=DisplayArray
 = 
numpy
 . 
	`zeros
 ( ( 
Dy
 , 
Dx
 , 
self
 . 
sliceData
 . 
shape
 [ - 1 ] ) )

402 
self
 . 
	=GausDisplayArray
 = 
numpy
 . 
	`zeros
 ( ( 
Dy
 , 
Dx
 , 
self
 . 
sliceData
 . 
shape
 [ - 1 ] ) )

414 for 
i
 in 
	`range
 ( 
self
 . 
sx
 . 
shape
 [ 0 ] ) :

415 
	=In1
 = 
self
 . 
C
 [ 
i
 ] - 
self
 . 
offset

416 
	=In2
 = 
self
 . 
C
 [ 
i
 ] + 
self
 . 
offset

418 if 
In2
 <= 
self
 . 
sliceData
 . 
shape
 [ 
self
 . 
sobelAxis
 ] and 
In1
 >= 0 :

419 
self
 . 
	=DisplayArray
 [ 
i
 , 0 : ( 
Dx
 ) , : ] = 
self
 . 
sliceData
 [ 
i
 , 
In1
 : 
In2
 , : ]

421 
self
 . 
	`sliceExtent
 ( )

422 
self
 . 
	`set_GausDisplayArray
 ( 
point
 = 
self
 . 
point
 ) 
	}

425 def 
	$set_GausDisplayArray
 ( 
self
 , 
point
 = 1 ) :

426 for 
i
 in 
	`range
 ( 
self
 . 
DisplayArray
 . 
shape
 [ - 1 ] ) :

427 
self
 . 
	=GausDisplayArray
 [ : , : , 
i
 ] = 
scipy
 . 
ndimage
 . 
	`gaussian_filter
 ( 
self
 . 
DisplayArray
 [ : , : , 
i
 ] , 
point
 ) 
	}

431 def 
	$sliceExtent
 ( 
self
 ) :

437 print 
self
 . 
scan
 . 
stepH
 , 
self
 . 
scan
 . 
stepV

440 print 
self
 . 
scan
 . 
scanScaleH
 , 
self
 . 
scan
 . 
scanScaleV

442 
self
 . 
	=deltaH
 = 
self
 . 
scan
 . 
stepH
 * 
self
 . 
scan
 . 
scanScaleH
 * 
self
 . 
DisplayArray
 . 
shape
 [ 1 ]

443 
self
 . 
	=deltaV
 = 
self
 . 
scan
 . 
stepV
 * 
self
 . 
scan
 . 
scanScaleV
 * 
self
 . 
DisplayArray
 . 
shape
 [ 0 ]

445 
self
 . 
	=extent
 = ( 0 , 
self
 . 
deltaH
 , 0 , 
self
 . 
deltaV
 )

446 print 
self
 . 
extent
 
	}

449 def 
	$addSlice
 ( 
self
 ) :

450 
self
 . 
scan
 . 
slices
 . 
	`append
 ( 
self
 ) 
	}

453 def 
	$getBounds
 ( 
self
 ) :

458 
self
 . 
	=scaleH
 = 
self
 . 
scan
 . 
stepH
 * 
self
 . 
scan
 . 
scanScaleH

459 
self
 . 
	=scaleV
 = 
self
 . 
scan
 . 
stepV
 * 
self
 . 
scan
 . 
scanScaleV

462 
self
 . 
	=x
 = 
	`int
 ( 
	`round
 ( 
self
 . 
sourceExtent
 [ 0 ] / 
self
 . 
scaleH
 ) )

463 
self
 . 
	=dx
 = 
	`int
 ( 
	`round
 ( 
self
 . 
sourceExtent
 [ 2 ] / 
self
 . 
scaleH
 ) )

464 
self
 . 
	=y
 = 
	`int
 ( 
	`round
 ( 
self
 . 
sourceExtent
 [ 1 ] / 
self
 . 
scaleV
 ) )

465 
self
 . 
	=dy
 = 
	`int
 ( 
	`round
 ( 
self
 . 
sourceExtent
 [ 3 ] / 
self
 . 
scaleV
 ) )

467 print 
self
 . 
x
 , 
self
 . 
dx
 , 
self
 . 
y
 , 
self
 . 
dy
 
	}

473 class 
	cscanObjectUtils
 :

475 @ 
	`staticmethod

476 def 
	$getMaxMin
 ( 
inputArray
 , 
axisIndex
 , 
center
 , 
threshold
 , 
channel
 ) :

484 
	=axisindex
 = 
axisIndex

485 
	=posMax
 = 
numpy
 . 
	`argmax
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

486 
	=posMin
 = 
numpy
 . 
	`argmin
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

487 
	=valMax
 = 
numpy
 . 
	`amax
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

488 
	=valMin
 = 
numpy
 . 
	`amin
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

489 
	=traceValue
 = [ ]

490 
	=tracePosition
 = [ ]

492 for 
n
 in 
	`range
 ( 0 , 
	`len
 ( 
posMax
 ) ) :

493 if ( 
	`abs
 ( 
valMin
 [ 
n
 ] ) >= 
	`abs
 ( 
valMax
 [ 
n
 ] ) ) and ( 
	`abs
 ( 
center
 - 
posMin
 [ 
n
 ] ) < 
threshold
 ) :

494 
traceValue
 . 
	`append
 ( 
valMin
 [ 
n
 ] )

495 
tracePosition
 . 
	`append
 ( 
posMin
 [ 
n
 ] )

496 elif ( 
	`abs
 ( 
valMax
 [ 
n
 ] ) >= 
	`abs
 ( 
valMin
 [ 
n
 ] ) ) and ( 
	`abs
 ( 
center
 - 
posMax
 [ 
n
 ] ) < 
threshold
 ) :

497 
traceValue
 . 
	`append
 ( 
valMax
 [ 
n
 ] )

498 
tracePosition
 . 
	`append
 ( 
posMax
 [ 
n
 ] )

500 
traceValue
 . 
	`append
 ( 
inputArray
 [ 
center
 ] [ 
n
 ] [ 0 ] )

501 
tracePosition
 . 
	`append
 ( 
center
 )

503 return 
traceValue
 , 
tracePosition
 , 
valMax
 , 
posMax
 , 
valMin
 , 
posMin
 
	}

508 @ 
	`staticmethod

509 def 
	$scale_size
 ( 
inPut
 = None , 
scale
 = None ) :

513 if 
inPut
 . 
__class__
 == 
numpy
 . 
ndarray
 :

514 
	=outPut
 = ( 
inPut
 / 
scale
 ) . 
	`astype
 ( 
int
 )

516 
	=outPut
 = 
	`int
 ( 
inPut
 / 
scale
 )

517 return 
outPut
 
	}

521 @ 
	`staticmethod

522 def 
	$pickle_scanobject
 ( 
scanobject
 , 
filename
 ) :

526 
pickle
 . 
	`dump
 ( 
scanobject
 , 
	`open
 ( 
	`str
 ( 
filename
 ) , 'wb' ) , 
protocol
 = 1 ) 
	}

529 @ 
	`staticmethod

530 def 
	$load_scanobject
 ( 
filename
 ) :

534 
	=Scan
 = 
pickle
 . 
	`load
 ( 
	`open
 ( 
	`str
 ( 
filename
 ) , 'rb' ) )

535 return 
Scan
 
	}

537 @ 
	`staticmethod

538 def 
	$rotateImage
 ( 
startOffset
 , 
endOffset
 , 
data
 ) :

539 
	=x0
 = 
startOffset
 [ 0 ]

540 
	=y0
 = 
startOffset
 [ 1 ]

541 
	=x1
 = 
endOffset
 [ 0 ]

542 
	=y1
 = 
endOffset
 [ 1 ]

543 
	=dx
 = 
x1
 - 
x0

544 
	=dy
 = 
y1
 - 
y0

545 
	=angle
 = 
numpy
 . 
	`angle
 ( 
numpy
 . 
	`complex
 ( 
dx
 , 
dy
 ) , 
deg
 = True )

546 print 
angle

548 
	=rdata
 = 
scipy
 . 
ndimage
 . 
interpolation
 . 
	`rotate
 ( 
data
 , 
angle
 )

550 return 
rdata
 , 
angle
 
	}

552 @ 
	`staticmethod

553 def 
	$swap_scan_axes
 ( 
scan
 ) :

554 
scan
 . 
	=DataArray
 = 
scan
 . 
DataArray
 . 
	`swapaxes
 ( 0 , 1 )

555 
scan
 . 
	=DisplayArray
 = 
scan
 . 
DisplayArray
 . 
	`swapaxes
 ( 0 , 1 )

556 
scan
 . 
	=rawDataArray
 = 
scan
 . 
rawDataArray
 . 
	`swapaxes
 ( 0 , 1 )

557 
scan
 . 
	=extent
 = ( 0 , 
scan
 . 
extent
 [ 3 ] , 0 , 
scan
 . 
extent
 [ 1 ] )

558 return 
scan
 
	}

560 @ 
	`staticmethod

561 def 
	$flip_scan_lr
 ( 
scan
 ) :

562 
scan
 . 
	=DataArray
 = 
numpy
 . 
	`fliplr
 ( 
scan
 . 
DataArray
 )

563 
scan
 . 
	=DisplayArray
 = 
numpy
 . 
	`fliplr
 ( 
scan
 . 
DisplayArray
 )

564 
scan
 . 
	=rawDataArray
 = 
numpy
 . 
	`fliplr
 ( 
scan
 . 
rawDataArray
 )

565 return 
scan
 
	}

567 @ 
	`staticmethod

568 def 
	$flip_scan_ud
 ( 
scan
 ) :

569 
scan
 . 
	=DataArray
 = 
numpy
 . 
	`flipud
 ( 
scan
 . 
DataArray
 )

570 
scan
 . 
	=DisplayArray
 = 
numpy
 . 
	`flipud
 ( 
scan
 . 
DisplayArray
 )

571 
scan
 . 
	=rawDataArray
 = 
numpy
 . 
	`flipud
 ( 
scan
 . 
rawDataArray
 )

572 return 
scan
 
	}

577 @ 
	`staticmethod

578 def 
	$rotate_point
 ( 
point
 , 
angle
 ) :

579 
	=angle
 = 
angle
 * 
math
 . 
pi
 / 180

580 
	=c
 = 
numpy
 . 
	`cos
 ( 
angle
 )

581 
	=s
 = 
numpy
 . 
	`sin
 ( 
angle
 )

582 
	=x
 = 
point
 [ 0 ]

583 
	=y
 = 
point
 [ 1 ]

584 
	=xprime
 = 
x
 * 
c
 + 
y
 * 
s

585 
	=yprime
 = - 
x
 * 
s
 + 
y
 * 
c

587 return [ 
xprime
 , 
yprime
 ] 
	}

590 @ 
	`staticmethod

591 def 
	$rotate_image_points
 ( 
startOffset
 , 
endOffset
 , 
data
 ) :

592 
	=rdata
 , 
	=angle
 = 
scanObjectUtils
 . 
	`rotateImage
 ( 
startOffset
 , 
endOffset
 , 
data
 )

593 
	=xoffset
 = ( 
data
 . 
shape
 [ 1 ] - 1 ) / 2.0

594 
	=yoffset
 = ( 
data
 . 
shape
 [ 0 ] - 1 ) / 2.0

595 print "xoffset" , 
xoffset
 , "yoffset" , 
yoffset

596 
	=p0
 = [ 
startOffset
 [ 0 ] - 
xoffset
 , 
startOffset
 [ 1 ] - 
yoffset
 ]

597 
	=p1
 = [ 
endOffset
 [ 0 ] - 
xoffset
 , 
endOffset
 [ 1 ] - 
yoffset
 ]

598 print "p0" , 
p0
 , "p1" , 
p1

599 
	=rxOff
 = ( 
rdata
 . 
shape
 [ 0 ] - 1 ) / 2.0

600 
	=ryOff
 = ( 
rdata
 . 
shape
 [ 1 ] - 1 ) / 2.0

601 print "rxoff" , 
rxOff
 , "ryOff" , 
ryOff

602 
	=rstart
 = 
scanObjectUtils
 . 
	`rotate_point
 ( 
p0
 , 
angle
 )

603 
	=rend
 = 
scanObjectUtils
 . 
	`rotate_point
 ( 
p1
 , 
angle
 )

604 print "rstart" , 
rstart
 , "rend" , 
rend

605 
	=r0
 = 
numpy
 . 
	`array
 ( [ 
rstart
 [ 0 ] + 
ryOff
 , 
rstart
 [ 1 ] + 
rxOff
 ] )

606 
	=r1
 = 
numpy
 . 
	`array
 ( [ 
rend
 [ 0 ] + 
ryOff
 , 
rend
 [ 1 ] + 
rxOff
 ] )

608 return 
rdata
 , 
angle
 , 
r0
 , 
r1
 
	}


	@./reCenterSlice.py

10 from 
	~PyQt4
 import 
QtCore
 , 
QtGui

13 
	=_fromUtf8
 = 
QtCore
 . 
QString
 . 
fromUtf8

14 except 
AttributeError
 :

15 def 
	$_fromUtf8
 ( 
s
 ) :

16 return 
s
 
	}

19 
	=_encoding
 = 
QtGui
 . 
QApplication
 . 
UnicodeUTF8

20 def 
	$_translate
 ( 
context
 , 
text
 , 
disambig
 ) :

21 return 
QtGui
 . 
QApplication
 . 
	`translate
 ( 
context
 , 
text
 , 
disambig
 , 
_encoding
 ) 
	}

22 except 
AttributeError
 :

23 def 
	$_translate
 ( 
context
 , 
text
 , 
disambig
 ) :

24 return 
QtGui
 . 
QApplication
 . 
	`translate
 ( 
context
 , 
text
 , 
disambig
 ) 
	}

26 class 
	cUi_ReCenter_Slice
 ( 
object
 ) :

27 def 
	$setupUi
 ( 
self
 , 
ReCenter_Slice
 ) :

28 
ReCenter_Slice
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ReCenter_Slice" ) )

29 
ReCenter_Slice
 . 
	`resize
 ( 657 , 925 )

30 
self
 . 
	=Horizontal
 = 
QtGui
 . 
	`QWidget
 ( 
ReCenter_Slice
 )

31 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

32 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

33 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

34 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
Horizontal
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

35 
self
 . 
Horizontal
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

36 
self
 . 
Horizontal
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Horizontal" ) )

37 
self
 . 
	=verticalLayout
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Horizontal
 )

38 
self
 . 
verticalLayout
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout" ) )

39 
self
 . 
	=horizontalLayout
 = 
QtGui
 . 
	`QHBoxLayout
 ( )

40 
self
 . 
horizontalLayout
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout" ) )

41 
self
 . 
	=widget
 = 
	`MplWidget
 ( 
self
 . 
Horizontal
 )

42 
self
 . 
widget
 . 
	`setEnabled
 ( True )

43 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

44 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

45 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

46 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
widget
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

47 
self
 . 
widget
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

48 
self
 . 
widget
 . 
	`setMaximumSize
 ( 
QtCore
 . 
	`QSize
 ( 1600 , 1200 ) )

49 
self
 . 
widget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "widget" ) )

50 
self
 . 
horizontalLayout
 . 
	`addWidget
 ( 
self
 . 
widget
 )

51 
self
 . 
verticalLayout
 . 
	`addLayout
 ( 
self
 . 
horizontalLayout
 )

52 
ReCenter_Slice
 . 
	`setCentralWidget
 ( 
self
 . 
Horizontal
 )

53 
self
 . 
	=menubar
 = 
QtGui
 . 
	`QMenuBar
 ( 
ReCenter_Slice
 )

54 
self
 . 
menubar
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 0 , 657 , 25 ) )

55 
self
 . 
menubar
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "menubar" ) )

56 
ReCenter_Slice
 . 
	`setMenuBar
 ( 
self
 . 
menubar
 )

57 
self
 . 
	=statusbar
 = 
QtGui
 . 
	`QStatusBar
 ( 
ReCenter_Slice
 )

58 
self
 . 
statusbar
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "statusbar" ) )

59 
ReCenter_Slice
 . 
	`setStatusBar
 ( 
self
 . 
statusbar
 )

60 
self
 . 
	=toolBar
 = 
QtGui
 . 
	`QToolBar
 ( 
ReCenter_Slice
 )

61 
self
 . 
toolBar
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "toolBar" ) )

62 
ReCenter_Slice
 . 
	`addToolBar
 ( 
QtCore
 . 
Qt
 . 
TopToolBarArea
 , 
self
 . 
toolBar
 )

63 
self
 . 
	=dockWidget
 = 
QtGui
 . 
	`QDockWidget
 ( 
ReCenter_Slice
 )

64 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

65 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

66 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

67 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
dockWidget
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

68 
self
 . 
dockWidget
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

69 
self
 . 
dockWidget
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 300 , 865 ) )

70 
self
 . 
dockWidget
 . 
	`setFloating
 ( False )

71 
self
 . 
dockWidget
 . 
	`setAllowedAreas
 ( 
QtCore
 . 
Qt
 . 
LeftDockWidgetArea
 )

72 
self
 . 
dockWidget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "dockWidget" ) )

73 
self
 . 
	=dockWidgetContents
 = 
QtGui
 . 
	`QWidget
 ( )

74 
self
 . 
dockWidgetContents
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "dockWidgetContents" ) )

75 
self
 . 
	=frame
 = 
QtGui
 . 
	`QFrame
 ( 
self
 . 
dockWidgetContents
 )

76 
self
 . 
frame
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 10 , 293 , 831 ) )

77 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

78 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

79 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

80 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
frame
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

81 
self
 . 
frame
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

82 
self
 . 
frame
 . 
	`setFrameShape
 ( 
QtGui
 . 
QFrame
 . 
StyledPanel
 )

83 
self
 . 
frame
 . 
	`setFrameShadow
 ( 
QtGui
 . 
QFrame
 . 
Raised
 )

84 
self
 . 
frame
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "frame" ) )

85 
self
 . 
	=layoutWidget_6
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame
 )

86 
self
 . 
layoutWidget_6
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 120 , 10 , 102 , 58 ) )

87 
self
 . 
layoutWidget_6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget_6" ) )

88 
self
 . 
	=gridLayout_3
 = 
QtGui
 . 
	`QGridLayout
 ( 
self
 . 
layoutWidget_6
 )

89 
self
 . 
gridLayout_3
 . 
	`setMargin
 ( 0 )

90 
self
 . 
gridLayout_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gridLayout_3" ) )

91 
self
 . 
	=label_9
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_6
 )

92 
self
 . 
label_9
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_9" ) )

93 
self
 . 
gridLayout_3
 . 
	`addWidget
 ( 
self
 . 
label_9
 , 0 , 0 , 1 , 1 )

94 
self
 . 
	=set_margin
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
layoutWidget_6
 )

95 
self
 . 
set_margin
 . 
	`setMinimum
 ( 1 )

96 
self
 . 
set_margin
 . 
	`setMaximum
 ( 100 )

97 
self
 . 
set_margin
 . 
	`setSingleStep
 ( 1 )

98 
self
 . 
set_margin
 . 
	`setProperty
 ( "value" , 10 )

99 
self
 . 
set_margin
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "set_margin" ) )

100 
self
 . 
gridLayout_3
 . 
	`addWidget
 ( 
self
 . 
set_margin
 , 0 , 1 , 1 , 1 )

101 
self
 . 
	=label_10
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_6
 )

102 
self
 . 
label_10
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_10" ) )

103 
self
 . 
gridLayout_3
 . 
	`addWidget
 ( 
self
 . 
label_10
 , 1 , 0 , 1 , 1 )

104 
self
 . 
	=sobelAxis
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
layoutWidget_6
 )

105 
self
 . 
sobelAxis
 . 
	`setMinimum
 ( 0 )

106 
self
 . 
sobelAxis
 . 
	`setMaximum
 ( 1 )

107 
self
 . 
sobelAxis
 . 
	`setSingleStep
 ( 1 )

108 
self
 . 
sobelAxis
 . 
	`setProperty
 ( "value" , 1 )

109 
self
 . 
sobelAxis
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "sobelAxis" ) )

110 
self
 . 
gridLayout_3
 . 
	`addWidget
 ( 
self
 . 
sobelAxis
 , 1 , 1 , 1 , 1 )

111 
self
 . 
	=layoutWidget_7
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame
 )

112 
self
 . 
layoutWidget_7
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 30 , 80 , 199 , 74 ) )

113 
self
 . 
layoutWidget_7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget_7" ) )

114 
self
 . 
	=gridLayout_4
 = 
QtGui
 . 
	`QGridLayout
 ( 
self
 . 
layoutWidget_7
 )

115 
self
 . 
gridLayout_4
 . 
	`setMargin
 ( 0 )

116 
self
 . 
gridLayout_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gridLayout_4" ) )

117 
self
 . 
	=label_11
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_7
 )

118 
self
 . 
label_11
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_11" ) )

119 
self
 . 
gridLayout_4
 . 
	`addWidget
 ( 
self
 . 
label_11
 , 0 , 0 , 1 , 1 )

120 
self
 . 
	=viewCH_comboBox
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
layoutWidget_7
 )

121 
self
 . 
viewCH_comboBox
 . 
	`setEditable
 ( False )

122 
self
 . 
viewCH_comboBox
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "viewCH_comboBox" ) )

123 
self
 . 
gridLayout_4
 . 
	`addWidget
 ( 
self
 . 
viewCH_comboBox
 , 0 , 1 , 1 , 1 )

124 
self
 . 
	=label_12
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_7
 )

125 
self
 . 
label_12
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_12" ) )

126 
self
 . 
gridLayout_4
 . 
	`addWidget
 ( 
self
 . 
label_12
 , 1 , 0 , 1 , 1 )

127 
self
 . 
	=referenceCH
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
layoutWidget_7
 )

128 
self
 . 
referenceCH
 . 
	`setEditable
 ( False )

129 
self
 . 
referenceCH
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "referenceCH" ) )

130 
self
 . 
gridLayout_4
 . 
	`addWidget
 ( 
self
 . 
referenceCH
 , 1 , 1 , 1 , 1 )

131 
self
 . 
	=layoutWidget_8
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame
 )

132 
self
 . 
layoutWidget_8
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 170 , 261 , 94 ) )

133 
self
 . 
layoutWidget_8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget_8" ) )

134 
self
 . 
	=verticalLayout_6
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
layoutWidget_8
 )

135 
self
 . 
verticalLayout_6
 . 
	`setMargin
 ( 0 )

136 
self
 . 
verticalLayout_6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_6" ) )

137 
self
 . 
	=verticalLayout_7
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

138 
self
 . 
verticalLayout_7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_7" ) )

139 
self
 . 
	=label_13
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_8
 )

140 
self
 . 
label_13
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_13" ) )

141 
self
 . 
verticalLayout_7
 . 
	`addWidget
 ( 
self
 . 
label_13
 )

142 
self
 . 
	=SliceName
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget_8
 )

143 
self
 . 
SliceName
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SliceName" ) )

144 
self
 . 
verticalLayout_7
 . 
	`addWidget
 ( 
self
 . 
SliceName
 )

145 
self
 . 
verticalLayout_6
 . 
	`addLayout
 ( 
self
 . 
verticalLayout_7
 )

146 
self
 . 
	=verticalLayout_8
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

147 
self
 . 
verticalLayout_8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_8" ) )

148 
self
 . 
	=label_14
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_8
 )

149 
self
 . 
label_14
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_14" ) )

150 
self
 . 
verticalLayout_8
 . 
	`addWidget
 ( 
self
 . 
label_14
 )

151 
self
 . 
	=ParentName
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget_8
 )

152 
self
 . 
ParentName
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ParentName" ) )

153 
self
 . 
verticalLayout_8
 . 
	`addWidget
 ( 
self
 . 
ParentName
 )

154 
self
 . 
verticalLayout_6
 . 
	`addLayout
 ( 
self
 . 
verticalLayout_8
 )

155 
self
 . 
	=ColorMap
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
frame
 )

156 
self
 . 
ColorMap
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 300 , 91 , 25 ) )

157 
self
 . 
ColorMap
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ColorMap" ) )

158 
self
 . 
	=rColorMap
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
frame
 )

159 
self
 . 
rColorMap
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 120 , 300 , 91 , 21 ) )

160 
self
 . 
rColorMap
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "rColorMap" ) )

161 
self
 . 
	=label
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame
 )

162 
self
 . 
label
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 280 , 58 , 15 ) )

163 
self
 . 
label
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label" ) )

164 
self
 . 
	=colorbar
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
frame
 )

165 
self
 . 
colorbar
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 200 , 300 , 91 , 21 ) )

166 
self
 . 
colorbar
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "colorbar" ) )

167 
self
 . 
	=layoutWidget
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame
 )

168 
self
 . 
layoutWidget
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 90 , 490 , 186 , 29 ) )

169 
self
 . 
layoutWidget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget" ) )

170 
self
 . 
	=horizontalLayout_2
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
layoutWidget
 )

171 
self
 . 
horizontalLayout_2
 . 
	`setMargin
 ( 0 )

172 
self
 . 
horizontalLayout_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_2" ) )

173 
self
 . 
	=addSlice
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget
 )

174 
self
 . 
addSlice
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "addSlice" ) )

175 
self
 . 
horizontalLayout_2
 . 
	`addWidget
 ( 
self
 . 
addSlice
 )

176 
self
 . 
	=saveSlice
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget
 )

177 
self
 . 
saveSlice
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "saveSlice" ) )

178 
self
 . 
horizontalLayout_2
 . 
	`addWidget
 ( 
self
 . 
saveSlice
 )

179 
self
 . 
	=Filter
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
frame
 )

180 
self
 . 
Filter
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 330 , 61 , 21 ) )

181 
self
 . 
Filter
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Filter" ) )

182 
self
 . 
	=filterBox
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
frame
 )

183 
self
 . 
filterBox
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 80 , 330 , 52 , 25 ) )

184 
self
 . 
filterBox
 . 
	`setMinimum
 ( 1 )

185 
self
 . 
filterBox
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "filterBox" ) )

186 
self
 . 
dockWidget
 . 
	`setWidget
 ( 
self
 . 
dockWidgetContents
 )

187 
ReCenter_Slice
 . 
	`addDockWidget
 ( 
QtCore
 . 
Qt
 . 
	`DockWidgetArea
 ( 1 ) , 
self
 . 
dockWidget
 )

189 
self
 . 
	`retranslateUi
 ( 
ReCenter_Slice
 )

190 
self
 . 
viewCH_comboBox
 . 
	`setCurrentIndex
 ( - 1 )

191 
self
 . 
referenceCH
 . 
	`setCurrentIndex
 ( - 1 )

192 
QtCore
 . 
QMetaObject
 . 
	`connectSlotsByName
 ( 
ReCenter_Slice
 ) 
	}

194 def 
	$retranslateUi
 ( 
self
 , 
ReCenter_Slice
 ) :

195 
ReCenter_Slice
 . 
	`setWindowTitle
 ( 
	`_translate
 ( "ReCenter_Slice" , "ReCenter Slice" , None ) )

196 
self
 . 
toolBar
 . 
	`setWindowTitle
 ( 
	`_translate
 ( "ReCenter_Slice" , "toolBar" , None ) )

197 
self
 . 
label_9
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Margin" , None ) )

198 
self
 . 
label_10
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Axis" , None ) )

199 
self
 . 
label_11
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "View channel" , None ) )

200 
self
 . 
label_12
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Reference channel" , None ) )

201 
self
 . 
label_13
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Slice Name" , None ) )

202 
self
 . 
SliceName
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "None" , None ) )

203 
self
 . 
label_14
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Parent:" , None ) )

204 
self
 . 
ParentName
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "TextLabel" , None ) )

205 
self
 . 
rColorMap
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "reverse" , None ) )

206 
self
 . 
label
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "colormap" , None ) )

207 
self
 . 
colorbar
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "colorbar" , None ) )

208 
self
 . 
addSlice
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Add to Scan" , None ) )

209 
self
 . 
saveSlice
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "Save to file" , None ) )

210 
self
 . 
Filter
 . 
	`setText
 ( 
	`_translate
 ( "ReCenter_Slice" , "filter" , None ) ) 
	}

212 from 
	~mplwidget
 import 
MplWidget


	@./EbicDataSet.py

2 import 
	~array

4 class 
	cEbicScanData
 ( ) :

6 
	=rawData
 = None

7 
	=xSize
 = 0

8 
	=ySize
 = 0

9 
	=sampleDepth
 = 0

10 
	=chCount
 = 0

12 def 
	$__init__
 ( 
self
 , 
xSize
 , 
ySize
 , 
sampleDepth
 , 
chCount
 ) :

13 
self
 . 
	=rawData
 = 
array
 . 
	`array
 ( 'h' )

14 
self
 . 
	=xSize
 = 
xSize

15 
self
 . 
	=ySize
 = 
ySize

16 
self
 . 
	=sampleDepth
 = 
sampleDepth

17 
self
 . 
	=chCount
 = 
chCount
 
	}

19 def 
	$append
 ( 
self
 , 
inArray
 ) :

20 if ( 
	`len
 ( 
self
 . 
rawData
 ) + 
	`len
 ( 
inArray
 ) > 
self
 . 
	`expected_data_size
 ( ) ) :

22 % ( 
	`len
 ( 
self
 . 
rawData
 ) , 
	`len
 ( 
inArray
 ) , 
self
 . 
	`expected_data_size
 ( ) )

23 
self
 . 
	=rawData
 += 
inArray
 
	}

25 def 
	$expected_data_size
 ( 
self
 ) :

26 return ( 
self
 . 
xSize
 * 
self
 . 
ySize
 * 
self
 . 
sampleDepth
 * 
self
 . 
chCount
 ) 
	}

29 if 
__name__
 == "__main__" :

31 
	=data
 = 
	`EbicScanData
 ( 16 , 16 , 16 , 16 )

32 
data
 . 
	`append
 ( 
array
 . 
	`array
 ( 'h' , ( 12 , 12 , 12 , 12 ) ) )

33 print 
data


	@./rCenSliceUI.py

2 from 
	~__future__
 import 
with_statement

4 import 
	~numpy

5 import 
	~scipy

6 import 
	~scipy.ndimage

7 import 
	~h5py

8 import 
	~Mfigure

9 import 
	~math

10 import 
	~pylab

11 import 
	~lineProfile

13 import 
	~time

15 import 
	~EbicDataManager

17 import 
	~scanUpdate
 , 
	~edm

18 import 
	~thread
 , 
	~Queue

19 import 
	~config

20 import 
	~scanobject

23 import 
	~numpy

25 from 
	~scipy
 import 
mgrid

26 from 
	~time
 import 
strftime

38 import 
	~numpy
 as 
np

42 import 
	~sys

45 from 
	~PyQt4.QtCore
 import *

47 from 
	~PyQt4.QtGui
 import *

50 from 
	~qtdesigner
 import 
Ui_MplMainWindow

52 from 
	~reCenterSlice
 import 
Ui_ReCenter_Slice

54 class 
	cReCenterSliceUI
 ( 
QMainWindow
 , 
Ui_ReCenter_Slice
 ) :

56 def 
	$__init__
 ( 
self
 , 
parent
 = None , 
scan
 = None , 
callback
 = None , 
mainUI
 = None ) :

57 
Ui_ReCenter_Slice
 . 
	`__init__
 ( 
self
 )

58 
QMainWindow
 . 
	`__init__
 ( 
self
 )

62 
self
 . 
	`setupUi
 ( 
self
 )

63 
self
 . 
	=activeSlice
 = None

64 
self
 . 
	=mainUI
 = 
mainUI

65 
self
 . 
	=activeCh
 = 0

66 
self
 . 
	=scan
 = 
scan

67 
self
 . 
	=callback
 = 
callback

68 
self
 . 
ParentName
 . 
	`setText
 ( 
self
 . 
scan
 . 
name
 )

69 
self
 . 
ColorMap
 . 
	`addItems
 ( 
pylab
 . 
cm
 . 
_cmapnames
 )

70 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
afmhot

71 
self
 . 
	=cmapindex
 = 0

72 
self
 . 
	`update_view_Ch_index
 ( )

73 
self
 . 
	`update_ref_Ch_index
 ( )

74 
self
 . 
	=point
 = 1

77 
self
 . 
	=refCH
 = 0

78 
self
 . 
	=margin
 = 10

79 
self
 . 
	=axis
 = 1

80 
self
 . 
	=Gaus
 = 2

86 
QObject
 . 
	`connect
 ( 
self
 . 
addSlice
 , 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
temp_slice_append_to_scan
 )

87 
QObject
 . 
	`connect
 ( 
self
 . 
viewCH_comboBox
 , 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_activeCH
 )

88 
QObject
 . 
	`connect
 ( 
self
 . 
set_margin
 , 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
update_Margin
 )

89 
QObject
 . 
	`connect
 ( 
self
 . 
referenceCH
 , 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_ReferenceCH
 )

90 
QObject
 . 
	`connect
 ( 
self
 . 
sobelAxis
 , 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
update_Axis
 )

91 
QObject
 . 
	`connect
 ( 
self
 . 
saveSlice
 , 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
save_slice
 )

92 
QObject
 . 
	`connect
 ( 
self
 . 
ColorMap
 , 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
change_cmap
 )

93 
QObject
 . 
	`connect
 ( 
self
 . 
rColorMap
 , 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
set_reverse_cmap
 )

94 
QObject
 . 
	`connect
 ( 
self
 . 
colorbar
 , 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
set_colorbar
 )

95 
QObject
 . 
	`connect
 ( 
self
 . 
filterBox
 , 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
set_filter_point
 )

96 
QObject
 . 
	`connect
 ( 
self
 . 
Filter
 , 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
set_filter
 )

99 
self
 . 
	`set_tempSlice
 ( ) 
	}

102 def 
	$update_view_Ch_index
 ( 
self
 ) :

103 for 
i
 in 
	`range
 ( 0 , 
self
 . 
scan
 . 
channelCount
 ) :

104 
self
 . 
viewCH_comboBox
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) ) 
	}

106 def 
	$update_ref_Ch_index
 ( 
self
 ) :

107 for 
i
 in 
	`range
 ( 0 , 
self
 . 
scan
 . 
channelCount
 ) :

108 
self
 . 
referenceCH
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) ) 
	}

110 def 
	$getboundsFromMain
 ( 
self
 ) :

114 if 
self
 . 
mainUI
 != None :

115 
self
 . 
tempSlice
 . 
	=sourceExtent
 = 
self
 . 
mainUI
 . 
scanTracker
 . 
figTracker
 . 
activeCh
 . 
canvas
 . 
ax
 . 
viewLim
 . 
extents

116 print "bounds from main:" , 
self
 . 
tempSlice
 . 
sourceExtent
 
	}

119 def 
	$change_cmap
 ( 
self
 , 
value
 ) :

120 
self
 . 
	=cmapindex
 = 
value

121 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
_cmapnames
 [ 
self
 . 
cmapindex
 ]

122 if 
self
 . 
rColorMap
 . 
	`isChecked
 ( ) == True :

123 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
_cmapnames
 [ 
value
 ] + '_r'

124 
self
 . 
	`show_image
 ( ) 
	}

126 def 
	$set_reverse_cmap
 ( 
self
 , 
value
 ) :

127 
self
 . 
	`change_cmap
 ( 
self
 . 
cmapindex
 ) 
	}

129 def 
	$set_colorbar
 ( 
self
 , 
value
 ) :

130 
self
 . 
	`change_cmap
 ( 
self
 . 
cmapindex
 ) 
	}

132 def 
	$set_filter
 ( 
self
 , 
value
 ) :

133 
self
 . 
	`change_cmap
 ( 
self
 . 
cmapindex
 ) 
	}

135 def 
	$set_filter_point
 ( 
self
 , 
value
 ) :

136 
self
 . 
	=point
 = 
	`int
 ( 
value
 )

137 
self
 . 
	`set_tempSlice
 ( ) 
	}

141 def 
	$show_image
 ( 
self
 ) :

142 
self
 . 
widget
 . 
canvas
 . 
	`oneSubPlot
 ( )

143 
self
 . 
	=data
 = 
self
 . 
tempSlice
 . 
DisplayArray
 [ : , : , 
self
 . 
activeCh
 ]

145 if 
self
 . 
Filter
 . 
	`isChecked
 ( ) == True :

146 
self
 . 
	=data
 = 
self
 . 
tempSlice
 . 
GausDisplayArray
 [ : , : , 
self
 . 
activeCh
 ]

148 
self
 . 
	=im
 = 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
	`imshow
 ( 
self
 . 
data
 , 
extent
 = 
self
 . 
tempSlice
 . 
extent
 , 
cmap
 = 
self
 . 
cmap
 , 
origin
 = "lower" )

149 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
yaxis
 . 
	`set_tick_params
 ( 
direction
 = 'out' )

150 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
xaxis
 . 
	`set_visible
 ( False )

151 if 
self
 . 
colorbar
 . 
	`isChecked
 ( ) == True :

152 
self
 . 
	=cbar
 = 
self
 . 
widget
 . 
canvas
 . 
fig
 . 
	`colorbar
 ( 
self
 . 
im
 , 
ax
 = 
self
 . 
widget
 . 
canvas
 . 
ax
 , 
orientation
 = 'vertical' )

154 
self
 . 
cbar
 . 
ax
 . 
yaxis
 . 
	`set_tick_params
 ( 
direction
 = 'out' )

156 
self
 . 
widget
 . 
canvas
 . 
	`draw
 ( ) 
	}

159 def 
	$set_tempSlice
 ( 
self
 ) :

163 
self
 . 
	=tempSlice
 = 
scanobject
 . 
	`reCenterSlice
 ( 
self
 . 
scan
 , 
name
 = 
	`str
 ( 
self
 . 
SliceName
 . 
	`text
 ( ) ) )

164 
self
 . 
tempSlice
 . 
	=point
 = 
self
 . 
point

165 
self
 . 
	`getboundsFromMain
 ( )

166 
self
 . 
tempSlice
 . 
	`reCenter
 ( 
RefCH
 = 
self
 . 
refCH
 , 
margin
 = 
self
 . 
margin
 , 
sobelAxis
 = 
self
 . 
axis
 , 
Gaus_distance
 = 
self
 . 
Gaus
 )

167 
self
 . 
	`show_image
 ( ) 
	}

170 def 
	$temp_slice_append_to_scan
 ( 
self
 ) :

171 
self
 . 
tempSlice
 . 
	=name
 = 
	`str
 ( 
self
 . 
SliceName
 . 
	`text
 ( ) )

172 
self
 . 
scan
 . 
slices
 . 
	`append
 ( 
self
 . 
tempSlice
 )

173 if 
self
 . 
callback
 != None :

174 
self
 . 
	`callback
 ( ) 
	}

176 def 
	$save_slice
 ( 
self
 ) :

180 
scanobject
 . 
scanObjectUtils
 . 
	`pickle_scanobject
 ( 
self
 . 
tempSlice
 , '../data/' + 
self
 . 
tempSlice
 . 
name
 + ',' + 
self
 . 
tempSlice
 . 
scan
 . 
name
 [ 1 : ] + '.slc' ) 
	}

183 def 
	$update_activeCH
 ( 
self
 , 
value
 ) :

184 
self
 . 
	=activeCh
 = 
value

185 
self
 . 
	`show_image
 ( ) 
	}

187 def 
	$update_ReferenceCH
 ( 
self
 , 
value
 ) :

188 
self
 . 
	=refCH
 = 
value

189 
self
 . 
	`set_tempSlice
 ( ) 
	}

191 def 
	$update_Margin
 ( 
self
 , 
value
 ) :

192 
self
 . 
	=margin
 = 
value

193 
self
 . 
	`set_tempSlice
 ( ) 
	}

195 def 
	$update_Axis
 ( 
self
 , 
value
 ) :

196 
self
 . 
	=axis
 = 
value

197 
self
 . 
	`set_tempSlice
 ( ) 
	}

200 def 
	$update_Gaus_filter
 ( 
self
 , 
value
 ) :

201 
self
 . 
	=Gaus
 = 
value

202 
self
 . 
	`set_tempSlice
 ( ) 
	}


	@./EbicDataManager.py

1 import 
	~numpy

2 import 
	~CCNT_test

4 class 
	cScanConfig
 :

5 def 
	$__init__
 ( 
self
 , 
stepSizeH
 = None , 
stepSizeV
 = None , 
hOffset
 = None , 
vOffset
 = None , 
pointsH
 = None , 
pointsV
 = None

6 , 
samplesPerPoint
 = None , 
channelMask
 = None , 
delayFine
 = None , 
delayCoarse
 = None , 
mag
 = None

7 , 
units
 = None , 
gain
 = None , 
labels
 = None , 
delaySeconds
 = None , 
displayOffsets
 = None ) :

12 
self
 . 
	=stepH
 = 
stepSizeH

13 
self
 . 
	=stepV
 = 
stepSizeV

14 
self
 . 
	=hOffset
 = 
hOffset

15 
self
 . 
	=vOffset
 = 
vOffset

16 
self
 . 
	=pointsH
 = 
pointsH

17 
self
 . 
	=pointsV
 = 
pointsV

18 
self
 . 
	=samplesPerPoint
 = 
samplesPerPoint

19 
self
 . 
	=channelMask
 = 
channelMask

20 
self
 . 
	=delayFine
 = 
delayFine

21 
self
 . 
	=delayCoarse
 = 
delayCoarse

22 
self
 . 
	=mag
 = 
mag

23 
self
 . 
	=units
 = 
units

24 
self
 . 
	=gain
 = 
gain

25 
self
 . 
	=labels
 = 
labels

26 
self
 . 
	=delay
 = 
delaySeconds

27 
self
 . 
	=offsets
 = [ 
hOffset
 , 
vOffset
 ]

28 
self
 . 
	=displayOffsets
 = 
displayOffsets
 
	}

30 def 
	$setupTuple
 ( 
self
 ) :

31 return ( 
self
 . 
stepH
 , 
self
 . 
stepV
 , 
self
 . 
hOffset
 , 
self
 . 
vOffset
 , 
self
 . 
pointsH

32 , 
self
 . 
pointsV
 , 
self
 . 
samplesPerPoint
 , 
self
 . 
channelMask
 , 
self
 . 
delayFine
 , 
self
 . 
delayCoarse
 ) 
	}

35 class 
	cSampleConfig
 :

36 def 
	$__init__
 ( 
self
 , 
samplesPerPoint
 , 
channelMask
 , 
delayFine
 , 
delayCoarse
 ) :

37 
self
 . 
	=samplesPerPoint
 = 
samplesPerPoint

38 
self
 . 
	=channelMask
 = 
channelMask

39 
self
 . 
	=delayFine
 = 
delayFine

40 
self
 . 
	=delayCoarse
 = 
delayCoarse
 
	}

42 def 
	$sampleTuple
 ( 
self
 ) :

43 return ( 
self
 . 
samplesPerPoint
 , 
self
 . 
channelMask
 , 
self
 . 
delayFine
 , 
self
 . 
delayCoarse
 ) 
	}

47 class 
	cSampleADCsManager
 :

49 def 
	$__init__
 ( 
self
 , 
SampleConfig
 ) :

50 
self
 . 
	=samplesPerPoint
 = 
SampleConfig
 . 
samplesPerPoint

51 
self
 . 
	=channelMask
 = 
SampleConfig
 . 
channelMask

52 
self
 . 
	=delayFine
 = 
SampleConfig
 . 
delayFine

53 
self
 . 
	=delayCoarse
 = 
SampleConfig
 . 
delayCoarse

54 
self
 . 
	=valuesFilled
 = 0

55 
self
 . 
	=channelCount
 = 
DataManagerUtils
 . 
	`maskToChannelCount
 ( 
self
 . 
channelMask
 )

56 
self
 . 
	=valuesExpected
 = 
self
 . 
samplesPerPoint
 * 
self
 . 
channelCount

57 
self
 . 
	=dataArray
 = 
self
 . 
	`makeNDataArray
 ( 
self
 . 
samplesPerPoint
 , 
self
 . 
channelCount
 )

58 
self
 . 
	=upDateFunc
 = None 
	}

60 def 
	$makeNDataArray
 ( 
self
 , 
numsamples
 , 
channel
 ) :

61 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
numsamples
 , 
channel
 ] , 
numpy
 . 
int16
 )

62 return 
storedArray
 
	}

64 def 
	$restructureToArray
 ( 
self
 , 
index
 , 
commandData
 ) :

65 
	=dataOffset
 = 2

66 
self
 . 
	=dataArray
 = 
DataManagerUtils
 . 
	`packetToArray
 ( 
self
 . 
samplesPerPoint
 , 
self
 . 
channelCount
 , 
dataOffset
 , 
commandData
 ) 
	}

71 class 
	cScanDataManager
 :

73 def 
	$__init__
 ( 
self
 , 
scanConfig
 = None , 
scanObject
 = None , 
OS
 = None ) :

75 
self
 . 
	=stepSizeX
 = 
scanConfig
 . 
stepV

76 
self
 . 
	=stepSizeY
 = 
scanConfig
 . 
stepH

77 
self
 . 
	=xOffset
 = 
scanConfig
 . 
vOffset

78 
self
 . 
	=yOffset
 = 
scanConfig
 . 
hOffset

79 
self
 . 
	=lenX
 = 
scanConfig
 . 
pointsV

80 
self
 . 
	=lenY
 = 
scanConfig
 . 
pointsH

81 
self
 . 
	=samplesPerPoint
 = 
scanConfig
 . 
samplesPerPoint

82 
self
 . 
	=channelMask
 = 
scanConfig
 . 
channelMask

83 
self
 . 
	=delayFine
 = 
numpy
 . 
	`uint32
 ( 
scanConfig
 . 
delayFine
 )

84 
self
 . 
	=delayCoarse
 = 
numpy
 . 
	`uint16
 ( 
scanConfig
 . 
delayCoarse
 )

85 
self
 . 
	=channelCount
 = 
DataManagerUtils
 . 
	`maskToChannelCount
 ( 
self
 . 
channelMask
 )

86 
self
 . 
	=OSI
 = 
OS

89 
self
 . 
	`constructPayload
 ( )

90 if 
scanObject
 == None :

92 
self
 . 
	=dataArray
 = 
numpy
 . 
	`zeros
 ( [ 
self
 . 
pF
 , 
self
 . 
pS
 , 
self
 . 
samp
 , 
self
 . 
channelCount
 ] , 
numpy
 . 
int32
 )

93 print "dataArray" , 
self
 . 
dataArray
 . 
shape

94 
self
 . 
	=displayArray
 = 
numpy
 . 
	`zeros
 ( [ 
self
 . 
pF
 , 
self
 . 
pS
 , 
self
 . 
channelCount
 ] , 
numpy
 . 
float
 )

95 print "Display Array" , 
self
 . 
displayArray
 . 
shape

98 
self
 . 
	=dataArray
 = 
numpy
 . 
	`zeros
 ( [ 
self
 . 
pF
 , 
self
 . 
pS
 , 
self
 . 
samp
 , 
self
 . 
channelCount
 ] , 
numpy
 . 
int32
 )

99 print "dataArray" , 
self
 . 
dataArray
 . 
shape

100 
self
 . 
	=displayArray
 = 
numpy
 . 
	`zeros
 ( [ 
self
 . 
pF
 , 
self
 . 
pS
 , 
self
 . 
channelCount
 ] , 
numpy
 . 
float
 )

101 print "Display Array" , 
self
 . 
displayArray
 . 
shape

104 
scanObject
 . 
	=rawDataArray
 = 
self
 . 
dataArray

105 
scanObject
 . 
	=DisplayArray
 = 
self
 . 
displayArray
 
	}

114 def 
	$filled
 ( 
self
 ) :

115 return ( 
self
 . 
valuesFilled
 >= 
self
 . 
valuesExpected
 ) 
	}

117 def 
	$getIndex
 ( 
self
 , 
position
 , 
stepSize
 , 
positionOffset
 ) :

118 
	=indexValue
 = ( 
position
 - 
positionOffset
 ) / 
stepSize

119 return 
indexValue
 
	}

123 def 
	$makeNDataArray
 ( 
self
 , 
lenX
 , 
lenY
 , 
channel
 , 
numsamples
 ) :

124 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
lenX
 , 
lenY
 , 
channel
 , 
numsamples
 ] , 
numpy
 . 
int32
 )

125 return 
storedArray
 
	}

127 def 
	$makeDisplayArray
 ( 
self
 , 
lenX
 , 
lenY
 , 
channel
 ) :

128 
	=displayArray
 = 
numpy
 . 
	`zeros
 ( [ 
lenX
 , 
lenY
 , 
channel
 ] , 
numpy
 . 
float
 )

129 return 
displayArray
 
	}

132 def 
	$storeDataInArray
 ( 
self
 , 
index
 , 
commandData
 ) :

133 
	=xindex
 , 
	=yindex
 , 
	=data
 = 
self
 . 
	`restructureToArray
 ( 
index
 , 
commandData
 )

134 
self
 . 
	=dataArray
 [ 
yindex
 , 
xindex
 ] = 
data

135 
self
 . 
	=displayArray
 [ 
yindex
 , 
xindex
 ] = 
numpy
 . 
	`average
 ( 
data
 , 
axis
 = 0 )

137 
self
 . 
	=valuesFilled
 += 
self
 . 
samplesPerPoint
 * 
self
 . 
channelCount

138 if 
self
 . 
upDateFunc
 != None :

139 
self
 . 
	`upDateFunc
 ( 
self
 ) 
	}

141 def 
	$test_scanSize
 ( 
self
 ) :

142 
	=temp
 = 1

143 for 
i
 in 
self
 . 
resizeDim
 :

144 
	=temp
 = 
i
 * 
temp

146 assert 
self
 . 
TF
 * 
temp
 == 
self
 . 
pF
 * 
self
 . 
pS
 * 
self
 . 
samp
 * 
self
 . 
CH

147 return 
temp
 
	}

151 def 
	$constructPayload
 ( 
self
 ) :

154 
	=OS_0
 = 2

155 
	=OS_1
 = 3

156 
	=OS_2
 = 5

159 
	=OS0
 = 0b001

160 
	=OS1
 = 0b010

161 
	=OS2
 = 0b100

165 if 
self
 . 
OSI
 > 0 :

166 
	=OS_value
 = 
	`int
 ( 
numpy
 . 
	`log2
 ( 
self
 . 
OSI
 ) )

168 
	=OS_value
 = 
self
 . 
OSI

169 print "OS_valuen" , 
OS_value

171 
self
 . 
	=Sx
 = 
numpy
 . 
	`int16
 ( 
self
 . 
xOffset
 )

172 
self
 . 
	=Sy
 = 
numpy
 . 
	`int16
 ( 
self
 . 
yOffset
 )

173 
self
 . 
	=sdx
 = 
numpy
 . 
	`int16
 ( 0x0000 )

174 
self
 . 
	=sdy
 = 
numpy
 . 
	`int16
 ( 
self
 . 
stepSizeY
 )

175 
self
 . 
	=dx
 = 
numpy
 . 
	`int16
 ( 
self
 . 
stepSizeX
 )

176 
self
 . 
	=dy
 = 
numpy
 . 
	`int16
 ( 0x0000 )

177 
self
 . 
	=pF
 = 
self
 . 
lenX

178 
self
 . 
	=pS
 = 
self
 . 
lenY

179 
self
 . 
	=samp
 = 
self
 . 
samplesPerPoint

180 
self
 . 
	=CH
 = 
self
 . 
channelCount

181 
self
 . 
	=DVAR
 = 
self
 . 
delayFine

182 
self
 . 
	=OS
 = ( ( 
OS_value
 & 
OS2
 ) >> 2 ) << 
OS_2
 | ( ( 
OS_value
 & 
OS1
 ) >> 1 ) << 
OS_1
 | ( 
OS_value
 & 
OS0
 ) << 
OS_0

183 print "OS" , 
self
 . 
OS

184 
self
 . 
	=XFER
 = 
self
 . 
CH
 << 16 | ( ( 
self
 . 
CH
 * 4 ) - 1 ) << 8

189 
self
 . 
	=TF
 , 
self
 . 
	=TF_state
 , 
self
 . 
	=pF
 , 
self
 . 
	=pS
 , 
self
 . 
	=samp
 , 
self
 . 
	=CCNT
 , 
self
 . 
	=resizeDim
 = 
CCNT_test
 . 
	`set_CCNT
 ( 
pF
 = 
self
 . 
pF
 , 
pS
 = 
self
 . 
pS
 , 
CH
 = 
self
 . 
CH
 , 
samp
 = 
self
 . 
samp
 )

192 assert 
	`abs
 ( 
self
 . 
Sx
 + 
self
 . 
sdx
 * 
self
 . 
pS
 ) <= 
	`abs
 ( 0x8000 )

194 assert 
	`abs
 ( 
self
 . 
Sx
 + 
self
 . 
dx
 * 
self
 . 
pF
 ) <= 
	`abs
 ( 0x8000 )

196 assert 
	`abs
 ( 
self
 . 
Sy
 + 
self
 . 
sdy
 * 
self
 . 
pS
 ) <= 
	`abs
 ( 0x8000 )

198 assert 
	`abs
 ( 
self
 . 
Sy
 + 
self
 . 
dy
 * 
self
 . 
pF
 ) <= 
	`abs
 ( 0x8000 )

203 
	=res
 = "%8x" % 0xa0aa

204 
	=res
 += "%8x" % 
self
 . 
Sx

205 
	=res
 += "%8x" % 
self
 . 
Sy

206 
	=res
 += "%8x" % 
self
 . 
sdx

207 
	=res
 += "%8x" % 
self
 . 
sdy

208 
	=res
 += "%8x" % 
self
 . 
dx

209 
	=res
 += "%8x" % 
self
 . 
dy

210 
	=res
 += "%8x" % 
self
 . 
pF

211 
	=res
 += "%8x" % 
self
 . 
pS

212 
	=res
 += "%8x" % 
self
 . 
samp

213 
	=res
 += "%8x" % 
self
 . 
CH

214 
	=res
 += "%8x" % 
self
 . 
DVAR

215 
	=res
 += "%8x" % 
self
 . 
OS

216 
	=res
 += "%8x" % 
self
 . 
XFER

217 
	=res
 += "%8x" % 
self
 . 
CCNT

218 
self
 . 
	=res
 = 
res

221 return 
self
 . 
res
 
	}

225 def 
	$restructureToArray
 ( 
self
 , 
index
 , 
commandData
 ) :

226 
	=dataOffset
 = 6

227 
	=numChan
 = 
DataManagerUtils
 . 
	`maskToChannelCount
 ( 
commandData
 [ 0 ] )

228 
	=numSamples
 = 
DataManagerUtils
 . 
	`getNumSamples
 ( 
commandData
 [ 1 ] )

229 
	=Xpos
 = 
DataManagerUtils
 . 
	`twoBytestoShort
 ( 2 , 
commandData
 )

231 
	=xIndex
 = 
self
 . 
	`getIndex
 ( 
Xpos
 , 
self
 . 
stepSizeX
 , 
self
 . 
xOffset
 )

233 
	=Ypos
 = 
DataManagerUtils
 . 
	`twoBytestoShort
 ( 4 , 
commandData
 )

235 
	=yIndex
 = 
self
 . 
	`getIndex
 ( 
Ypos
 , 
self
 . 
stepSizeY
 , 
self
 . 
yOffset
 )

237 
	=newArray
 = 
DataManagerUtils
 . 
	`packetToArray
 ( 
numSamples
 , 
numChan
 , 
dataOffset
 , 
commandData
 )

238 return 
xIndex
 , 
yIndex
 , 
newArray
 
	}

241 def 
	$upDateFunc
 ( 
self
 , 
sdm
 ) :

242 return 
	}

244 def 
	$put_in_array
 ( 
self
 , 
index
 , 
commandData
 ) :

245 
self
 . 
dumpArray
 . 
	`append
 ( [ 
commandData
 , 
index
 ] )

246 
self
 . 
	=valuesFilled
 += 
self
 . 
samplesPerPoint
 * 
self
 . 
channelCount
 
	}

249 class 
	cDataManagerUtils
 :

250 @ 
	`staticmethod

251 def 
	$packetToArray
 ( 
numSamples
 , 
numChan
 , 
dataOffset
 , 
commandData
 ) :

252 
	=newArray
 = 
numpy
 . 
	`zeros
 ( [ 
numSamples
 , 
numChan
 ] , 
numpy
 . 
int16
 )

253 for 
k
 in 
	`range
 ( 0 , 
numSamples
 ) :

254 
	=depthOffset
 = 
k
 * 
numChan
 * 2

255 for 
l
 in 
	`range
 ( 0 , 
numChan
 ) :

258 
	=tmp
 = ( 
numpy
 . 
	`uint16
 ( 
commandData
 [ 
dataOffset
 + 
depthOffset
 + ( 
l
 * 2 ) ] ) << 8 )

259 
	=tmp
 += 
numpy
 . 
	`uint16
 ( 
commandData
 [ 
dataOffset
 + 
depthOffset
 + ( ( 
l
 * 2 ) + 1 ) ] )

260 
	=newArray
 [ 
k
 , 
l
 ] = 
numpy
 . 
	`int16
 ( 
tmp
 )

261 return 
newArray
 
	}

263 @ 
	`staticmethod

264 def 
	$maskToChannelCount
 ( 
channelMask
 ) :

265 
	=count
 = 0

266 for 
n
 in 
	`range
 ( 8 ) :

267 if ( ( 
channelMask
 & ( 1 << 
n
 ) ) != False ) :

268 
	=count
 += 1

269 return 
count
 
	}

272 @ 
	`staticmethod

273 def 
	$twoBytestoShort
 ( 
offset
 , 
Data
 ) :

274 
	=tmp
 = 
numpy
 . 
	`uint16
 ( 
Data
 [ 
offset
 ] )

275 
	=tmp
 += ( 
numpy
 . 
	`uint16
 ( 
Data
 [ 
offset
 + 1 ] ) << 8 )

276 return 
numpy
 . 
	`int16
 ( 
tmp
 ) 
	}

278 @ 
	`staticmethod

279 def 
	$getNumSamples
 ( 
sampleByte
 ) :

280 return ( 
sampleByte
 ) 
	}

284 class 
	cDumptoMemory
 :

286 def 
	$__init__
 ( 
self
 , 
scanConfig
 ) :

287 
self
 . 
	=stepSizeX
 = 
scanConfig
 . 
stepSizeX

288 
self
 . 
	=stepSizeY
 = 
scanConfig
 . 
stepSizeY

289 
self
 . 
	=xOffset
 = 
scanConfig
 . 
xOffset

290 
self
 . 
	=yOffset
 = 
scanConfig
 . 
yOffset

291 
self
 . 
	=lenX
 = 
scanConfig
 . 
lenX

292 
self
 . 
	=lenY
 = 
scanConfig
 . 
lenY

293 
self
 . 
	=samplesPerPoint
 = 
scanConfig
 . 
samplesPerPoint

294 
self
 . 
	=channelMask
 = 
scanConfig
 . 
channelMask

295 
self
 . 
	=delayFine
 = 
numpy
 . 
	`uint16
 ( 
scanConfig
 . 
delayFine
 )

296 
self
 . 
	=delayCoarse
 = 
numpy
 . 
	`uint16
 ( 
scanConfig
 . 
delayCoarse
 )

297 
self
 . 
	=channelCount
 = 1

298 
self
 . 
	=dataArray
 = 
self
 . 
	`makeNDataArray
 ( 
self
 . 
lenX
 , 
self
 . 
lenY
 , 
self
 . 
samplesPerPoint
 , 
self
 . 
channelCount
 )

299 
self
 . 
	=displayArray
 = 
numpy
 . 
	`zeros
 ( [ 
self
 . 
lenX
 , 
self
 . 
lenY
 , 
self
 . 
channelCount
 ] , 
numpy
 . 
float
 )

300 
self
 . 
	=valuesFilled
 = 0

301 
self
 . 
	=valuesExpected
 = 
self
 . 
lenX
 * 
self
 . 
lenY
 * ( 
self
 . 
samplesPerPoint
 * 
self
 . 
channelCount
 )

302 
self
 . 
	=memdump
 = [ ] 
	}

304 def 
	$storeDataInArray
 ( 
self
 , 
index
 , 
commandData
 ) :

305 
self
 . 
	=valuesFilled
 += 
self
 . 
samplesPerPoint
 * 
self
 . 
channelCount

306 
self
 . 
memdump
 . 
	`append
 ( 
commandData
 ) 
	}

309 def 
	$filled
 ( 
self
 ) :

310 return ( 
self
 . 
valuesFilled
 >= 
self
 . 
valuesExpected
 ) 
	}

312 def 
	$makeNDataArray
 ( 
self
 , 
lenX
 , 
lenY
 , 
numsamples
 , 
channel
 ) :

313 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
lenX
 , 
lenY
 , 
numsamples
 , 
channel
 ] , 
numpy
 . 
int16
 )

314 return 
storedArray
 
	}


	@./tracker.py

1 import 
	~matplotlib

2 import 
	~numpy

4 import 
	~scanUpdate
 , 
	~edm

5 import 
	~thread
 , 
	~Queue

6 import 
	~config

7 import 
	~scanobject

8 import 
	~Mfigure

9 import 
	~pylab

10 from 
	~scipy
 import 
mgrid

11 from 
	~time
 import 
strftime

12 from 
	~Mexport
 import 
Exporter

16 class 
	cGuiTracker
 :

17 def 
	$__init__
 ( 
self
 , 
mainUI
 ) :

18 
self
 . 
	=mainUI
 = 
mainUI
 
	}

20 def 
	$print_poo
 ( 
self
 ) :

22 print 'poo' 
	}

24 def 
	$getBounds
 ( 
self
 ) :

25 
	=bounds
 = 
self
 . 
mainUI
 . 
scanTracker
 . 
figTracker
 . 
activeCh
 . 
canvas
 . 
ax
 . 
viewLim
 . 
bounds

26 
self
 . 
mainUI
 . 
	=xstartV
 , 
self
 . 
mainUI
 . 
	=ystartV
 , 
self
 . 
mainUI
 . 
	=xdeltaV
 , 
self
 . 
mainUI
 . 
	=ydeltaV
 = 
bounds

27 
self
 . 
mainUI
 . 
xstart
 . 
	`setText
 ( '{0:0.2f}' . 
	`format
 ( 
self
 . 
mainUI
 . 
xstartV
 ) )

28 
self
 . 
mainUI
 . 
xdelta
 . 
	`setText
 ( '{0:0.2f}' . 
	`format
 ( 
self
 . 
mainUI
 . 
xdeltaV
 ) )

29 
self
 . 
mainUI
 . 
ystart
 . 
	`setText
 ( '{0:0.2f}' . 
	`format
 ( 
self
 . 
mainUI
 . 
ystartV
 ) )

30 
self
 . 
mainUI
 . 
ydelta
 . 
	`setText
 ( '{0:0.2f}' . 
	`format
 ( 
self
 . 
mainUI
 . 
ydeltaV
 ) )

34 return 
bounds
 
	}

40 class 
	cScanTracker
 :

46 def 
	$__init__
 ( 
self
 , 
mainUI
 ) :

47 
self
 . 
	=mainUI
 = 
mainUI

48 
self
 . 
	=scans
 = [ ]

49 
self
 . 
	=figTracker
 = 
	`FigTracker
 ( 
self
 . 
mainUI
 ) 
	}

52 def 
	$display_scan
 ( 
self
 , 
index
 = None ) :

53 
	=CH
 = 
self
 . 
figTracker
 . 
CH

54 if 
index
 != None :

55 
self
 . 
	=activeScan
 = 
self
 . 
scans
 [ 
index
 ]

56 
self
 . 
figTracker
 . 
	`set_active_scan
 ( 
self
 . 
activeScan
 )

57 if 
self
 . 
activeScan
 . 
figures
 == None :

58 
self
 . 
activeScan
 . 
	=figures
 = [ ]

59 for 
i
 in 
	`range
 ( 
	`len
 ( 
self
 . 
activeScan
 . 
gain
 ) ) :

60 
self
 . 
figTracker
 . 
	`init_figure
 ( 
i
 )

62 
self
 . 
figTracker
 . 
	`replot_scan
 ( )

63 
self
 . 
figTracker
 . 
	`activeChannel
 ( 
CH
 ) 
	}

65 def 
	$save
 ( 
self
 ) :

66 
scanobject
 . 
scanObjectUtils
 . 
	`pickle_scanobject
 ( 
self
 . 
activeScan
 , '../data' + 
self
 . 
activeScan
 . 
name
 ) 
	}

70 class 
	cFigTracker
 :

75 def 
	$__init__
 ( 
self
 , 
mainUI
 ) :

76 
self
 . 
	=mainUI
 = 
mainUI

77 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
Greys_r

78 
self
 . 
	=cmap_r
 = False

79 
self
 . 
	`set_plot_scan_alpha
 ( )

80 
self
 . 
	`set_profile_alpha
 ( )

81 
self
 . 
	=CH
 = 0 
	}

85 def 
	$set_active_scan
 ( 
self
 , 
active_scan
 ) :

86 
self
 . 
	=activeScan
 = 
active_scan
 
	}

90 def 
	$set_axis_index
 ( 
self
 , 
value
 = None ) :

91 
self
 . 
	=axis_index
 = 
self
 . 
mainUI
 . 
AxisCombo
 . 
	`currentIndex
 ( )

92 
self
 . 
	`set_axobject
 ( )

93 
self
 . 
	`set_ax
 ( )

95 
self
 . 
	`show_active_plots_list
 ( )

96 
self
 . 
	`set_active_plots_index
 ( ) 
	}

99 def 
	$set_sub_index
 ( 
self
 , 
value
 = None ) :

100 
self
 . 
	=sub_index
 = 
self
 . 
mainUI
 . 
SubPlotComobo
 . 
	`currentIndex
 ( )

102 
self
 . 
	`show_active_axes
 ( 
self
 . 
sub_index
 )

103 
self
 . 
	`set_subplot
 ( ) 
	}

107 def 
	$set_active_plots_index
 ( 
self
 , 
value
 = None ) :

108 
self
 . 
	=active_plots_index
 = 
self
 . 
mainUI
 . 
ActivePlotsCombo
 . 
	`currentIndex
 ( )

109 if 
value
 != None and 
value
 >= 0 :

110 
self
 . 
	`set_active_plot
 ( )

111 
self
 . 
	`update_hist
 ( ) 
	}

113 def 
	$set_active_plot
 ( 
self
 ) :

114 
self
 . 
	=active_plot
 = 
self
 . 
axobject
 . 
axesObjects
 [ 
self
 . 
active_plots_index
 ] 
	}

116 def 
	$set_ax
 ( 
self
 ) :

117 
self
 . 
	=ax
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] . 
axes
 [ 
self
 . 
axis_index
 ] 
	}

119 def 
	$set_axobject
 ( 
self
 ) :

120 
self
 . 
	=axobject
 = 
self
 . 
activeScan
 . 
figures
 [ 
self
 . 
CH
 ] . 
subplots
 [ 
self
 . 
sub_index
 ] . 
axes
 [ 
self
 . 
axis_index
 ] 
	}

122 def 
	$set_subplot
 ( 
self
 ) :

123 
self
 . 
	=subplot
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] 
	}

125 def 
	$change_cmap
 ( 
self
 , 
value
 ) :

126 
self
 . 
	=cmapvalue
 = 
value

127 if 
self
 . 
cmap_r
 == True :

128 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
_cmapnames
 [ 
self
 . 
cmapvalue
 ] + '_r'

130 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
_cmapnames
 [ 
self
 . 
cmapvalue
 ]

131 
self
 . 
	`remove_from_plot
 ( )

132 
self
 . 
	`add_image
 ( ) 
	}

135 def 
	$reverse_cmap
 ( 
self
 , 
value
 ) :

136 if 
	`int
 ( 
value
 ) == 2 :

137 
self
 . 
	=cmap_r
 = True

139 
self
 . 
	=cmap_r
 = False

140 
self
 . 
	`change_cmap
 ( 
self
 . 
cmapvalue
 ) 
	}

143 def 
	$set_plot_scan_alpha
 ( 
self
 ) :

144 
self
 . 
	=plot_scan_alpha
 = 
self
 . 
mainUI
 . 
PlotScansSpinAlpha
 . 
	`value
 ( ) 
	}

146 def 
	$set_plot_scan_ch
 ( 
self
 ) :

147 
self
 . 
	=plot_scan_ch
 = 
self
 . 
mainUI
 . 
PlotScansComboCH
 . 
	`currentIndex
 ( ) 
	}

149 def 
	$set_profile_index
 ( 
self
 ) :

150 
self
 . 
	=profile_index
 = 
self
 . 
mainUI
 . 
PlotProfileCombo
 . 
	`currentIndex
 ( ) 
	}

152 def 
	$set_profile_ch
 ( 
self
 ) :

153 
self
 . 
	=profile_ch
 = 
self
 . 
mainUI
 . 
PlotProfileComboCH
 . 
	`currentIndex
 ( ) 
	}

155 def 
	$set_profile_alpha
 ( 
self
 ) :

156 
self
 . 
	=profile_alpha
 = 
self
 . 
mainUI
 . 
PlotProfileAlpha
 . 
	`value
 ( ) 
	}

159 def 
	$add_subplot
 ( 
self
 ) :

160 
	=CH
 = 
self
 . 
CH

161 print "current CH is" , 
CH

162 
	=temp
 = 
self
 . 
activeScan
 . 
figures
 [ 
self
 . 
CH
 ]

163 if 
	`len
 ( 
temp
 . 
subplots
 ) < 2 :

164 
temp
 . 
	`add_subplot
 ( )

165 if 
	`len
 ( 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 ) == 1 :

166 
self
 . 
activeCh
 . 
canvas
 . 
	`twoSubplots
 ( )

167 
self
 . 
	`show_subplots_axes
 ( 
self
 . 
CH
 )

168 
self
 . 
	`replot_figure
 ( 
temp
 . 
subplots
 )

169 print "current CH is" , 
CH

170 
self
 . 
	`activeChannel
 ( 
CH
 ) 
	}

173 def 
	$add_ax
 ( 
self
 ) :

174 
	=CH
 = 
self
 . 
CH

175 print "current CH is" , 
CH

176 
	=temp
 = 
self
 . 
activeScan
 . 
figures
 [ 
CH
 ]

181 
	=subplot
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ]

182 
	=mSubplot
 = 
temp
 . 
subplots
 [ 
self
 . 
sub_index
 ]

183 if 0 < 
	`len
 ( 
mSubplot
 . 
axes
 ) < 2 :

184 
mSubplot
 . 
	`add_axes
 ( )

185 
	=axes
 = 
subplot
 . 
axes

186 
	=ax
 = 
axes
 [ - 1 ]

187 
self
 . 
activeCh
 . 
canvas
 . 
	`add_Ax
 ( 
ax
 = 
ax
 , 
axes
 = 
axes
 )

188 
self
 . 
	`show_active_axes
 ( 
self
 . 
sub_index
 )

189 print "current CH is" , 
CH

190 
self
 . 
	`activeChannel
 ( 
CH
 ) 
	}

193 def 
	$replot_figure
 ( 
self
 , 
temp
 ) :

194 
	=CH
 = 
self
 . 
CH

195 if 
	`len
 ( 
temp
 ) == 1 :

196 
self
 . 
activeCh
 . 
canvas
 . 
	`oneSubPlot
 ( )

197 elif 
	`len
 ( 
temp
 ) == 2 :

198 
self
 . 
activeCh
 . 
canvas
 . 
	`twoSubplots
 ( )

202 for 
k
 in 
	`range
 ( 
	`len
 ( 
temp
 ) ) :

203 
	=axes
 = 
temp
 [ 
k
 ] . 
axes

204 print 'k' , 
k

205 for 
l
 in 
	`range
 ( 
	`len
 ( 
axes
 ) ) :

206 print 'l' , 
l

207 if 
l
 > 0 :

208 
	=temp_axes
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
k
 ] . 
axes

209 
	=ax
 = 
temp_axes
 [ - 1 ]

210 
ax
 . 
	`clear
 ( )

211 
self
 . 
activeCh
 . 
canvas
 . 
	`add_Ax
 ( 
ax
 = 
ax
 , 
axes
 = 
temp_axes
 )

212 
	=axobject
 = 
axes
 [ 
l
 ]

213 
self
 . 
activeCh
 . 
canvas
 . 
	`add_plotter
 ( 
ax
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
k
 ] . 
axes
 [ 
l
 ] , 
axBox
 = 
axobject

214 , 
subplot
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
k
 ] )

215 print 'added plotter in replot' , 
k
 , 
l
 
	}

219 def 
	$replot_scan
 ( 
self
 ) :

226 for 
i
 in 
	`range
 ( 
	`len
 ( 
self
 . 
activeScan
 . 
figures
 ) ) :

227 
	=temp
 = 
self
 . 
activeScan
 . 
figures
 [ 
i
 ] . 
subplots

228 
self
 . 
	`activeChannel
 ( 
i
 )

232 
self
 . 
	`replot_figure
 ( 
temp
 )

233 
self
 . 
	`show_subplots_axes
 ( 
self
 . 
CH
 ) 
	}

236 def 
	$init_figure
 ( 
self
 , 
i
 ) :

240 
self
 . 
activeScan
 . 
figures
 . 
	`append
 ( 
Mfigure
 . 
	`FigureBox
 ( ) )

241 
	=axobject
 = 
self
 . 
activeScan
 . 
figures
 [ - 1 ] . 
subplots
 [ - 1 ] . 
axes
 [ - 1 ]

242 
self
 . 
	`activeChannel
 ( 
i
 )

243 
self
 . 
activeCh
 . 
canvas
 . 
	`oneSubPlot
 ( )

244 
	=subplot
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ - 1 ]

245 if 
	`len
 ( 
axobject
 . 
axesObjects
 ) == 0 :

246 
	=name
 = 'Image' + 'Ch' + 
	`str
 ( 
i
 ) + 
self
 . 
activeScan
 . 
name

247 
axobject
 . 
axesObjects
 . 
	`append
 ( 
Mfigure
 . 
	`ImageBox
 ( 
data
 = 
self
 . 
activeScan
 . 
DisplayArray
 [ : , : , 
i
 ]

248 , 
extent
 = 
self
 . 
activeScan
 . 
extent
 , 
cmap
 = 
self
 . 
cmap
 , 
origin
 = 'lower' , 
name
 = 
name
 ) )

249 print "added an axesObject:" , 
name

250 
self
 . 
activeCh
 . 
canvas
 . 
	`add_plotter
 ( 
self
 . 
activeCh
 . 
canvas
 . 
ax
 , 
axobject
 , 
subplot
 )

251 
self
 . 
	`show_active_plots_list
 ( 
i
 ) 
	}

256 def 
	$add_image
 ( 
self
 ) :

258 
self
 . 
	`check_fig_active
 ( )

259 
	=name
 = 'Image' + 'Ch' + 
	`str
 ( 
self
 . 
plot_scan_ch
 ) + 
self
 . 
activeScan
 . 
name

260 
self
 . 
axobject
 . 
axesObjects
 . 
	`append
 ( 
Mfigure
 . 
	`ImageBox
 ( 
data
 = 
self
 . 
activeScan
 . 
DisplayArray
 [ : , : , 
self
 . 
plot_scan_ch
 ]

261 , 
extent
 = 
self
 . 
activeScan
 . 
extent
 , 
cmap
 = 
self
 . 
cmap
 , 
origin
 = 'lower'

262 , 
name
 = 
name
 , 
alpha
 = 
self
 . 
plot_scan_alpha
 ) )

263 if 
	`len
 ( 
self
 . 
subplot
 . 
plotters
 ) == 0 :

264 
self
 . 
activeCh
 . 
canvas
 . 
	`add_plotter
 ( 
self
 . 
ax
 , 
self
 . 
axobject
 , 
self
 . 
subplot
 )

266 
	=plotter
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] . 
plotters
 [ 
self
 . 
axis_index
 ]

267 
plotter
 . 
	`show_image
 ( 
self
 . 
axobject
 . 
axesObjects
 [ - 1 ] )

268 
self
 . 
	`show_active_plots_list
 ( ) 
	}

271 def 
	$add_line
 ( 
self
 ) :

273 
self
 . 
	`check_fig_active
 ( )

274 
	=temp
 = 
self
 . 
activeScan
 . 
profiles
 [ 
self
 . 
profile_index
 ]

275 
	=name
 = 
temp
 . 
name
 + 'Ch' + 
	`str
 ( 
self
 . 
profile_ch
 ) + 
self
 . 
activeScan
 . 
name

276 
self
 . 
axobject
 . 
axesObjects
 . 
	`append
 ( 
Mfigure
 . 
	`LineBox
 ( 
Xdata
 = 
temp
 . 
Xposition

277 , 
Ydata
 = 
temp
 . 
profileDataAvg
 [ : , 
self
 . 
profile_ch
 ]

278 , 
name
 = 
name
 , 
alpha
 = 
self
 . 
profile_alpha
 ) )

279 if 
	`len
 ( 
self
 . 
subplot
 . 
plotters
 ) - 1 < 
self
 . 
axis_index
 :

280 
self
 . 
activeCh
 . 
canvas
 . 
	`add_plotter
 ( 
self
 . 
ax
 , 
self
 . 
axobject
 , 
self
 . 
subplot
 )

282 
	=plotter
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] . 
plotters
 [ 
self
 . 
axis_index
 ]

283 
plotter
 . 
	`show_line
 ( 
self
 . 
axobject
 . 
axesObjects
 [ - 1 ] )

284 
self
 . 
	`show_active_plots_list
 ( ) 
	}

287 def 
	$check_fig_active
 ( 
self
 ) :

291 if 
	`len
 ( 
self
 . 
activeScan
 . 
figures
 ) - 1 < 
self
 . 
CH
 :

292 
self
 . 
activeScan
 . 
figures
 . 
	`append
 ( 
Mfigure
 . 
	`FigureBox
 ( ) )

293 
self
 . 
	`set_axobject
 ( ) 
	}

296 def 
	$remove_from_plot
 ( 
self
 ) :

297 
	=plotter
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] . 
plotters
 [ 
self
 . 
axis_index
 ]

298 
	=plot
 = 
plotter
 . 
activeplots
 [ 
self
 . 
active_plots_index
 ]

299 
plotter
 . 
	`remove_and_update
 ( 
plot
 )

300 
self
 . 
	`show_active_plots_list
 ( ) 
	}

302 def 
	$add_colorbar
 ( 
self
 ) :

303 
	=plotter
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] . 
plotters
 [ 
self
 . 
axis_index
 ]

304 
	=image
 = 
plotter
 . 
activeplots
 [ 
self
 . 
active_plots_index
 ]

305 
plotter
 . 
	`add_colorbar
 ( 
image
 ) 
	}

311 def 
	$show_active_plots_list
 ( 
self
 , 
index
 = None ) :

315 
self
 . 
mainUI
 . 
ActivePlotsCombo
 . 
	`clear
 ( )

316 for 
m
 in 
	`range
 ( 
	`len
 ( 
self
 . 
axobject
 . 
axesObjects
 ) ) :

318 
	=temp
 = 
self
 . 
axobject
 . 
axesObjects
 [ 
m
 ]

319 
self
 . 
mainUI
 . 
ActivePlotsCombo
 . 
	`addItem
 ( 
temp
 . 
name
 ) 
	}

322 def 
	$show_subplots_axes
 ( 
self
 , 
index
 = None ) :

323 
	=temp
 = 
self
 . 
activeScan
 . 
figures
 [ 
index
 ]

324 
self
 . 
mainUI
 . 
SubPlotComobo
 . 
	`clear
 ( )

325 for 
i
 in 
	`range
 ( 0 , 
	`len
 ( 
temp
 . 
subplots
 ) ) :

326 
self
 . 
mainUI
 . 
SubPlotComobo
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) )

327 
self
 . 
	`set_sub_index
 ( ) 
	}

330 def 
	$show_active_axes
 ( 
self
 , 
index
 = None ) :

331 
self
 . 
mainUI
 . 
AxisCombo
 . 
	`clear
 ( )

332 
	=temp
 = 
self
 . 
activeScan
 . 
figures
 [ 
self
 . 
CH
 ] . 
subplots
 [ 
index
 ]

333 for 
k
 in 
	`range
 ( 
	`len
 ( 
temp
 . 
axes
 ) ) :

335 
self
 . 
mainUI
 . 
AxisCombo
 . 
	`addItem
 ( 
	`str
 ( 
k
 ) )

336 
self
 . 
	`set_axis_index
 ( ) 
	}

339 def 
	$update_hist
 ( 
self
 , 
dump
 = None ) :

340 
	=ax
 = 
self
 . 
mainUI
 . 
HistWidget
 . 
canvas
 . 
ax

341 
ax
 . 
	`clear
 ( )

342 
	=fig
 = 
ax
 . 
	`get_figure
 ( )

343 
fig
 . 
	`subplots_adjust
 ( 
right
 = 1 , 
left
 = 0 )

344 if 
self
 . 
active_plot
 . 
__class__
 == 
Mfigure
 . 
ImageBox
 :

346 
ax
 . 
	`plot
 ( 
self
 . 
active_plot
 . 
binHistTrunk
 , 
self
 . 
active_plot
 . 
binx
 )

349 
ax
 . 
	`tick_params
 ( 
direction
 = 'out' , 
top
 = 'off' , 
right
 = 'off' , 
left
 = 'off' )

350 
ax
 . 
axes
 . 
	`get_yaxis
 ( ) . 
	`set_visible
 ( False )

351 
self
 . 
mainUI
 . 
HistWidget
 . 
canvas
 . 
	`draw
 ( ) 
	}

354 def 
	$update_clim
 ( 
self
 , 
dump
 = None ) :

355 
	=plotter
 = 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 [ 
self
 . 
sub_index
 ] . 
plotters
 [ 
self
 . 
axis_index
 ]

356 
	=image
 = 
plotter
 . 
activeplots
 [ 
self
 . 
active_plots_index
 ]

357 if 
self
 . 
active_plot
 . 
__class__
 == 
Mfigure
 . 
ImageBox
 :

358 
	=vmin
 = 
self
 . 
active_plot
 . 
binHist
 [ 
self
 . 
mainUI
 . 
SliderVmin
 . 
	`value
 ( ) ]

359 
	=vmax
 = 
self
 . 
active_plot
 . 
binHist
 [ 
self
 . 
mainUI
 . 
SliderVmax
 . 
	`value
 ( ) ]

360 
image
 . 
	`set_clim
 ( 
vmin
 , 
vmax
 )

361 
self
 . 
active_plot
 . 
	=clim
 = ( 
vmin
 , 
vmax
 )

362 
self
 . 
activeCh
 . 
canvas
 . 
	`draw
 ( ) 
	}

365 def 
	$activeChannel
 ( 
self
 , 
value
 ) :

367 if 
value
 == 0 :

368 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh1

369 
self
 . 
	=CH
 = 0

370 elif 
value
 == 1 :

371 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh2

372 
self
 . 
	=CH
 = 1

373 elif 
value
 == 2 :

374 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh3

375 
self
 . 
	=CH
 = 2

376 elif 
value
 == 3 :

377 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh4

378 
self
 . 
	=CH
 = 3

379 elif 
value
 == 4 :

380 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh5

381 
self
 . 
	=CH
 = 4

382 elif 
value
 == 5 :

383 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh6

384 
self
 . 
	=CH
 = 5

386 
self
 . 
	=activeCh
 = 
self
 . 
mainUI
 . 
mplCh1

387 
self
 . 
	=CH
 = 0

388 
self
 . 
	`update_activeplots_info
 ( 
self
 . 
CH
 ) 
	}

391 def 
	$update_activeplots_info
 ( 
self
 , 
chindex
 ) :

395 if 
	`len
 ( 
self
 . 
activeCh
 . 
canvas
 . 
subplots
 ) != 0 :

396 
self
 . 
	`show_subplots_axes
 ( 
chindex
 ) 
	}

399 def 
	$clear_all_figures
 ( 
self
 ) :

403 return 
	}

406 def 
	$active_extent
 ( 
self
 ) :

410 
	=ydelta
 = 
self
 . 
ax
 . 
viewLim
 . 
height

411 print 
ydelta

412 
	=xdelta
 = 
self
 . 
ax
 . 
viewLim
 . 
width

413 print 
xdelta

414 
	=offsets
 = 
self
 . 
ax
 . 
viewLim
 . 
	`_get_p0
 ( )

415 print 
offsets
 
	}

421 class 
	cIVTracker
 :

423 def 
	$__init__
 ( 
self
 , 
mainUI
 ) :

424 
self
 . 
	=mainUI
 = 
mainUI

425 
self
 . 
	=transport_sweeps
 = [ ]

426 
self
 . 
	=transport_names
 = [ ]

427 
self
 . 
	=tran_index_value
 = 0 
	}

429 def 
	$add_iv
 ( 
self
 , 
iv
 , 
name
 = None ) :

430 
self
 . 
transport_sweeps
 . 
	`append
 ( 
iv
 )

431 
self
 . 
transport_names
 . 
	`append
 ( 
	`str
 ( 
name
 ) )

432 
self
 . 
mainUI
 . 
TransportcomboBox
 . 
	`addItem
 ( 
	`str
 ( 
name
 ) )

433 
self
 . 
	`set_active_iv
 ( ) 
	}

435 def 
	$set_active_iv
 ( 
self
 , 
value
 = None ) :

438 
self
 . 
	=tran_index_value
 = 
self
 . 
mainUI
 . 
TransportcomboBox
 . 
	`currentIndex
 ( )

439 
self
 . 
	=transport
 = 
self
 . 
transport_sweeps
 [ 
self
 . 
tran_index_value
 ] 
	}

441 def 
	$plot_active_IV
 ( 
self
 ) :

442 
self
 . 
mainUI
 . 
mpl_2
 . 
canvas
 . 
ax
 . 
	`clear
 ( )

443 
self
 . 
mainUI
 . 
mpl_2
 . 
canvas
 . 
ax
 . 
	`errorbar
 ( 
self
 . 
transport
 . 
sentVoltage
 , 
self
 . 
transport
 . 
dataI
 , 
yerr
 = 
self
 . 
transport
 . 
dataIstd
 )

444 
self
 . 
mainUI
 . 
mpl_2
 . 
canvas
 . 
	`draw
 ( ) 
	}

446 def 
	$export_active_IV
 ( 
self
 ) :

448 
	=temp
 = 
self
 . 
transport

449 
	=data
 = [ 
temp
 . 
dataI
 , 
temp
 . 
sentVoltage
 , 
temp
 . 
dataIstd
 ]

450 
	=export
 = 
	`Exporter
 ( )

451 
	=header
 = 
export
 . 
	`make_header
 ( 
self
 . 
transport
 )

452 
	=name
 = '../data/' + 
self
 . 
transport_names
 [ 
self
 . 
tran_index_value
 ]

453 
export
 . 
	`export_csv
 ( 
name
 = 
name
 , 
header
 = 
header
 , 
data
 = 
data
 ) 
	}


	@./drag.py

1 import 
	~numpy
 as 
np

2 import 
	~matplotlib.pyplot
 as 
plt

4 class 
	cDraggableRectangle
 :

5 def 
	$__init__
 ( 
self
 , 
rect
 ) :

6 
self
 . 
	=rect
 = 
rect

7 
self
 . 
	=press
 = None

8 
self
 . 
	=background
 = None

9 
self
 . 
	=lock
 = None 
	}

12 def 
	$connect
 ( 
self
 ) :

14 
self
 . 
	=cidpress
 = 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_connect
 ( 'button_press_event'

15 , 
self
 . 
on_press
 )

16 
self
 . 
	=cidrelease
 = 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_connect
 ( 'button_release_event'

17 , 
self
 . 
on_release
 )

18 
self
 . 
	=cidmotion
 = 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_connect
 ( 'motion_notify_event'

19 , 
self
 . 
on_motion
 ) 
	}

21 def 
	$on_press
 ( 
self
 , 
event
 ) :

23 if 
event
 . 
inaxes
 != 
self
 . 
rect
 . 
axes
 : return

25 
	=contains
 , 
	=attrd
 = 
self
 . 
rect
 . 
	`contains
 ( 
event
 )

26 if not 
contains
 : return

28 
	=offset
 = 
self
 . 
rect
 . 
	`get_offsets
 ( )

30 
self
 . 
	=press
 = 
offset
 , 
event
 . 
xdata
 , 
event
 . 
ydata

32 
self
 . 
	=lock
 = True

35 
	=canvas
 = 
self
 . 
rect
 . 
figure
 . 
canvas

36 
	=axes
 = 
self
 . 
rect
 . 
axes

37 
self
 . 
rect
 . 
	`set_animated
 ( True )

38 
canvas
 . 
	`draw
 ( )

39 
self
 . 
	=background
 = 
canvas
 . 
	`copy_from_bbox
 ( 
self
 . 
rect
 . 
axes
 . 
bbox
 )

42 
axes
 . 
	`draw_artist
 ( 
self
 . 
rect
 )

45 
canvas
 . 
	`blit
 ( 
axes
 . 
bbox
 ) 
	}

48 def 
	$on_motion
 ( 
self
 , 
event
 ) :

50 if 
self
 . 
lock
 is not True :

52 if 
event
 . 
inaxes
 != 
self
 . 
rect
 . 
axes
 : return

57 
	=offset
 , 
	=xpress
 , 
	=ypress
 = 
self
 . 
press

58 
	=dx
 = 
event
 . 
xdata
 - 
xpress

59 
	=dy
 = 
event
 . 
ydata
 - 
ypress

60 
	=x0
 = 
offset
 [ 0 ] [ 0 ]

61 
	=y0
 = 
offset
 [ 0 ] [ 1 ]

62 
self
 . 
rect
 . 
	`set_offsets
 ( [ ( 
x0
 + 
dx
 ) , ( 
y0
 + 
dy
 ) ] )

64 
	=canvas
 = 
self
 . 
rect
 . 
figure
 . 
canvas

65 
	=axes
 = 
self
 . 
rect
 . 
axes

67 
canvas
 . 
	`restore_region
 ( 
self
 . 
background
 )

70 
axes
 . 
	`draw_artist
 ( 
self
 . 
rect
 )

73 
canvas
 . 
	`blit
 ( 
axes
 . 
bbox
 ) 
	}

76 def 
	$on_release
 ( 
self
 , 
event
 ) :

81 if 
self
 . 
lock
 is not True :

84 
self
 . 
	=press
 = None

85 
self
 . 
	=lock
 = None

88 
self
 . 
rect
 . 
	`set_animated
 ( False )

89 
self
 . 
	=background
 = None

92 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`draw
 ( ) 
	}

95 def 
	$disconnect
 ( 
self
 ) :

97 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidpress
 )

98 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidrelease
 )

99 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidmotion
 ) 
	}

102 class 
	cProfileLine
 :

104 def 
	$__init__
 ( 
self
 , 
canvas
 = None , 
ax
 = None ) :

105 
self
 . 
	=startpoint
 = None

106 
self
 . 
	=endpoint
 = None

107 
self
 . 
	=canvas
 = 
canvas

108 
self
 . 
	=ax
 = 
ax
 
	}

110 def 
	$set_Point1
 ( 
self
 ) :

111 
self
 . 
	=point
 = True

112 
self
 . 
	=cidpress
 = 
self
 . 
canvas
 . 
	`mpl_connect
 ( 'button_press_event' , 
self
 . 
drawPoint
 ) 
	}

114 def 
	$set_Point2
 ( 
self
 ) :

115 
self
 . 
	=point
 = False

116 
self
 . 
	=cidpress
 = 
self
 . 
canvas
 . 
	`mpl_connect
 ( 'button_press_event' , 
self
 . 
drawPoint
 ) 
	}

119 def 
	$drawPoint
 ( 
self
 , 
event
 ) :

120 if 
self
 . 
point
 == True :

121 
	=color
 = 'b'

122 
	=shape
 = 's'

124 
	=color
 = 'r'

125 
	=shape
 = 'o'

126 
self
 . 
	=x
 = 
event
 . 
xdata

127 
self
 . 
	=y
 = 
event
 . 
ydata

128 print 
self
 . 
x
 , 
self
 . 
y

129 
self
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidpress
 )

130 if 
self
 . 
point
 == True :

131 if 
self
 . 
startpoint
 != None :

132 
self
 . 
startpoint
 . 
	`remove
 ( )

133 
self
 . 
	=startpoint
 = 
self
 . 
ax
 . 
	`scatter
 ( 
self
 . 
x
 , 
self
 . 
y
 , 
s
 = 60 , 
c
 = 
color
 , 
marker
 = 
shape
 )

134 
self
 . 
canvas
 . 
	`draw
 ( )

135 
self
 . 
	=dr1
 = 
drag
 . 
	`DraggableRectangle
 ( 
self
 . 
startpoint
 )

136 
self
 . 
dr1
 . 
	`connect
 ( )

139 if 
self
 . 
endpoint
 != None :

140 
self
 . 
endpoint
 . 
	`remove
 ( )

141 
self
 . 
	=endpoint
 = 
self
 . 
ax
 . 
	`scatter
 ( 
self
 . 
x
 , 
self
 . 
y
 , 
s
 = 60 , 
c
 = 
color
 , 
marker
 = 
shape
 )

142 
self
 . 
canvas
 . 
	`draw
 ( )

143 
self
 . 
	=dr2
 = 
drag
 . 
	`DraggableRectangle
 ( 
self
 . 
endpoint
 )

144 
self
 . 
dr2
 . 
	`connect
 ( ) 
	}


	@./qtdesigner.py

10 from 
	~PyQt4
 import 
QtCore
 , 
QtGui

13 
	=_fromUtf8
 = 
QtCore
 . 
QString
 . 
fromUtf8

14 except 
AttributeError
 :

15 def 
	$_fromUtf8
 ( 
s
 ) :

16 return 
s
 
	}

19 
	=_encoding
 = 
QtGui
 . 
QApplication
 . 
UnicodeUTF8

20 def 
	$_translate
 ( 
context
 , 
text
 , 
disambig
 ) :

21 return 
QtGui
 . 
QApplication
 . 
	`translate
 ( 
context
 , 
text
 , 
disambig
 , 
_encoding
 ) 
	}

22 except 
AttributeError
 :

23 def 
	$_translate
 ( 
context
 , 
text
 , 
disambig
 ) :

24 return 
QtGui
 . 
QApplication
 . 
	`translate
 ( 
context
 , 
text
 , 
disambig
 ) 
	}

26 class 
	cUi_MplMainWindow
 ( 
object
 ) :

27 def 
	$setupUi
 ( 
self
 , 
MplMainWindow
 ) :

28 
MplMainWindow
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "MplMainWindow" ) )

29 
MplMainWindow
 . 
	`resize
 ( 1902 , 1023 )

30 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

31 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

32 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

33 
sizePolicy
 . 
	`setHeightForWidth
 ( 
MplMainWindow
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

34 
MplMainWindow
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

35 
MplMainWindow
 . 
	`setStyleSheet
 ( 
	`_fromUtf8
 ( "QToolTip\n" "{\n" "     border: 1px solid black;\n" "     background-color: #ffa02f;\n" "     padding: 1px;\n" "     border-radius: 3px;\n" "     opacity: 100;\n" "}\n" "\n" "QWidget\n" "{\n" "    color: #b1b1b1;\n" "    background-color: #323232;\n" "}\n" "\n" "QWidget:item:hover\n" "{\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #ca0619);\n" "    color: #000000;\n" "}\n" "\n" "QWidget:item:selected\n" "{\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "}\n" "\n" "QMenuBar::item\n" "{\n" "    background: transparent;\n" "}\n" "\n" "QMenuBar::item:selected\n" "{\n" "    background: transparent;\n" "    border: 1px solid #ffaa00;\n" "}\n" "\n" "QMenuBar::item:pressed\n" "{\n" "    background: #444;\n" "    border: 1px solid #000;\n" "    background-color: QLinearGradient(\n" "        x1:0, y1:0,\n" "        x2:0, y2:1,\n" "        stop:1 #212121,\n" "        stop:0.4 #343434/*,\n" "        stop:0.2 #343434,\n" "        stop:0.1 #ffaa00*/\n" "    );\n" "    margin-bottom:-1px;\n" "    padding-bottom:1px;\n" "}\n" "\n" "QMenu\n" "{\n" "    border: 1px solid #000;\n" "}\n" "\n" "QMenu::item\n" "{\n" "    padding: 2px 20px 2px 20px;\n" "}\n" "\n" "QMenu::item:selected\n" "{\n" "    color: #000000;\n" "}\n" "\n" "QWidget:disabled\n" "{\n" "    color: #404040;\n" "    background-color: #323232;\n" "}\n" "\n" "QAbstractItemView\n" "{\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4d4d4d, stop: 0.1 #646464, stop: 1 #5d5d5d);\n" "}\n" "\n" "QWidget:focus\n" "{\n" "    /*border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);*/\n" "}\n" "\n" "QLineEdit\n" "{\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4d4d4d, stop: 0 #646464, stop: 1 #5d5d5d);\n" "    padding: 1px;\n" "    border-style: solid;\n" "    border: 1px solid #1e1e1e;\n" "    border-radius: 5;\n" "}\n" "\n" "QPushButton\n" "{\n" "    color: #b1b1b1;\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #565656, stop: 0.1 #525252, stop: 0.5 #4e4e4e, stop: 0.9 #4a4a4a, stop: 1 #464646);\n" "    border-width: 1px;\n" "    border-color: #1e1e1e;\n" "    border-style: solid;\n" "    border-radius: 6;\n" "    padding: 3px;\n" "    font-size: 12px;\n" "    padding-left: 5px;\n" "    padding-right: 5px;\n" "}\n" "\n" "QPushButton:pressed\n" "{\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);\n" "}\n" "\n" "QComboBox\n" "{\n" "    selection-background-color: #ffaa00;\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #565656, stop: 0.1 #525252, stop: 0.5 #4e4e4e, stop: 0.9 #4a4a4a, stop: 1 #464646);\n" "    border-style: solid;\n" "    border: 1px solid #1e1e1e;\n" "    border-radius: 5;\n" "}\n" "\n" "QComboBox:hover,QPushButton:hover\n" "{\n" "    border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "}\n" "\n" "\n" "QComboBox:on\n" "{\n" "    padding-top: 3px;\n" "    padding-left: 4px;\n" "    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);\n" "    selection-background-color: #ffaa00;\n" "}\n" "\n" "QComboBox QAbstractItemView\n" "{\n" "    border: 2px solid darkgray;\n" "    selection-background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "}\n" "\n" "QComboBox::drop-down\n" "{\n" "     subcontrol-origin: padding;\n" "     subcontrol-position: top right;\n" "     width: 15px;\n" "\n" "     border-left-width: 0px;\n" "     border-left-color: darkgray;\n" "     border-left-style: solid; /* just a single line */\n" "     border-top-right-radius: 3px; /* same radius as the QComboBox */\n" "     border-bottom-right-radius: 3px;\n" " }\n" "\n" "QComboBox::down-arrow\n" "{\n" "     image: url(:/down_arrow.png);\n" "}\n" "\n" "QGroupBox:focus\n" "{\n" "border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "}\n" "\n" "QTextEdit:focus\n" "{\n" "    border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "}\n" "\n" "QScrollBar:horizontal {\n" "     border: 1px solid #222222;\n" "     background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0.0 #121212, stop: 0.2 #282828, stop: 1 #484848);\n" "     height: 7px;\n" "     margin: 0px 16px 0 16px;\n" "}\n" "\n" "QScrollBar::handle:horizontal\n" "{\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #ffa02f, stop: 0.5 #d7801a, stop: 1 #ffa02f);\n" "      min-height: 20px;\n" "      border-radius: 2px;\n" "}\n" "\n" "QScrollBar::add-line:horizontal {\n" "      border: 1px solid #1b1b19;\n" "      border-radius: 2px;\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "      width: 14px;\n" "      subcontrol-position: right;\n" "      subcontrol-origin: margin;\n" "}\n" "\n" "QScrollBar::sub-line:horizontal {\n" "      border: 1px solid #1b1b19;\n" "      border-radius: 2px;\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "      width: 14px;\n" "     subcontrol-position: left;\n" "     subcontrol-origin: margin;\n" "}\n" "\n" "QScrollBar::right-arrow:horizontal, QScrollBar::left-arrow:horizontal\n" "{\n" "      border: 1px solid black;\n" "      width: 1px;\n" "      height: 1px;\n" "      background: white;\n" "}\n" "\n" "QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n" "{\n" "      background: none;\n" "}\n" "\n" "QScrollBar:vertical\n" "{\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0.0 #121212, stop: 0.2 #282828, stop: 1 #484848);\n" "      width: 7px;\n" "      margin: 16px 0 16px 0;\n" "      border: 1px solid #222222;\n" "}\n" "\n" "QScrollBar::handle:vertical\n" "{\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 0.5 #d7801a, stop: 1 #ffa02f);\n" "      min-height: 20px;\n" "      border-radius: 2px;\n" "}\n" "\n" "QScrollBar::add-line:vertical\n" "{\n" "      border: 1px solid #1b1b19;\n" "      border-radius: 2px;\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);\n" "      height: 14px;\n" "      subcontrol-position: bottom;\n" "      subcontrol-origin: margin;\n" "}\n" "\n" "QScrollBar::sub-line:vertical\n" "{\n" "      border: 1px solid #1b1b19;\n" "      border-radius: 2px;\n" "      background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #d7801a, stop: 1 #ffa02f);\n" "      height: 14px;\n" "      subcontrol-position: top;\n" "      subcontrol-origin: margin;\n" "}\n" "\n" "QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical\n" "{\n" "      border: 1px solid black;\n" "      width: 1px;\n" "      height: 1px;\n" "      background: white;\n" "}\n" "\n" "\n" "QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n" "{\n" "      background: none;\n" "}\n" "\n" "QTextEdit\n" "{\n" "    background-color: #242424;\n" "}\n" "\n" "QPlainTextEdit\n" "{\n" "    background-color: #242424;\n" "}\n" "\n" "QHeaderView::section\n" "{\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343, stop:1 #656565);\n" "    color: white;\n" "    padding-left: 4px;\n" "    border: 1px solid #6c6c6c;\n" "}\n" "\n" "QCheckBox:disabled\n" "{\n" "color: #414141;\n" "}\n" "\n" "QDockWidget::title\n" "{\n" "    text-align: center;\n" "    spacing: 3px; /* spacing between items in the tool bar */\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #323232, stop: 0.5 #242424, stop:1 #323232);\n" "}\n" "\n" "QDockWidget::close-button, QDockWidget::float-button\n" "{\n" "    text-align: center;\n" "    spacing: 1px; /* spacing between items in the tool bar */\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #323232, stop: 0.5 #242424, stop:1 #323232);\n" "}\n" "\n" "QDockWidget::close-button:hover, QDockWidget::float-button:hover\n" "{\n" "    background: #242424;\n" "}\n" "\n" "QDockWidget::close-button:pressed, QDockWidget::float-button:pressed\n" "{\n" "    padding: 1px -1px -1px 1px;\n" "}\n" "\n" "QMainWindow::separator\n" "{\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #161616, stop: 0.5 #151515, stop: 0.6 #212121, stop:1 #343434);\n" "    color: white;\n" "    padding-left: 4px;\n" "    border: 1px solid #4c4c4c;\n" "    spacing: 3px; /* spacing between items in the tool bar */\n" "}\n" "\n" "QMainWindow::separator:hover\n" "{\n" "\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #d7801a, stop:0.5 #b56c17 stop:1 #ffa02f);\n" "    color: white;\n" "    padding-left: 4px;\n" "    border: 1px solid #6c6c6c;\n" "    spacing: 3px; /* spacing between items in the tool bar */\n" "}\n" "\n" "QToolBar::handle\n" "{\n" "     spacing: 3px; /* spacing between items in the tool bar */\n" "     background: url(:/images/handle.png);\n" "}\n" "\n" "QMenu::separator\n" "{\n" "    height: 2px;\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #161616, stop: 0.5 #151515, stop: 0.6 #212121, stop:1 #343434);\n" "    color: white;\n" "    padding-left: 4px;\n" "    margin-left: 10px;\n" "    margin-right: 5px;\n" "}\n" "\n" "QProgressBar\n" "{\n" "    border: 2px solid grey;\n" "    border-radius: 5px;\n" "    text-align: center;\n" "}\n" "\n" "QProgressBar::chunk\n" "{\n" "    background-color: #d7801a;\n" "    width: 2.15px;\n" "    margin: 0.5px;\n" "}\n" "\n" "QTabBar::tab {\n" "    color: #b1b1b1;\n" "    border: 1px solid #444;\n" "    border-bottom-style: none;\n" "    background-color: #323232;\n" "    padding-left: 10px;\n" "    padding-right: 10px;\n" "    padding-top: 3px;\n" "    padding-bottom: 2px;\n" "    margin-right: -1px;\n" "}\n" "\n" "QTabWidget::pane {\n" "    border: 1px solid #444;\n" "    top: 1px;\n" "}\n" "\n" "QTabBar::tab:last\n" "{\n" "    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */\n" "    border-top-right-radius: 3px;\n" "}\n" "\n" "QTabBar::tab:first:!selected\n" "{\n" " margin-left: 0px; /* the last selected tab has nothing to overlap with on the right */\n" "\n" "\n" "    border-top-left-radius: 3px;\n" "}\n" "\n" "QTabBar::tab:!selected\n" "{\n" "    color: #b1b1b1;\n" "    border-bottom-style: solid;\n" "    margin-top: 3px;\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:1 #212121, stop:.4 #343434);\n" "}\n" "\n" "QTabBar::tab:selected\n" "{\n" "    border-top-left-radius: 3px;\n" "    border-top-right-radius: 3px;\n" "    margin-bottom: 0px;\n" "}\n" "\n" "QTabBar::tab:!selected:hover\n" "{\n" "    /*border-top: 2px solid #ffaa00;\n" "    padding-bottom: 3px;*/\n" "    border-top-left-radius: 3px;\n" "    border-top-right-radius: 3px;\n" "    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:1 #212121, stop:0.4 #343434, stop:0.2 #343434, stop:0.1 #ffaa00);\n" "}\n" "\n" "QRadioButton::indicator:checked, QRadioButton::indicator:unchecked{\n" "    color: #b1b1b1;\n" "    background-color: #323232;\n" "    border: 1px solid #b1b1b1;\n" "    border-radius: 6px;\n" "}\n" "\n" "QRadioButton::indicator:checked\n" "{\n" "    background-color: qradialgradient(\n" "        cx: 0.5, cy: 0.5,\n" "        fx: 0.5, fy: 0.5,\n" "        radius: 1.0,\n" "        stop: 0.25 #ffaa00,\n" "        stop: 0.3 #323232\n" "    );\n" "}\n" "\n" "QCheckBox::indicator{\n" "    color: #b1b1b1;\n" "    background-color: #323232;\n" "    border: 1px solid #b1b1b1;\n" "    width: 9px;\n" "    height: 9px;\n" "}\n" "\n" "QRadioButton::indicator\n" "{\n" "    border-radius: 6px;\n" "}\n" "\n" "QRadioButton::indicator:hover, QCheckBox::indicator:hover\n" "{\n" "    border: 1px solid #ffaa00;\n" "}\n" "\n" "QCheckBox::indicator:checked\n" "{\n" "    image: url(:/images/checkbox.png);\n" "\n" "}\n" "\n" "QCheckBox::indicator:disabled, QRadioButton::indicator:disabled\n" "{\n" "    border: 1px solid #444;\n" "}\n" "\n" "AbstractSpinBox {\n" "    padding-top: 2px;\n" "    padding-bottom: 2px;\n" "    border: 1px solid #3A3939;\n" "    background-color: #201F1F;\n" "    color: silver;\n" "    border-radius: 2px;\n" "    min-width: 75px;\n" "}\n" "\n" "QAbstractSpinBox:up-button\n" "{\n" "    background-color: transparent;\n" "    subcontrol-origin: border;\n" "    subcontrol-position: center right;\n" "}\n" "\n" "QAbstractSpinBox:down-button\n" "{\n" "    background-color: transparent;\n" "    subcontrol-origin: border;\n" "    subcontrol-position: center left;\n" "}\n" "\n" "QAbstractSpinBox::up-arrow,QAbstractSpinBox::up-arrow:disabled,QAbstractSpinBox::up-arrow:off {\n" "    image: url(:/qss_icons/rc/up_arrow_disabled.png);\n" "    width: 10px;\n" "    height: 10px;\n" "}\n" "QAbstractSpinBox::up-arrow:hover\n" "{\n" "    image: url(:/qss_icons/rc/up_arrow.png);\n" "}\n" "\n" "\n" "QAbstractSpinBox::down-arrow,QAbstractSpinBox::down-arrow:disabled,QAbstractSpinBox::down-arrow:off\n" "{\n" "    image: url(:/qss_icons/rc/down_arrow_disabled.png);\n" "    width: 10px;\n" "    height: 10px;\n" "}\n" "QAbstractSpinBox::down-arrow:hover\n" "{\n" "    image: url(:/qss_icons/rc/down_arrow.png);\n" "}\n" ""

542 
MplMainWindow
 . 
	`setDocumentMode
 ( False )

543 
MplMainWindow
 . 
	`setDockNestingEnabled
 ( True )

544 
MplMainWindow
 . 
	`setDockOptions
 ( 
QtGui
 . 
QMainWindow
 . 
AllowNestedDocks
 | 
QtGui
 . 
QMainWindow
 . 
AllowTabbedDocks
 | 
QtGui
 . 
QMainWindow
 . 
AnimatedDocks
 | 
QtGui
 . 
QMainWindow
 . 
ForceTabbedDocks
 )

545 
self
 . 
	=centralwidget
 = 
QtGui
 . 
	`QWidget
 ( 
MplMainWindow
 )

546 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

547 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

548 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

549 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
centralwidget
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

550 
self
 . 
centralwidget
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

551 
self
 . 
centralwidget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "centralwidget" ) )

552 
self
 . 
	=verticalLayout
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
centralwidget
 )

553 
self
 . 
verticalLayout
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout" ) )

554 
self
 . 
	=tabImageAnalysis
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
centralwidget
 )

555 
self
 . 
tabImageAnalysis
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 980 ) )

556 
self
 . 
tabImageAnalysis
 . 
	`setUsesScrollButtons
 ( True )

557 
self
 . 
tabImageAnalysis
 . 
	`setDocumentMode
 ( True )

558 
self
 . 
tabImageAnalysis
 . 
	`setTabsClosable
 ( False )

559 
self
 . 
tabImageAnalysis
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabImageAnalysis" ) )

560 
self
 . 
	=tabImage
 = 
QtGui
 . 
	`QWidget
 ( )

561 
self
 . 
tabImage
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabImage" ) )

562 
self
 . 
	=verticalLayout_4
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
tabImage
 )

563 
self
 . 
verticalLayout_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_4" ) )

564 
self
 . 
	=tabWidget_5
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tabImage
 )

565 
self
 . 
tabWidget_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget_5" ) )

566 
self
 . 
	=tab_17
 = 
QtGui
 . 
	`QWidget
 ( )

567 
self
 . 
tab_17
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_17" ) )

568 
self
 . 
	=verticalLayout_13
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
tab_17
 )

569 
self
 . 
verticalLayout_13
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_13" ) )

570 
self
 . 
	=mpl
 = 
	`MplWidget
 ( 
self
 . 
tab_17
 )

571 
self
 . 
mpl
 . 
	`setEnabled
 ( True )

572 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

573 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

574 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

575 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mpl
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

576 
self
 . 
mpl
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

577 
self
 . 
mpl
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

578 
self
 . 
mpl
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mpl" ) )

579 
self
 . 
verticalLayout_13
 . 
	`addWidget
 ( 
self
 . 
mpl
 )

580 
self
 . 
tabWidget_5
 . 
	`addTab
 ( 
self
 . 
tab_17
 , 
	`_fromUtf8
 ( "" ) )

581 
self
 . 
	=tab_18
 = 
QtGui
 . 
	`QWidget
 ( )

582 
self
 . 
tab_18
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_18" ) )

583 
self
 . 
	=verticalLayout_14
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
tab_18
 )

584 
self
 . 
verticalLayout_14
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_14" ) )

585 
self
 . 
	=IView
 = 
	`GraphicsView
 ( 
self
 . 
tab_18
 )

586 
self
 . 
IView
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "IView" ) )

587 
self
 . 
verticalLayout_14
 . 
	`addWidget
 ( 
self
 . 
IView
 )

588 
self
 . 
tabWidget_5
 . 
	`addTab
 ( 
self
 . 
tab_18
 , 
	`_fromUtf8
 ( "" ) )

589 
self
 . 
verticalLayout_4
 . 
	`addWidget
 ( 
self
 . 
tabWidget_5
 )

590 
self
 . 
tabImageAnalysis
 . 
	`addTab
 ( 
self
 . 
tabImage
 , 
	`_fromUtf8
 ( "" ) )

591 
self
 . 
	=tabAnalysis
 = 
QtGui
 . 
	`QWidget
 ( )

592 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

593 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

594 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

595 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
tabAnalysis
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

596 
self
 . 
tabAnalysis
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

597 
self
 . 
tabAnalysis
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabAnalysis" ) )

598 
self
 . 
	=verticalLayout_3
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
tabAnalysis
 )

599 
self
 . 
verticalLayout_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_3" ) )

600 
self
 . 
	=analysisCh
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tabAnalysis
 )

601 
self
 . 
analysisCh
 . 
	`setEnabled
 ( True )

602 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

603 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

604 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

605 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
analysisCh
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

606 
self
 . 
analysisCh
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

607 
self
 . 
analysisCh
 . 
	`setDocumentMode
 ( True )

608 
self
 . 
analysisCh
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "analysisCh" ) )

609 
self
 . 
	=Ch1tab
 = 
QtGui
 . 
	`QWidget
 ( )

610 
self
 . 
Ch1tab
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Ch1tab" ) )

611 
self
 . 
	=verticalLayout_5
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Ch1tab
 )

612 
self
 . 
verticalLayout_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_5" ) )

613 
self
 . 
	=mplCh1
 = 
	`MplWidget
 ( 
self
 . 
Ch1tab
 )

614 
self
 . 
mplCh1
 . 
	`setEnabled
 ( True )

615 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

616 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

617 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

618 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mplCh1
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

619 
self
 . 
mplCh1
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

620 
self
 . 
mplCh1
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

621 
self
 . 
mplCh1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplCh1" ) )

622 
self
 . 
verticalLayout_5
 . 
	`addWidget
 ( 
self
 . 
mplCh1
 )

623 
self
 . 
analysisCh
 . 
	`addTab
 ( 
self
 . 
Ch1tab
 , 
	`_fromUtf8
 ( "" ) )

624 
self
 . 
	=Ch2tap
 = 
QtGui
 . 
	`QWidget
 ( )

625 
self
 . 
Ch2tap
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Ch2tap" ) )

626 
self
 . 
	=verticalLayout_6
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Ch2tap
 )

627 
self
 . 
verticalLayout_6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_6" ) )

628 
self
 . 
	=mplCh2
 = 
	`MplWidget
 ( 
self
 . 
Ch2tap
 )

629 
self
 . 
mplCh2
 . 
	`setEnabled
 ( True )

630 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

631 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

632 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

633 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mplCh2
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

634 
self
 . 
mplCh2
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

635 
self
 . 
mplCh2
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

636 
self
 . 
mplCh2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplCh2" ) )

637 
self
 . 
verticalLayout_6
 . 
	`addWidget
 ( 
self
 . 
mplCh2
 )

638 
self
 . 
analysisCh
 . 
	`addTab
 ( 
self
 . 
Ch2tap
 , 
	`_fromUtf8
 ( "" ) )

639 
self
 . 
	=Ch3tab
 = 
QtGui
 . 
	`QWidget
 ( )

640 
self
 . 
Ch3tab
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Ch3tab" ) )

641 
self
 . 
	=verticalLayout_7
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Ch3tab
 )

642 
self
 . 
verticalLayout_7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_7" ) )

643 
self
 . 
	=mplCh3
 = 
	`MplWidget
 ( 
self
 . 
Ch3tab
 )

644 
self
 . 
mplCh3
 . 
	`setEnabled
 ( True )

645 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

646 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

647 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

648 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mplCh3
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

649 
self
 . 
mplCh3
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

650 
self
 . 
mplCh3
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

651 
self
 . 
mplCh3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplCh3" ) )

652 
self
 . 
verticalLayout_7
 . 
	`addWidget
 ( 
self
 . 
mplCh3
 )

653 
self
 . 
analysisCh
 . 
	`addTab
 ( 
self
 . 
Ch3tab
 , 
	`_fromUtf8
 ( "" ) )

654 
self
 . 
	=Ch4tab
 = 
QtGui
 . 
	`QWidget
 ( )

655 
self
 . 
Ch4tab
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Ch4tab" ) )

656 
self
 . 
	=verticalLayout_8
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Ch4tab
 )

657 
self
 . 
verticalLayout_8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_8" ) )

658 
self
 . 
	=mplCh4
 = 
	`MplWidget
 ( 
self
 . 
Ch4tab
 )

659 
self
 . 
mplCh4
 . 
	`setEnabled
 ( True )

660 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

661 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

662 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

663 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mplCh4
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

664 
self
 . 
mplCh4
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

665 
self
 . 
mplCh4
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

666 
self
 . 
mplCh4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplCh4" ) )

667 
self
 . 
verticalLayout_8
 . 
	`addWidget
 ( 
self
 . 
mplCh4
 )

668 
self
 . 
analysisCh
 . 
	`addTab
 ( 
self
 . 
Ch4tab
 , 
	`_fromUtf8
 ( "" ) )

669 
self
 . 
	=Ch5tab
 = 
QtGui
 . 
	`QWidget
 ( )

670 
self
 . 
Ch5tab
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Ch5tab" ) )

671 
self
 . 
	=verticalLayout_9
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Ch5tab
 )

672 
self
 . 
verticalLayout_9
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_9" ) )

673 
self
 . 
	=mplCh5
 = 
	`MplWidget
 ( 
self
 . 
Ch5tab
 )

674 
self
 . 
mplCh5
 . 
	`setEnabled
 ( True )

675 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

676 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

677 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

678 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mplCh5
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

679 
self
 . 
mplCh5
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

680 
self
 . 
mplCh5
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

681 
self
 . 
mplCh5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplCh5" ) )

682 
self
 . 
verticalLayout_9
 . 
	`addWidget
 ( 
self
 . 
mplCh5
 )

683 
self
 . 
analysisCh
 . 
	`addTab
 ( 
self
 . 
Ch5tab
 , 
	`_fromUtf8
 ( "" ) )

684 
self
 . 
	=Ch6tab
 = 
QtGui
 . 
	`QWidget
 ( )

685 
self
 . 
Ch6tab
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Ch6tab" ) )

686 
self
 . 
	=verticalLayout_10
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
Ch6tab
 )

687 
self
 . 
verticalLayout_10
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_10" ) )

688 
self
 . 
	=mplCh6
 = 
	`MplWidget
 ( 
self
 . 
Ch6tab
 )

689 
self
 . 
mplCh6
 . 
	`setEnabled
 ( True )

690 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

691 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

692 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

693 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mplCh6
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

694 
self
 . 
mplCh6
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

695 
self
 . 
mplCh6
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

696 
self
 . 
mplCh6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplCh6" ) )

697 
self
 . 
verticalLayout_10
 . 
	`addWidget
 ( 
self
 . 
mplCh6
 )

698 
self
 . 
analysisCh
 . 
	`addTab
 ( 
self
 . 
Ch6tab
 , 
	`_fromUtf8
 ( "" ) )

699 
self
 . 
verticalLayout_3
 . 
	`addWidget
 ( 
self
 . 
analysisCh
 )

700 
self
 . 
tabImageAnalysis
 . 
	`addTab
 ( 
self
 . 
tabAnalysis
 , 
	`_fromUtf8
 ( "" ) )

701 
self
 . 
	=tab_4
 = 
QtGui
 . 
	`QWidget
 ( )

702 
self
 . 
tab_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_4" ) )

703 
self
 . 
	=verticalLayout_11
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
tab_4
 )

704 
self
 . 
verticalLayout_11
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_11" ) )

705 
self
 . 
	=mpl_2
 = 
	`MplWidget
 ( 
self
 . 
tab_4
 )

706 
self
 . 
mpl_2
 . 
	`setEnabled
 ( True )

707 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

708 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

709 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

710 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
mpl_2
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

711 
self
 . 
mpl_2
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

712 
self
 . 
mpl_2
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 0 , 0 ) )

713 
self
 . 
mpl_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mpl_2" ) )

714 
self
 . 
verticalLayout_11
 . 
	`addWidget
 ( 
self
 . 
mpl_2
 )

715 
self
 . 
tabImageAnalysis
 . 
	`addTab
 ( 
self
 . 
tab_4
 , 
	`_fromUtf8
 ( "" ) )

716 
self
 . 
verticalLayout
 . 
	`addWidget
 ( 
self
 . 
tabImageAnalysis
 )

717 
MplMainWindow
 . 
	`setCentralWidget
 ( 
self
 . 
centralwidget
 )

718 
self
 . 
	=mplmenubar
 = 
QtGui
 . 
	`QMenuBar
 ( 
MplMainWindow
 )

719 
self
 . 
mplmenubar
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 0 , 1902 , 25 ) )

720 
self
 . 
mplmenubar
 . 
	`setProperty
 ( "File" , 
	`_fromUtf8
 ( "" ) )

721 
self
 . 
mplmenubar
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplmenubar" ) )

722 
self
 . 
	=mplmenuFile
 = 
QtGui
 . 
	`QMenu
 ( 
self
 . 
mplmenubar
 )

723 
self
 . 
mplmenuFile
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplmenuFile" ) )

724 
self
 . 
	=menuEdit
 = 
QtGui
 . 
	`QMenu
 ( 
self
 . 
mplmenubar
 )

725 
self
 . 
menuEdit
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "menuEdit" ) )

726 
MplMainWindow
 . 
	`setMenuBar
 ( 
self
 . 
mplmenubar
 )

727 
self
 . 
	=control
 = 
QtGui
 . 
	`QDockWidget
 ( 
MplMainWindow
 )

728 
self
 . 
control
 . 
	`setEnabled
 ( True )

729 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

730 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

731 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

732 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
control
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

733 
self
 . 
control
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

734 
self
 . 
control
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 416 , 750 ) )

735 
self
 . 
control
 . 
	`setAutoFillBackground
 ( False )

736 
self
 . 
control
 . 
	`setFloating
 ( False )

737 
self
 . 
control
 . 
	`setFeatures
 ( 
QtGui
 . 
QDockWidget
 . 
DockWidgetFloatable
 | 
QtGui
 . 
QDockWidget
 . 
DockWidgetMovable
 )

738 
self
 . 
control
 . 
	`setAllowedAreas
 ( 
QtCore
 . 
Qt
 . 
RightDockWidgetArea
 )

739 
self
 . 
control
 . 
	`setWindowTitle
 ( 
	`_fromUtf8
 ( "" ) )

740 
self
 . 
control
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "control" ) )

741 
self
 . 
	=dockWidgetContents_5
 = 
QtGui
 . 
	`QWidget
 ( )

742 
self
 . 
dockWidgetContents_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "dockWidgetContents_5" ) )

743 
self
 . 
	=tabWidget
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
dockWidgetContents_5
 )

744 
self
 . 
tabWidget
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 0 , 401 , 911 ) )

745 
self
 . 
tabWidget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget" ) )

746 
self
 . 
	=tab
 = 
QtGui
 . 
	`QWidget
 ( )

747 
self
 . 
tab
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab" ) )

748 
self
 . 
	=tabWidget_4
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tab
 )

749 
self
 . 
tabWidget_4
 . 
	`setEnabled
 ( True )

750 
self
 . 
tabWidget_4
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 0 , 374 , 801 ) )

751 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

752 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

753 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

754 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
tabWidget_4
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

755 
self
 . 
tabWidget_4
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

756 
self
 . 
tabWidget_4
 . 
	`setTabShape
 ( 
QtGui
 . 
QTabWidget
 . 
Rounded
 )

757 
self
 . 
tabWidget_4
 . 
	`setIconSize
 ( 
QtCore
 . 
	`QSize
 ( 32 , 32 ) )

758 
self
 . 
tabWidget_4
 . 
	`setDocumentMode
 ( True )

759 
self
 . 
tabWidget_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget_4" ) )

760 
self
 . 
	=tab_11
 = 
QtGui
 . 
	`QWidget
 ( )

761 
self
 . 
tab_11
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_11" ) )

762 
self
 . 
	=tabWidget_6
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tab_11
 )

763 
self
 . 
tabWidget_6
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 30 , 180 , 311 , 341 ) )

764 
self
 . 
tabWidget_6
 . 
	`setDocumentMode
 ( True )

765 
self
 . 
tabWidget_6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget_6" ) )

766 
self
 . 
	=tab_8
 = 
QtGui
 . 
	`QWidget
 ( )

767 
self
 . 
tab_8
 . 
	`setEnabled
 ( True )

768 
self
 . 
tab_8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_8" ) )

769 
self
 . 
	=label_35
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_8
 )

770 
self
 . 
label_35
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 90 , 30 , 32 , 16 ) )

771 
self
 . 
label_35
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_35" ) )

772 
self
 . 
	=label_9
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_8
 )

773 
self
 . 
label_9
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 240 , 30 , 34 , 16 ) )

774 
self
 . 
label_9
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_9" ) )

775 
self
 . 
	=label_36
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_8
 )

776 
self
 . 
label_36
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 170 , 30 , 28 , 16 ) )

777 
self
 . 
label_36
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_36" ) )

778 
self
 . 
	=layoutWidget
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
tab_8
 )

779 
self
 . 
layoutWidget
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 20 , 50 , 281 , 212 ) )

780 
self
 . 
layoutWidget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget" ) )

781 
self
 . 
	=gridLayout
 = 
QtGui
 . 
	`QGridLayout
 ( 
self
 . 
layoutWidget
 )

782 
self
 . 
gridLayout
 . 
	`setMargin
 ( 0 )

783 
self
 . 
gridLayout
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gridLayout" ) )

784 
self
 . 
	=labelCh4
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

785 
self
 . 
labelCh4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh4" ) )

786 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh4
 , 3 , 3 , 1 , 1 )

787 
self
 . 
	=unitsCh1
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

788 
self
 . 
unitsCh1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh1" ) )

789 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh1
 , 0 , 1 , 1 , 1 )

790 
self
 . 
	=labelCh3
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

791 
self
 . 
labelCh3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh3" ) )

792 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh3
 , 2 , 3 , 1 , 1 )

793 
self
 . 
	=enCh6_2
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

794 
self
 . 
enCh6_2
 . 
	`setChecked
 ( False )

795 
self
 . 
enCh6_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh6_2" ) )

796 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh6_2
 , 6 , 0 , 1 , 1 )

797 
self
 . 
	=labelCh2
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

798 
self
 . 
labelCh2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh2" ) )

799 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh2
 , 1 , 3 , 1 , 1 )

800 
self
 . 
	=gainCh2
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

801 
self
 . 
gainCh2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh2" ) )

802 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh2
 , 1 , 2 , 1 , 1 )

803 
self
 . 
	=unitsCh6_2
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

804 
self
 . 
unitsCh6_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh6_2" ) )

805 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh6_2
 , 6 , 1 , 1 , 1 )

806 
self
 . 
	=unitsCh6_3
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

807 
self
 . 
unitsCh6_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh6_3" ) )

808 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh6_3
 , 7 , 1 , 1 , 1 )

809 
self
 . 
	=gainCh6
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

810 
self
 . 
gainCh6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh6" ) )

811 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh6
 , 5 , 2 , 1 , 1 )

812 
self
 . 
	=enCh4
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

813 
self
 . 
enCh4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh4" ) )

814 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh4
 , 3 , 0 , 1 , 1 )

815 
self
 . 
	=labelCh6_3
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

816 
self
 . 
labelCh6_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh6_3" ) )

817 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh6_3
 , 7 , 3 , 1 , 1 )

818 
self
 . 
	=unitsCh5
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

819 
self
 . 
unitsCh5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh5" ) )

820 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh5
 , 4 , 1 , 1 , 1 )

821 
self
 . 
	=unitsCh4
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

822 
self
 . 
unitsCh4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh4" ) )

823 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh4
 , 3 , 1 , 1 , 1 )

824 
self
 . 
	=labelCh5
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

825 
self
 . 
labelCh5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh5" ) )

826 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh5
 , 4 , 3 , 1 , 1 )

827 
self
 . 
	=enCh3
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

828 
self
 . 
enCh3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh3" ) )

829 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh3
 , 2 , 0 , 1 , 1 )

830 
self
 . 
	=gainCh6_2
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

831 
self
 . 
gainCh6_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh6_2" ) )

832 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh6_2
 , 6 , 2 , 1 , 1 )

833 
self
 . 
	=enCh6_3
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

834 
self
 . 
enCh6_3
 . 
	`setChecked
 ( False )

835 
self
 . 
enCh6_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh6_3" ) )

836 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh6_3
 , 7 , 0 , 1 , 1 )

837 
self
 . 
	=gainCh6_3
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

838 
self
 . 
gainCh6_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh6_3" ) )

839 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh6_3
 , 7 , 2 , 1 , 1 )

840 
self
 . 
	=gainCh3
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

841 
self
 . 
gainCh3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh3" ) )

842 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh3
 , 2 , 2 , 1 , 1 )

843 
self
 . 
	=gainCh1
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

844 
self
 . 
gainCh1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh1" ) )

845 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh1
 , 0 , 2 , 1 , 1 )

846 
self
 . 
	=enCh2
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

847 
self
 . 
enCh2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh2" ) )

848 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh2
 , 1 , 0 , 1 , 1 )

849 
self
 . 
	=unitsCh6
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

850 
self
 . 
unitsCh6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh6" ) )

851 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh6
 , 5 , 1 , 1 , 1 )

852 
self
 . 
	=unitsCh2
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

853 
self
 . 
unitsCh2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh2" ) )

854 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh2
 , 1 , 1 , 1 , 1 )

855 
self
 . 
	=gainCh5
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

856 
self
 . 
gainCh5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh5" ) )

857 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh5
 , 4 , 2 , 1 , 1 )

858 
self
 . 
	=gainCh4
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

859 
self
 . 
gainCh4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gainCh4" ) )

860 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
gainCh4
 , 3 , 2 , 1 , 1 )

861 
self
 . 
	=unitsCh3
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

862 
self
 . 
unitsCh3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unitsCh3" ) )

863 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
unitsCh3
 , 2 , 1 , 1 , 1 )

864 
self
 . 
	=labelCh6
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

865 
self
 . 
labelCh6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh6" ) )

866 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh6
 , 5 , 3 , 1 , 1 )

867 
self
 . 
	=labelCh1
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

868 
self
 . 
labelCh1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh1" ) )

869 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh1
 , 0 , 3 , 1 , 1 )

870 
self
 . 
	=labelCh6_2
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget
 )

871 
self
 . 
labelCh6_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "labelCh6_2" ) )

872 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
labelCh6_2
 , 6 , 3 , 1 , 1 )

873 
self
 . 
	=enCh1
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

874 
self
 . 
enCh1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh1" ) )

875 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh1
 , 0 , 0 , 1 , 1 )

876 
self
 . 
	=enCh5
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

877 
self
 . 
enCh5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh5" ) )

878 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh5
 , 4 , 0 , 1 , 1 )

879 
self
 . 
	=enCh6
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
layoutWidget
 )

880 
self
 . 
enCh6
 . 
	`setChecked
 ( False )

881 
self
 . 
enCh6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "enCh6" ) )

882 
self
 . 
gridLayout
 . 
	`addWidget
 ( 
self
 . 
enCh6
 , 5 , 0 , 1 , 1 )

883 
self
 . 
tabWidget_6
 . 
	`addTab
 ( 
self
 . 
tab_8
 , 
	`_fromUtf8
 ( "" ) )

884 
self
 . 
	=tab_6
 = 
QtGui
 . 
	`QWidget
 ( )

885 
self
 . 
tab_6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_6" ) )

886 
self
 . 
	=hDistance
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
tab_6
 )

887 
self
 . 
hDistance
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 1 , 77 , 109 , 27 ) )

888 
self
 . 
hDistance
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "hDistance" ) )

889 
self
 . 
	=vDistance
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
tab_6
 )

890 
self
 . 
vDistance
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 1 , 110 , 109 , 27 ) )

891 
self
 . 
vDistance
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "vDistance" ) )

892 
self
 . 
	=calBounds
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_6
 )

893 
self
 . 
calBounds
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 1 , 44 , 92 , 27 ) )

894 
self
 . 
calBounds
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "calBounds" ) )

895 
self
 . 
	=writeCalibration
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_6
 )

896 
self
 . 
writeCalibration
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 140 , 180 , 93 , 27 ) )

897 
self
 . 
writeCalibration
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "writeCalibration" ) )

898 
self
 . 
	=label_13
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_6
 )

899 
self
 . 
label_13
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 117 , 82 , 132 , 17 ) )

900 
self
 . 
label_13
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_13" ) )

901 
self
 . 
	=label_14
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_6
 )

902 
self
 . 
label_14
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 117 , 111 , 132 , 17 ) )

903 
self
 . 
label_14
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_14" ) )

904 
self
 . 
	=calBoundsDislpay
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_6
 )

905 
self
 . 
calBoundsDislpay
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 115 , 51 , 181 , 17 ) )

906 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

907 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

908 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

909 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
calBoundsDislpay
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

910 
self
 . 
calBoundsDislpay
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

911 
self
 . 
calBoundsDislpay
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "calBoundsDislpay" ) )

912 
self
 . 
	=imageBounds
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_6
 )

913 
self
 . 
imageBounds
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 1 , 143 , 109 , 27 ) )

914 
self
 . 
imageBounds
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "imageBounds" ) )

915 
self
 . 
	=imageBoundDisplay
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_6
 )

916 
self
 . 
imageBoundDisplay
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 116 , 149 , 191 , 17 ) )

917 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

918 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

919 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

920 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
imageBoundDisplay
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

921 
self
 . 
imageBoundDisplay
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

922 
self
 . 
imageBoundDisplay
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "imageBoundDisplay" ) )

923 
self
 . 
	=CalScan
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_6
 )

924 
self
 . 
CalScan
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 1 , 11 , 85 , 27 ) )

925 
self
 . 
CalScan
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "CalScan" ) )

926 
self
 . 
	=ScanSize
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
tab_6
 )

927 
self
 . 
ScanSize
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 107 , 12 , 108 , 23 ) )

928 
self
 . 
ScanSize
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ScanSize" ) )

929 
self
 . 
ScanSize
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

930 
self
 . 
ScanSize
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

931 
self
 . 
ScanSize
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

932 
self
 . 
ScanSize
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

933 
self
 . 
tabWidget_6
 . 
	`addTab
 ( 
self
 . 
tab_6
 , 
	`_fromUtf8
 ( "" ) )

934 
self
 . 
	=tab_7
 = 
QtGui
 . 
	`QWidget
 ( )

935 
self
 . 
tab_7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_7" ) )

936 
self
 . 
	=Notes
 = 
QtGui
 . 
	`QTextEdit
 ( 
self
 . 
tab_7
 )

937 
self
 . 
Notes
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 6 , 11 , 275 , 249 ) )

938 
self
 . 
Notes
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Notes" ) )

939 
self
 . 
tabWidget_6
 . 
	`addTab
 ( 
self
 . 
tab_7
 , 
	`_fromUtf8
 ( "" ) )

940 
self
 . 
	=frame_4
 = 
QtGui
 . 
	`QFrame
 ( 
self
 . 
tab_11
 )

941 
self
 . 
frame_4
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 4 , 6 , 373 , 161 ) )

942 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

943 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

944 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

945 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
frame_4
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

946 
self
 . 
frame_4
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

947 
self
 . 
frame_4
 . 
	`setFrameShape
 ( 
QtGui
 . 
QFrame
 . 
StyledPanel
 )

948 
self
 . 
frame_4
 . 
	`setFrameShadow
 ( 
QtGui
 . 
QFrame
 . 
Raised
 )

949 
self
 . 
frame_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "frame_4" ) )

950 
self
 . 
	=SamplesPerPoint
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
frame_4
 )

951 
self
 . 
SamplesPerPoint
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 180 , 12 , 71 , 21 ) )

952 
self
 . 
SamplesPerPoint
 . 
	`setAlignment
 ( 
QtCore
 . 
Qt
 . 
AlignCenter
 )

953 
self
 . 
SamplesPerPoint
 . 
	`setMinimum
 ( 1 )

954 
self
 . 
SamplesPerPoint
 . 
	`setMaximum
 ( 50 )

955 
self
 . 
SamplesPerPoint
 . 
	`setSingleStep
 ( 1 )

956 
self
 . 
SamplesPerPoint
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SamplesPerPoint" ) )

957 
self
 . 
	=label_45
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

958 
self
 . 
label_45
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 260 , 10 , 72 , 17 ) )

959 
self
 . 
label_45
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_45" ) )

960 
self
 . 
	=label_46
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

961 
self
 . 
label_46
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 96 , 13 , 63 , 17 ) )

962 
self
 . 
label_46
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_46" ) )

963 
self
 . 
	=label_61
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

964 
self
 . 
label_61
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 95 , 43 , 29 , 17 ) )

965 
self
 . 
label_61
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_61" ) )

966 
self
 . 
	=Mag
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
frame_4
 )

967 
self
 . 
Mag
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 9 , 41 , 81 , 24 ) )

968 
self
 . 
Mag
 . 
	`setText
 ( 
	`_fromUtf8
 ( "" ) )

969 
self
 . 
Mag
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Mag" ) )

970 
self
 . 
	=Delay
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
frame_4
 )

971 
self
 . 
Delay
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 10 , 81 , 23 ) )

972 
self
 . 
Delay
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Delay" ) )

973 
self
 . 
	=dxMicrons
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
frame_4
 )

974 
self
 . 
dxMicrons
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 178 , 43 , 71 , 27 ) )

975 
self
 . 
dxMicrons
 . 
	`setText
 ( 
	`_fromUtf8
 ( "" ) )

976 
self
 . 
dxMicrons
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "dxMicrons" ) )

977 
self
 . 
	=label_15
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

978 
self
 . 
label_15
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 260 , 50 , 92 , 17 ) )

979 
self
 . 
label_15
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_15" ) )

980 
self
 . 
	=label_24
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

981 
self
 . 
label_24
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 3 , 108 , 91 , 20 ) )

982 
self
 . 
label_24
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_24" ) )

983 
self
 . 
	=ROIdim
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

984 
self
 . 
ROIdim
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 97 , 108 , 109 , 17 ) )

985 
self
 . 
ROIdim
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ROIdim" ) )

986 
self
 . 
	=updateROI
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
frame_4
 )

987 
self
 . 
updateROI
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 8 , 74 , 91 , 27 ) )

988 
self
 . 
updateROI
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "updateROI" ) )

989 
self
 . 
	=OScomboBox
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
frame_4
 )

990 
self
 . 
OScomboBox
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 190 , 130 , 61 , 25 ) )

991 
self
 . 
OScomboBox
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "OScomboBox" ) )

992 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

993 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

994 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

995 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

996 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

997 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

998 
self
 . 
OScomboBox
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

999 
self
 . 
	=label_41
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_4
 )

1000 
self
 . 
label_41
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 260 , 130 , 91 , 16 ) )

1001 
self
 . 
label_41
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_41" ) )

1002 
self
 . 
	=progressBar_3
 = 
QtGui
 . 
	`QProgressBar
 ( 
self
 . 
tab_11
 )

1003 
self
 . 
progressBar_3
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 90 , 520 , 211 , 16 ) )

1004 
self
 . 
progressBar_3
 . 
	`setProperty
 ( "value" , 0 )

1005 
self
 . 
progressBar_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "progressBar_3" ) )

1006 
self
 . 
	=saveName
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
tab_11
 )

1007 
self
 . 
saveName
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 55 , 591 , 144 , 27 ) )

1008 
self
 . 
saveName
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "saveName" ) )

1009 
self
 . 
	=Channel
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
tab_11
 )

1010 
self
 . 
Channel
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 57 , 559 , 55 , 27 ) )

1011 
self
 . 
Channel
 . 
	`setAutoFillBackground
 ( False )

1012 
self
 . 
Channel
 . 
	`setAlignment
 ( 
QtCore
 . 
Qt
 . 
AlignCenter
 )

1013 
self
 . 
Channel
 . 
	`setMaximum
 ( 1 )

1014 
self
 . 
Channel
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Channel" ) )

1015 
self
 . 
	=layoutWidget1
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
tab_11
 )

1016 
self
 . 
layoutWidget1
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 230 , 560 , 79 , 54 ) )

1017 
self
 . 
layoutWidget1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget1" ) )

1018 
self
 . 
	=gridLayout_2
 = 
QtGui
 . 
	`QGridLayout
 ( 
self
 . 
layoutWidget1
 )

1019 
self
 . 
gridLayout_2
 . 
	`setMargin
 ( 0 )

1020 
self
 . 
gridLayout_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "gridLayout_2" ) )

1021 
self
 . 
	=Scan
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget1
 )

1022 
self
 . 
Scan
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Scan" ) )

1023 
self
 . 
gridLayout_2
 . 
	`addWidget
 ( 
self
 . 
Scan
 , 0 , 0 , 1 , 1 )

1024 
self
 . 
	=SaveScan
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget1
 )

1025 
self
 . 
SaveScan
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SaveScan" ) )

1026 
self
 . 
gridLayout_2
 . 
	`addWidget
 ( 
self
 . 
SaveScan
 , 1 , 0 , 1 , 1 )

1027 
self
 . 
	=widget
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
tab_11
 )

1028 
self
 . 
widget
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 60 , 630 , 101 , 41 ) )

1029 
self
 . 
widget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "widget" ) )

1030 
self
 . 
	=horizontalLayout_8
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
widget
 )

1031 
self
 . 
horizontalLayout_8
 . 
	`setSpacing
 ( 1 )

1032 
self
 . 
horizontalLayout_8
 . 
	`setMargin
 ( 0 )

1033 
self
 . 
horizontalLayout_8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_8" ) )

1034 
self
 . 
	=CrossHair
 = 
QtGui
 . 
	`QToolButton
 ( 
self
 . 
widget
 )

1035 
self
 . 
CrossHair
 . 
	`setWhatsThis
 ( 
	`_fromUtf8
 ( "" ) )

1036 
	=icon
 = 
QtGui
 . 
	`QIcon
 ( )

1037 
icon
 . 
	`addPixmap
 ( 
QtGui
 . 
	`QPixmap
 ( 
	`_fromUtf8
 ( ":/images/Cross.png" ) ) , 
QtGui
 . 
QIcon
 . 
Normal
 , 
QtGui
 . 
QIcon
 . 
Off
 )

1038 
icon
 . 
	`addPixmap
 ( 
QtGui
 . 
	`QPixmap
 ( 
	`_fromUtf8
 ( ":/images/CrossOR.png" ) ) , 
QtGui
 . 
QIcon
 . 
Active
 , 
QtGui
 . 
QIcon
 . 
On
 )

1039 
self
 . 
CrossHair
 . 
	`setIcon
 ( 
icon
 )

1040 
self
 . 
CrossHair
 . 
	`setIconSize
 ( 
QtCore
 . 
	`QSize
 ( 30 , 30 ) )

1041 
self
 . 
CrossHair
 . 
	`setCheckable
 ( True )

1042 
self
 . 
CrossHair
 . 
	`setPopupMode
 ( 
QtGui
 . 
QToolButton
 . 
InstantPopup
 )

1043 
self
 . 
CrossHair
 . 
	`setAutoRaise
 ( True )

1044 
self
 . 
CrossHair
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "CrossHair" ) )

1045 
self
 . 
horizontalLayout_8
 . 
	`addWidget
 ( 
self
 . 
CrossHair
 )

1046 
self
 . 
	=ROI
 = 
QtGui
 . 
	`QToolButton
 ( 
self
 . 
widget
 )

1047 
	=icon1
 = 
QtGui
 . 
	`QIcon
 ( )

1048 
icon1
 . 
	`addPixmap
 ( 
QtGui
 . 
	`QPixmap
 ( 
	`_fromUtf8
 ( ":/images/ROI.png" ) ) , 
QtGui
 . 
QIcon
 . 
Normal
 , 
QtGui
 . 
QIcon
 . 
Off
 )

1049 
icon1
 . 
	`addPixmap
 ( 
QtGui
 . 
	`QPixmap
 ( 
	`_fromUtf8
 ( ":/images/ROI_OR.png" ) ) , 
QtGui
 . 
QIcon
 . 
Active
 , 
QtGui
 . 
QIcon
 . 
On
 )

1050 
self
 . 
ROI
 . 
	`setIcon
 ( 
icon1
 )

1051 
self
 . 
ROI
 . 
	`setIconSize
 ( 
QtCore
 . 
	`QSize
 ( 30 , 30 ) )

1052 
self
 . 
ROI
 . 
	`setCheckable
 ( True )

1053 
self
 . 
ROI
 . 
	`setPopupMode
 ( 
QtGui
 . 
QToolButton
 . 
InstantPopup
 )

1054 
self
 . 
ROI
 . 
	`setAutoRaise
 ( True )

1055 
self
 . 
ROI
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ROI" ) )

1056 
self
 . 
horizontalLayout_8
 . 
	`addWidget
 ( 
self
 . 
ROI
 )

1057 
self
 . 
	=Line
 = 
QtGui
 . 
	`QToolButton
 ( 
self
 . 
widget
 )

1058 
	=icon2
 = 
QtGui
 . 
	`QIcon
 ( )

1059 
icon2
 . 
	`addPixmap
 ( 
QtGui
 . 
	`QPixmap
 ( 
	`_fromUtf8
 ( ":/images/LineP.png" ) ) , 
QtGui
 . 
QIcon
 . 
Normal
 , 
QtGui
 . 
QIcon
 . 
Off
 )

1060 
icon2
 . 
	`addPixmap
 ( 
QtGui
 . 
	`QPixmap
 ( 
	`_fromUtf8
 ( ":/images/LineP_OR.png" ) ) , 
QtGui
 . 
QIcon
 . 
Active
 , 
QtGui
 . 
QIcon
 . 
On
 )

1061 
self
 . 
Line
 . 
	`setIcon
 ( 
icon2
 )

1062 
self
 . 
Line
 . 
	`setIconSize
 ( 
QtCore
 . 
	`QSize
 ( 30 , 30 ) )

1063 
self
 . 
Line
 . 
	`setCheckable
 ( True )

1064 
self
 . 
Line
 . 
	`setPopupMode
 ( 
QtGui
 . 
QToolButton
 . 
InstantPopup
 )

1065 
self
 . 
Line
 . 
	`setAutoRaise
 ( True )

1066 
self
 . 
Line
 . 
	`setArrowType
 ( 
QtCore
 . 
Qt
 . 
NoArrow
 )

1067 
self
 . 
Line
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Line" ) )

1068 
self
 . 
horizontalLayout_8
 . 
	`addWidget
 ( 
self
 . 
Line
 )

1069 
self
 . 
tabWidget_4
 . 
	`addTab
 ( 
self
 . 
tab_11
 , 
	`_fromUtf8
 ( "" ) )

1070 
self
 . 
	=tab_14
 = 
QtGui
 . 
	`QWidget
 ( )

1071 
self
 . 
tab_14
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_14" ) )

1072 
self
 . 
	=tabWidget_7
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tab_14
 )

1073 
self
 . 
tabWidget_7
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 7 , 428 , 491 ) )

1074 
self
 . 
tabWidget_7
 . 
	`setDocumentMode
 ( True )

1075 
self
 . 
tabWidget_7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget_7" ) )

1076 
self
 . 
	=tab_20
 = 
QtGui
 . 
	`QWidget
 ( )

1077 
self
 . 
tab_20
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_20" ) )

1078 
self
 . 
	=BeamCurrent
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
tab_20
 )

1079 
self
 . 
BeamCurrent
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 30 , 146 , 27 ) )

1080 
self
 . 
BeamCurrent
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "BeamCurrent" ) )

1081 
self
 . 
	=label_62
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_20
 )

1082 
self
 . 
label_62
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 160 , 30 , 91 , 17 ) )

1083 
self
 . 
label_62
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_62" ) )

1084 
self
 . 
	=label_10
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_20
 )

1085 
self
 . 
label_10
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 160 , 60 , 131 , 17 ) )

1086 
self
 . 
label_10
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_10" ) )

1087 
self
 . 
	=KV
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
tab_20
 )

1088 
self
 . 
KV
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 60 , 146 , 27 ) )

1089 
self
 . 
KV
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "KV" ) )

1090 
self
 . 
tabWidget_7
 . 
	`addTab
 ( 
self
 . 
tab_20
 , 
	`_fromUtf8
 ( "" ) )

1091 
self
 . 
	=tab_15
 = 
QtGui
 . 
	`QWidget
 ( )

1092 
self
 . 
tab_15
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_15" ) )

1093 
self
 . 
	=Aux1Spin
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
tab_15
 )

1094 
self
 . 
Aux1Spin
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 40 , 91 , 25 ) )

1095 
self
 . 
Aux1Spin
 . 
	`setDecimals
 ( 3 )

1096 
self
 . 
Aux1Spin
 . 
	`setMinimum
 ( - 10.0 )

1097 
self
 . 
Aux1Spin
 . 
	`setMaximum
 ( 10.0 )

1098 
self
 . 
Aux1Spin
 . 
	`setSingleStep
 ( 0.001 )

1099 
self
 . 
Aux1Spin
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1Spin" ) )

1100 
self
 . 
	=Aux2Spin
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
tab_15
 )

1101 
self
 . 
Aux2Spin
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 80 , 91 , 25 ) )

1102 
self
 . 
Aux2Spin
 . 
	`setDecimals
 ( 3 )

1103 
self
 . 
Aux2Spin
 . 
	`setMinimum
 ( - 10.0 )

1104 
self
 . 
Aux2Spin
 . 
	`setMaximum
 ( 10.0 )

1105 
self
 . 
Aux2Spin
 . 
	`setSingleStep
 ( 0.001 )

1106 
self
 . 
Aux2Spin
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux2Spin" ) )

1107 
self
 . 
	=label_47
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_15
 )

1108 
self
 . 
label_47
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 104 , 44 , 62 , 16 ) )

1109 
self
 . 
label_47
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_47" ) )

1110 
self
 . 
	=label_48
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_15
 )

1111 
self
 . 
label_48
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 104 , 83 , 62 , 16 ) )

1112 
self
 . 
label_48
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_48" ) )

1113 
self
 . 
	=SetAux1
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_15
 )

1114 
self
 . 
SetAux1
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 160 , 38 , 71 , 24 ) )

1115 
self
 . 
SetAux1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SetAux1" ) )

1116 
self
 . 
	=SetAux2
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_15
 )

1117 
self
 . 
SetAux2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 160 , 76 , 71 , 26 ) )

1118 
self
 . 
SetAux2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SetAux2" ) )

1119 
self
 . 
	=label_49
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_15
 )

1120 
self
 . 
label_49
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 90 , 130 , 81 , 21 ) )

1121 
self
 . 
label_49
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_49" ) )

1122 
self
 . 
	=label_50
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_15
 )

1123 
self
 . 
label_50
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 90 , 170 , 81 , 21 ) )

1124 
self
 . 
label_50
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_50" ) )

1125 
self
 . 
	=Aux1Value
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_15
 )

1126 
self
 . 
Aux1Value
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 20 , 130 , 62 , 17 ) )

1127 
self
 . 
Aux1Value
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1Value" ) )

1128 
self
 . 
	=Aux2Value
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_15
 )

1129 
self
 . 
Aux2Value
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 20 , 170 , 62 , 17 ) )

1130 
self
 . 
Aux2Value
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux2Value" ) )

1131 
self
 . 
tabWidget_7
 . 
	`addTab
 ( 
self
 . 
tab_15
 , 
	`_fromUtf8
 ( "" ) )

1132 
self
 . 
	=Sweep_2
 = 
QtGui
 . 
	`QWidget
 ( )

1133 
self
 . 
Sweep_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Sweep_2" ) )

1134 
self
 . 
	=frame_5
 = 
QtGui
 . 
	`QFrame
 ( 
self
 . 
Sweep_2
 )

1135 
self
 . 
frame_5
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 10 , 311 , 421 ) )

1136 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

1137 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1138 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1139 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
frame_5
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1140 
self
 . 
frame_5
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1141 
self
 . 
frame_5
 . 
	`setFrameShape
 ( 
QtGui
 . 
QFrame
 . 
StyledPanel
 )

1142 
self
 . 
frame_5
 . 
	`setFrameShadow
 ( 
QtGui
 . 
QFrame
 . 
Raised
 )

1143 
self
 . 
frame_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "frame_5" ) )

1144 
self
 . 
	=label_51
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_5
 )

1145 
self
 . 
label_51
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 0 , 51 , 21 ) )

1146 
self
 . 
label_51
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_51" ) )

1147 
self
 . 
	=Aux1En
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
frame_5
 )

1148 
self
 . 
Aux1En
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 70 , 0 , 61 , 20 ) )

1149 
self
 . 
Aux1En
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1En" ) )

1150 
self
 . 
	=delayAux1
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
frame_5
 )

1151 
self
 . 
delayAux1
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 100 , 41 , 27 ) )

1152 
self
 . 
delayAux1
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "delayAux1" ) )

1153 
self
 . 
	=label_11
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_5
 )

1154 
self
 . 
label_11
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 50 , 100 , 51 , 21 ) )

1155 
self
 . 
label_11
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_11" ) )

1156 
self
 . 
	=SweepDir
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
frame_5
 )

1157 
self
 . 
SweepDir
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 160 , 51 , 29 ) )

1158 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

1159 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1160 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1161 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
SweepDir
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1162 
self
 . 
SweepDir
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1163 
self
 . 
SweepDir
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SweepDir" ) )

1164 
self
 . 
SweepDir
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1165 
self
 . 
SweepDir
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1166 
self
 . 
	=label_42
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_5
 )

1167 
self
 . 
label_42
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 140 , 101 , 20 ) )

1168 
self
 . 
label_42
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_42" ) )

1169 
self
 . 
	=TransChannel
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
frame_5
 )

1170 
self
 . 
TransChannel
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 210 , 55 , 27 ) )

1171 
self
 . 
TransChannel
 . 
	`setMaximum
 ( 5 )

1172 
self
 . 
TransChannel
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "TransChannel" ) )

1173 
self
 . 
	=label_8
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
frame_5
 )

1174 
self
 . 
label_8
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 60 , 210 , 25 , 17 ) )

1175 
self
 . 
label_8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_8" ) )

1176 
self
 . 
	=SweepName
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
frame_5
 )

1177 
self
 . 
SweepName
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 130 , 310 , 113 , 27 ) )

1178 
self
 . 
SweepName
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SweepName" ) )

1179 
self
 . 
	=layoutWidget2
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame_5
 )

1180 
self
 . 
layoutWidget2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 130 , 30 , 148 , 91 ) )

1181 
self
 . 
layoutWidget2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget2" ) )

1182 
self
 . 
	=horizontalLayout_3
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
layoutWidget2
 )

1183 
self
 . 
horizontalLayout_3
 . 
	`setMargin
 ( 0 )

1184 
self
 . 
horizontalLayout_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_3" ) )

1185 
self
 . 
	=verticalLayout_2
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

1186 
self
 . 
verticalLayout_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_2" ) )

1187 
self
 . 
	=Aux1Start
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
layoutWidget2
 )

1188 
self
 . 
Aux1Start
 . 
	`setDecimals
 ( 3 )

1189 
self
 . 
Aux1Start
 . 
	`setMinimum
 ( 0.0 )

1190 
self
 . 
Aux1Start
 . 
	`setMaximum
 ( 10.0 )

1191 
self
 . 
Aux1Start
 . 
	`setSingleStep
 ( 0.25 )

1192 
self
 . 
Aux1Start
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1Start" ) )

1193 
self
 . 
verticalLayout_2
 . 
	`addWidget
 ( 
self
 . 
Aux1Start
 )

1194 
self
 . 
	=Aux1End
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
layoutWidget2
 )

1195 
self
 . 
Aux1End
 . 
	`setDecimals
 ( 3 )

1196 
self
 . 
Aux1End
 . 
	`setMinimum
 ( - 10.0 )

1197 
self
 . 
Aux1End
 . 
	`setMaximum
 ( 10.0 )

1198 
self
 . 
Aux1End
 . 
	`setSingleStep
 ( 0.25 )

1199 
self
 . 
Aux1End
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1End" ) )

1200 
self
 . 
verticalLayout_2
 . 
	`addWidget
 ( 
self
 . 
Aux1End
 )

1201 
self
 . 
	=Aux1VStep
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
layoutWidget2
 )

1202 
self
 . 
Aux1VStep
 . 
	`setPrefix
 ( 
	`_fromUtf8
 ( "" ) )

1203 
self
 . 
Aux1VStep
 . 
	`setDecimals
 ( 3 )

1204 
self
 . 
Aux1VStep
 . 
	`setMinimum
 ( - 1.0 )

1205 
self
 . 
Aux1VStep
 . 
	`setMaximum
 ( 1.0 )

1206 
self
 . 
Aux1VStep
 . 
	`setSingleStep
 ( 0.001 )

1207 
self
 . 
Aux1VStep
 . 
	`setProperty
 ( "value" , 0.01 )

1208 
self
 . 
Aux1VStep
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1VStep" ) )

1209 
self
 . 
verticalLayout_2
 . 
	`addWidget
 ( 
self
 . 
Aux1VStep
 )

1210 
self
 . 
horizontalLayout_3
 . 
	`addLayout
 ( 
self
 . 
verticalLayout_2
 )

1211 
self
 . 
	=verticalLayout_15
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

1212 
self
 . 
verticalLayout_15
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_15" ) )

1213 
self
 . 
	=label_52
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget2
 )

1214 
self
 . 
label_52
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_52" ) )

1215 
self
 . 
verticalLayout_15
 . 
	`addWidget
 ( 
self
 . 
label_52
 )

1216 
self
 . 
	=label_53
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget2
 )

1217 
self
 . 
label_53
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_53" ) )

1218 
self
 . 
verticalLayout_15
 . 
	`addWidget
 ( 
self
 . 
label_53
 )

1219 
self
 . 
	=label_54
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget2
 )

1220 
self
 . 
label_54
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_54" ) )

1221 
self
 . 
verticalLayout_15
 . 
	`addWidget
 ( 
self
 . 
label_54
 )

1222 
self
 . 
horizontalLayout_3
 . 
	`addLayout
 ( 
self
 . 
verticalLayout_15
 )

1223 
self
 . 
	=layoutWidget3
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame_5
 )

1224 
self
 . 
layoutWidget3
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 30 , 124 , 60 ) )

1225 
self
 . 
layoutWidget3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget3" ) )

1226 
self
 . 
	=horizontalLayout_4
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
layoutWidget3
 )

1227 
self
 . 
horizontalLayout_4
 . 
	`setMargin
 ( 0 )

1228 
self
 . 
horizontalLayout_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_4" ) )

1229 
self
 . 
	=verticalLayout_17
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

1230 
self
 . 
verticalLayout_17
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_17" ) )

1231 
self
 . 
	=Aux1Min
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
layoutWidget3
 )

1232 
self
 . 
Aux1Min
 . 
	`setDecimals
 ( 3 )

1233 
self
 . 
Aux1Min
 . 
	`setMinimum
 ( 0.0 )

1234 
self
 . 
Aux1Min
 . 
	`setMaximum
 ( 10.0 )

1235 
self
 . 
Aux1Min
 . 
	`setSingleStep
 ( 0.01 )

1236 
self
 . 
Aux1Min
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1Min" ) )

1237 
self
 . 
verticalLayout_17
 . 
	`addWidget
 ( 
self
 . 
Aux1Min
 )

1238 
self
 . 
	=Aux1SpinMin_3
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
layoutWidget3
 )

1239 
self
 . 
Aux1SpinMin_3
 . 
	`setDecimals
 ( 3 )

1240 
self
 . 
Aux1SpinMin_3
 . 
	`setMinimum
 ( 0.0 )

1241 
self
 . 
Aux1SpinMin_3
 . 
	`setMaximum
 ( 10.0 )

1242 
self
 . 
Aux1SpinMin_3
 . 
	`setSingleStep
 ( 0.25 )

1243 
self
 . 
Aux1SpinMin_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Aux1SpinMin_3" ) )

1244 
self
 . 
verticalLayout_17
 . 
	`addWidget
 ( 
self
 . 
Aux1SpinMin_3
 )

1245 
self
 . 
horizontalLayout_4
 . 
	`addLayout
 ( 
self
 . 
verticalLayout_17
 )

1246 
self
 . 
	=verticalLayout_16
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

1247 
self
 . 
verticalLayout_16
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_16" ) )

1248 
self
 . 
	=label_55
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget3
 )

1249 
self
 . 
label_55
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_55" ) )

1250 
self
 . 
verticalLayout_16
 . 
	`addWidget
 ( 
self
 . 
label_55
 )

1251 
self
 . 
	=label_56
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget3
 )

1252 
self
 . 
label_56
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_56" ) )

1253 
self
 . 
verticalLayout_16
 . 
	`addWidget
 ( 
self
 . 
label_56
 )

1254 
self
 . 
horizontalLayout_4
 . 
	`addLayout
 ( 
self
 . 
verticalLayout_16
 )

1255 
self
 . 
	=layoutWidget4
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame_5
 )

1256 
self
 . 
layoutWidget4
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 130 , 160 , 151 , 31 ) )

1257 
self
 . 
layoutWidget4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget4" ) )

1258 
self
 . 
	=horizontalLayout_5
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
layoutWidget4
 )

1259 
self
 . 
horizontalLayout_5
 . 
	`setMargin
 ( 0 )

1260 
self
 . 
horizontalLayout_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_5" ) )

1261 
self
 . 
	=OScomboBox_2
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
layoutWidget4
 )

1262 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

1263 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1264 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1265 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
OScomboBox_2
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1266 
self
 . 
OScomboBox_2
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1267 
self
 . 
OScomboBox_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "OScomboBox_2" ) )

1268 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1269 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1270 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1271 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1272 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1273 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1274 
self
 . 
OScomboBox_2
 . 
	`addItem
 ( 
	`_fromUtf8
 ( "" ) )

1275 
self
 . 
horizontalLayout_5
 . 
	`addWidget
 ( 
self
 . 
OScomboBox_2
 )

1276 
self
 . 
	=label_16
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget4
 )

1277 
self
 . 
label_16
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_16" ) )

1278 
self
 . 
horizontalLayout_5
 . 
	`addWidget
 ( 
self
 . 
label_16
 )

1279 
self
 . 
	=layoutWidget5
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame_5
 )

1280 
self
 . 
layoutWidget5
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 130 , 130 , 151 , 27 ) )

1281 
self
 . 
layoutWidget5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget5" ) )

1282 
self
 . 
	=horizontalLayout_6
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
layoutWidget5
 )

1283 
self
 . 
horizontalLayout_6
 . 
	`setMargin
 ( 0 )

1284 
self
 . 
horizontalLayout_6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_6" ) )

1285 
self
 . 
	=SamplesPerPoint_2
 = 
QtGui
 . 
	`QSpinBox
 ( 
self
 . 
layoutWidget5
 )

1286 
self
 . 
SamplesPerPoint_2
 . 
	`setMinimum
 ( 1 )

1287 
self
 . 
SamplesPerPoint_2
 . 
	`setMaximum
 ( 100 )

1288 
self
 . 
SamplesPerPoint_2
 . 
	`setSingleStep
 ( 1 )

1289 
self
 . 
SamplesPerPoint_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SamplesPerPoint_2" ) )

1290 
self
 . 
horizontalLayout_6
 . 
	`addWidget
 ( 
self
 . 
SamplesPerPoint_2
 )

1291 
self
 . 
	=label_12
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget5
 )

1292 
self
 . 
label_12
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_12" ) )

1293 
self
 . 
horizontalLayout_6
 . 
	`addWidget
 ( 
self
 . 
label_12
 )

1294 
self
 . 
	=layoutWidget6
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
frame_5
 )

1295 
self
 . 
layoutWidget6
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 240 , 121 , 101 ) )

1296 
self
 . 
layoutWidget6
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget6" ) )

1297 
self
 . 
	=verticalLayout_18
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
layoutWidget6
 )

1298 
self
 . 
verticalLayout_18
 . 
	`setMargin
 ( 0 )

1299 
self
 . 
verticalLayout_18
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_18" ) )

1300 
self
 . 
	=horizontalLayout_7
 = 
QtGui
 . 
	`QHBoxLayout
 ( )

1301 
self
 . 
horizontalLayout_7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout_7" ) )

1302 
self
 . 
	=TransGain
 = 
QtGui
 . 
	`QLineEdit
 ( 
self
 . 
layoutWidget6
 )

1303 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

1304 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1305 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1306 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
TransGain
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1307 
self
 . 
TransGain
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1308 
self
 . 
TransGain
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "TransGain" ) )

1309 
self
 . 
horizontalLayout_7
 . 
	`addWidget
 ( 
self
 . 
TransGain
 )

1310 
self
 . 
	=label_17
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget6
 )

1311 
self
 . 
label_17
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_17" ) )

1312 
self
 . 
horizontalLayout_7
 . 
	`addWidget
 ( 
self
 . 
label_17
 )

1313 
self
 . 
verticalLayout_18
 . 
	`addLayout
 ( 
self
 . 
horizontalLayout_7
 )

1314 
self
 . 
	=Sweep
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget6
 )

1315 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

1316 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1317 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1318 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
Sweep
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1319 
self
 . 
Sweep
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1320 
self
 . 
Sweep
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "Sweep" ) )

1321 
self
 . 
verticalLayout_18
 . 
	`addWidget
 ( 
self
 . 
Sweep
 )

1322 
self
 . 
	=SaveSweep
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget6
 )

1323 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Preferred
 , 
QtGui
 . 
QSizePolicy
 . 
Preferred
 )

1324 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1325 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1326 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
SaveSweep
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1327 
self
 . 
SaveSweep
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1328 
self
 . 
SaveSweep
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SaveSweep" ) )

1329 
self
 . 
verticalLayout_18
 . 
	`addWidget
 ( 
self
 . 
SaveSweep
 )

1330 
self
 . 
tabWidget_7
 . 
	`addTab
 ( 
self
 . 
Sweep_2
 , 
	`_fromUtf8
 ( "" ) )

1331 
self
 . 
tabWidget_4
 . 
	`addTab
 ( 
self
 . 
tab_14
 , 
	`_fromUtf8
 ( "" ) )

1332 
self
 . 
tabWidget
 . 
	`addTab
 ( 
self
 . 
tab
 , 
	`_fromUtf8
 ( "" ) )

1333 
self
 . 
	=tab_2
 = 
QtGui
 . 
	`QWidget
 ( )

1334 
self
 . 
tab_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_2" ) )

1335 
self
 . 
	=tabWidget_2
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tab_2
 )

1336 
self
 . 
tabWidget_2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 370 , 371 , 491 ) )

1337 
self
 . 
tabWidget_2
 . 
	`setToolTip
 ( 
	`_fromUtf8
 ( "" ) )

1338 
self
 . 
tabWidget_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget_2" ) )

1339 
self
 . 
	=tab_10
 = 
QtGui
 . 
	`QWidget
 ( )

1340 
self
 . 
tab_10
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_10" ) )

1341 
self
 . 
	=ScanCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
tab_10
 )

1342 
self
 . 
ScanCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 3 , 15 , 177 , 31 ) )

1343 
self
 . 
ScanCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ScanCombo" ) )

1344 
self
 . 
	=unloadScan
 = 
QtGui
 . 
	`QToolButton
 ( 
self
 . 
tab_10
 )

1345 
self
 . 
unloadScan
 . 
	`setEnabled
 ( False )

1346 
self
 . 
unloadScan
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 185 , 17 , 21 , 27 ) )

1347 
self
 . 
unloadScan
 . 
	`setToolTip
 ( 
	`_fromUtf8
 ( "" ) )

1348 
self
 . 
unloadScan
 . 
	`setCheckable
 ( True )

1349 
self
 . 
unloadScan
 . 
	`setAutoRaise
 ( False )

1350 
self
 . 
unloadScan
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "unloadScan" ) )

1351 
self
 . 
	=label_18
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_10
 )

1352 
self
 . 
label_18
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 46 , 50 , 62 , 17 ) )

1353 
self
 . 
label_18
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_18" ) )

1354 
self
 . 
	=profilelist
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
tab_10
 )

1355 
self
 . 
profilelist
 . 
	`setEnabled
 ( False )

1356 
self
 . 
profilelist
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 45 , 72 , 117 , 31 ) )

1357 
self
 . 
profilelist
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "profilelist" ) )

1358 
self
 . 
	=SaveButton
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_10
 )

1359 
self
 . 
SaveButton
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 3 , 269 , 93 , 27 ) )

1360 
self
 . 
SaveButton
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SaveButton" ) )

1361 
self
 . 
	=SwapAxes
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_10
 )

1362 
self
 . 
SwapAxes
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 209 , 17 , 41 , 27 ) )

1363 
self
 . 
SwapAxes
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SwapAxes" ) )

1364 
self
 . 
	=groupBox_4
 = 
QtGui
 . 
	`QGroupBox
 ( 
self
 . 
tab_10
 )

1365 
self
 . 
groupBox_4
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 18 , 109 , 319 , 149 ) )

1366 
self
 . 
groupBox_4
 . 
	`setFlat
 ( False )

1367 
self
 . 
groupBox_4
 . 
	`setCheckable
 ( False )

1368 
self
 . 
groupBox_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "groupBox_4" ) )

1369 
self
 . 
	=textEdit
 = 
QtGui
 . 
	`QTextEdit
 ( 
self
 . 
groupBox_4
 )

1370 
self
 . 
textEdit
 . 
	`setEnabled
 ( False )

1371 
self
 . 
textEdit
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 176 , 25 , 143 , 120 ) )

1372 
self
 . 
textEdit
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "textEdit" ) )

1373 
self
 . 
	=label_38
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox_4
 )

1374 
self
 . 
label_38
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 176 , 5 , 62 , 17 ) )

1375 
self
 . 
label_38
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_38" ) )

1376 
self
 . 
	=layoutWidget7
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
groupBox_4
 )

1377 
self
 . 
layoutWidget7
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 13 , 26 , 149 , 111 ) )

1378 
self
 . 
layoutWidget7
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget7" ) )

1379 
self
 . 
	=formLayout
 = 
QtGui
 . 
	`QFormLayout
 ( 
self
 . 
layoutWidget7
 )

1380 
self
 . 
formLayout
 . 
	`setMargin
 ( 0 )

1381 
self
 . 
formLayout
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "formLayout" ) )

1382 
self
 . 
	=label_26
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1383 
self
 . 
label_26
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_26" ) )

1384 
self
 . 
formLayout
 . 
	`setWidget
 ( 0 , 
QtGui
 . 
QFormLayout
 . 
LabelRole
 , 
self
 . 
label_26
 )

1385 
self
 . 
	=label_27
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1386 
self
 . 
label_27
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_27" ) )

1387 
self
 . 
formLayout
 . 
	`setWidget
 ( 0 , 
QtGui
 . 
QFormLayout
 . 
FieldRole
 , 
self
 . 
label_27
 )

1388 
self
 . 
	=label_28
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1389 
self
 . 
label_28
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_28" ) )

1390 
self
 . 
formLayout
 . 
	`setWidget
 ( 1 , 
QtGui
 . 
QFormLayout
 . 
LabelRole
 , 
self
 . 
label_28
 )

1391 
self
 . 
	=label_29
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1392 
self
 . 
label_29
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_29" ) )

1393 
self
 . 
formLayout
 . 
	`setWidget
 ( 1 , 
QtGui
 . 
QFormLayout
 . 
FieldRole
 , 
self
 . 
label_29
 )

1394 
self
 . 
	=label_30
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1395 
self
 . 
label_30
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_30" ) )

1396 
self
 . 
formLayout
 . 
	`setWidget
 ( 2 , 
QtGui
 . 
QFormLayout
 . 
LabelRole
 , 
self
 . 
label_30
 )

1397 
self
 . 
	=label_31
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1398 
self
 . 
label_31
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_31" ) )

1399 
self
 . 
formLayout
 . 
	`setWidget
 ( 2 , 
QtGui
 . 
QFormLayout
 . 
FieldRole
 , 
self
 . 
label_31
 )

1400 
self
 . 
	=label_32
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1401 
self
 . 
label_32
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_32" ) )

1402 
self
 . 
formLayout
 . 
	`setWidget
 ( 3 , 
QtGui
 . 
QFormLayout
 . 
LabelRole
 , 
self
 . 
label_32
 )

1403 
self
 . 
	=label_33
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1404 
self
 . 
label_33
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_33" ) )

1405 
self
 . 
formLayout
 . 
	`setWidget
 ( 3 , 
QtGui
 . 
QFormLayout
 . 
FieldRole
 , 
self
 . 
label_33
 )

1406 
self
 . 
	=label_34
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1407 
self
 . 
label_34
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_34" ) )

1408 
self
 . 
formLayout
 . 
	`setWidget
 ( 4 , 
QtGui
 . 
QFormLayout
 . 
LabelRole
 , 
self
 . 
label_34
 )

1409 
self
 . 
	=label_37
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
layoutWidget7
 )

1410 
self
 . 
label_37
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_37" ) )

1411 
self
 . 
formLayout
 . 
	`setWidget
 ( 4 , 
QtGui
 . 
QFormLayout
 . 
FieldRole
 , 
self
 . 
label_37
 )

1412 
self
 . 
	=ExportProfile
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_10
 )

1413 
self
 . 
ExportProfile
 . 
	`setEnabled
 ( False )

1414 
self
 . 
ExportProfile
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 166 , 74 , 53 , 27 ) )

1415 
self
 . 
ExportProfile
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ExportProfile" ) )

1416 
self
 . 
	=FlipLR
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_10
 )

1417 
self
 . 
FlipLR
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 252 , 17 , 26 , 27 ) )

1418 
self
 . 
FlipLR
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "FlipLR" ) )

1419 
self
 . 
	=FlipUD
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_10
 )

1420 
self
 . 
FlipUD
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 280 , 17 , 43 , 27 ) )

1421 
self
 . 
FlipUD
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "FlipUD" ) )

1422 
self
 . 
tabWidget_2
 . 
	`addTab
 ( 
self
 . 
tab_10
 , 
	`_fromUtf8
 ( "" ) )

1423 
self
 . 
	=tab_12
 = 
QtGui
 . 
	`QWidget
 ( )

1424 
self
 . 
tab_12
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_12" ) )

1425 
self
 . 
	=TransportcomboBox
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
tab_12
 )

1426 
self
 . 
TransportcomboBox
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 5 , 7 , 169 , 31 ) )

1427 
self
 . 
TransportcomboBox
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "TransportcomboBox" ) )

1428 
self
 . 
	=PlotTrans
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_12
 )

1429 
self
 . 
PlotTrans
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 174 , 9 , 21 , 27 ) )

1430 
self
 . 
PlotTrans
 . 
	`setMouseTracking
 ( False )

1431 
self
 . 
PlotTrans
 . 
	`setAcceptDrops
 ( False )

1432 
self
 . 
PlotTrans
 . 
	`setStatusTip
 ( 
	`_fromUtf8
 ( "" ) )

1433 
self
 . 
PlotTrans
 . 
	`setWhatsThis
 ( 
	`_fromUtf8
 ( "" ) )

1434 
self
 . 
PlotTrans
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotTrans" ) )

1435 
self
 . 
	=ExportTransPort
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_12
 )

1436 
self
 . 
ExportTransPort
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 196 , 9 , 26 , 27 ) )

1437 
self
 . 
ExportTransPort
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ExportTransPort" ) )

1438 
self
 . 
tabWidget_2
 . 
	`addTab
 ( 
self
 . 
tab_12
 , 
	`_fromUtf8
 ( "" ) )

1439 
self
 . 
	=tab_24
 = 
QtGui
 . 
	`QWidget
 ( )

1440 
self
 . 
tab_24
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_24" ) )

1441 
self
 . 
	=SubPlotComobo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
tab_24
 )

1442 
self
 . 
SubPlotComobo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 52 , 1 , 89 , 31 ) )

1443 
self
 . 
SubPlotComobo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SubPlotComobo" ) )

1444 
self
 . 
	=AxisCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
tab_24
 )

1445 
self
 . 
AxisCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 51 , 32 , 89 , 31 ) )

1446 
self
 . 
AxisCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "AxisCombo" ) )

1447 
self
 . 
	=groupBox_2
 = 
QtGui
 . 
	`QGroupBox
 ( 
self
 . 
tab_24
 )

1448 
self
 . 
groupBox_2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 4 , 65 , 361 , 91 ) )

1449 
self
 . 
groupBox_2
 . 
	`setFlat
 ( False )

1450 
self
 . 
groupBox_2
 . 
	`setCheckable
 ( False )

1451 
self
 . 
groupBox_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "groupBox_2" ) )

1452 
self
 . 
	=PlotScansCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_2
 )

1453 
self
 . 
PlotScansCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 1 , 21 , 150 , 31 ) )

1454 
self
 . 
PlotScansCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotScansCombo" ) )

1455 
self
 . 
	=PlotScansComboCH
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_2
 )

1456 
self
 . 
PlotScansComboCH
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 150 , 20 , 63 , 31 ) )

1457 
self
 . 
PlotScansComboCH
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotScansComboCH" ) )

1458 
self
 . 
	=label_21
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox_2
 )

1459 
self
 . 
label_21
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 157 , 2 , 62 , 17 ) )

1460 
self
 . 
label_21
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_21" ) )

1461 
self
 . 
	=AddPlotScan
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_2
 )

1462 
self
 . 
AddPlotScan
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 300 , 20 , 21 , 27 ) )

1463 
self
 . 
AddPlotScan
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "AddPlotScan" ) )

1464 
self
 . 
	=PlotScansSpinAlpha
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
groupBox_2
 )

1465 
self
 . 
PlotScansSpinAlpha
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 220 , 20 , 71 , 21 ) )

1466 
self
 . 
PlotScansSpinAlpha
 . 
	`setMaximum
 ( 1.0 )

1467 
self
 . 
PlotScansSpinAlpha
 . 
	`setSingleStep
 ( 0.05 )

1468 
self
 . 
PlotScansSpinAlpha
 . 
	`setProperty
 ( "value" , 1.0 )

1469 
self
 . 
PlotScansSpinAlpha
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotScansSpinAlpha" ) )

1470 
self
 . 
	=label_25
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox_2
 )

1471 
self
 . 
label_25
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 222 , 4 , 43 , 17 ) )

1472 
self
 . 
label_25
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_25" ) )

1473 
self
 . 
	=ColorMap
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_2
 )

1474 
self
 . 
ColorMap
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 61 , 54 , 89 , 31 ) )

1475 
self
 . 
ColorMap
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ColorMap" ) )

1476 
self
 . 
	=ColorBar
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_2
 )

1477 
self
 . 
ColorBar
 . 
	`setEnabled
 ( True )

1478 
self
 . 
ColorBar
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 250 , 60 , 91 , 27 ) )

1479 
self
 . 
ColorBar
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ColorBar" ) )

1480 
self
 . 
	=ExportScan
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_2
 )

1481 
self
 . 
ExportScan
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 330 , 20 , 26 , 27 ) )

1482 
self
 . 
ExportScan
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ExportScan" ) )

1483 
self
 . 
	=reverse
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
groupBox_2
 )

1484 
self
 . 
reverse
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 150 , 60 , 91 , 21 ) )

1485 
self
 . 
reverse
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "reverse" ) )

1486 
self
 . 
	=groupBox
 = 
QtGui
 . 
	`QGroupBox
 ( 
self
 . 
tab_24
 )

1487 
self
 . 
groupBox
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 260 , 357 , 101 ) )

1488 
self
 . 
groupBox
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "groupBox" ) )

1489 
self
 . 
	=PlotProfileComboCH
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox
 )

1490 
self
 . 
PlotProfileComboCH
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 150 , 20 , 63 , 31 ) )

1491 
self
 . 
PlotProfileComboCH
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotProfileComboCH" ) )

1492 
self
 . 
	=label_20
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox
 )

1493 
self
 . 
label_20
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 150 , 0 , 62 , 17 ) )

1494 
self
 . 
label_20
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_20" ) )

1495 
self
 . 
	=PlotProfileCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox
 )

1496 
self
 . 
PlotProfileCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 20 , 150 , 31 ) )

1497 
self
 . 
PlotProfileCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotProfileCombo" ) )

1498 
self
 . 
	=AddPlotProfile
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox
 )

1499 
self
 . 
AddPlotProfile
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 290 , 20 , 21 , 27 ) )

1500 
self
 . 
AddPlotProfile
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "AddPlotProfile" ) )

1501 
self
 . 
	=PlotProfileAlpha
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
groupBox
 )

1502 
self
 . 
PlotProfileAlpha
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 216 , 24 , 71 , 27 ) )

1503 
self
 . 
PlotProfileAlpha
 . 
	`setMaximum
 ( 1.0 )

1504 
self
 . 
PlotProfileAlpha
 . 
	`setSingleStep
 ( 0.05 )

1505 
self
 . 
PlotProfileAlpha
 . 
	`setProperty
 ( "value" , 1.0 )

1506 
self
 . 
PlotProfileAlpha
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotProfileAlpha" ) )

1507 
self
 . 
	=label_23
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox
 )

1508 
self
 . 
label_23
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 216 , 5 , 62 , 17 ) )

1509 
self
 . 
label_23
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_23" ) )

1510 
self
 . 
	=ExportProfile_2
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox
 )

1511 
self
 . 
ExportProfile_2
 . 
	`setEnabled
 ( True )

1512 
self
 . 
ExportProfile_2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 330 , 20 , 26 , 27 ) )

1513 
self
 . 
ExportProfile_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ExportProfile_2" ) )

1514 
self
 . 
	=PlotColorCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox
 )

1515 
self
 . 
PlotColorCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 60 , 60 , 89 , 31 ) )

1516 
self
 . 
PlotColorCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotColorCombo" ) )

1517 
self
 . 
	=label_19
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_24
 )

1518 
self
 . 
label_19
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 8 , 51 , 16 ) )

1519 
self
 . 
label_19
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_19" ) )

1520 
self
 . 
	=label_22
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_24
 )

1521 
self
 . 
label_22
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 2 , 39 , 41 , 16 ) )

1522 
self
 . 
label_22
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_22" ) )

1523 
self
 . 
	=groupBox_3
 = 
QtGui
 . 
	`QGroupBox
 ( 
self
 . 
tab_24
 )

1524 
self
 . 
groupBox_3
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 390 , 357 , 50 ) )

1525 
self
 . 
groupBox_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "groupBox_3" ) )

1526 
self
 . 
	=ActivePlotsCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_3
 )

1527 
self
 . 
ActivePlotsCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 2 , 19 , 150 , 31 ) )

1528 
self
 . 
ActivePlotsCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ActivePlotsCombo" ) )

1529 
self
 . 
	=RemovePlot
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_3
 )

1530 
self
 . 
RemovePlot
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 153 , 21 , 91 , 27 ) )

1531 
self
 . 
RemovePlot
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "RemovePlot" ) )

1532 
self
 . 
	=AddAxis
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_24
 )

1533 
self
 . 
AddAxis
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 145 , 35 , 21 , 27 ) )

1534 
self
 . 
AddAxis
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "AddAxis" ) )

1535 
self
 . 
	=AddSubPlot
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_24
 )

1536 
self
 . 
AddSubPlot
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 146 , 4 , 21 , 27 ) )

1537 
self
 . 
AddSubPlot
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "AddSubPlot" ) )

1538 
self
 . 
	=RemoveSubPlot
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_24
 )

1539 
self
 . 
RemoveSubPlot
 . 
	`setEnabled
 ( False )

1540 
self
 . 
RemoveSubPlot
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 171 , 4 , 21 , 27 ) )

1541 
self
 . 
RemoveSubPlot
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "RemoveSubPlot" ) )

1542 
self
 . 
	=RemoveAxis
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_24
 )

1543 
self
 . 
RemoveAxis
 . 
	`setEnabled
 ( False )

1544 
self
 . 
RemoveAxis
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 171 , 36 , 21 , 27 ) )

1545 
self
 . 
RemoveAxis
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "RemoveAxis" ) )

1546 
self
 . 
	=ClearAxis
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_24
 )

1547 
self
 . 
ClearAxis
 . 
	`setEnabled
 ( False )

1548 
self
 . 
ClearAxis
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 197 , 36 , 43 , 27 ) )

1549 
self
 . 
ClearAxis
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ClearAxis" ) )

1550 
self
 . 
	=groupBox_5
 = 
QtGui
 . 
	`QGroupBox
 ( 
self
 . 
tab_24
 )

1551 
self
 . 
groupBox_5
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 160 , 361 , 91 ) )

1552 
self
 . 
groupBox_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "groupBox_5" ) )

1553 
self
 . 
	=PlotSlicesCombo
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_5
 )

1554 
self
 . 
PlotSlicesCombo
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 0 , 20 , 150 , 31 ) )

1555 
self
 . 
PlotSlicesCombo
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotSlicesCombo" ) )

1556 
self
 . 
	=label_40
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox_5
 )

1557 
self
 . 
label_40
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 160 , 0 , 62 , 17 ) )

1558 
self
 . 
label_40
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_40" ) )

1559 
self
 . 
	=reverse2
 = 
QtGui
 . 
	`QCheckBox
 ( 
self
 . 
groupBox_5
 )

1560 
self
 . 
reverse2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 153 , 58 , 91 , 21 ) )

1561 
self
 . 
reverse2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "reverse2" ) )

1562 
self
 . 
	=PlotSliceSpinAlpha
 = 
QtGui
 . 
	`QDoubleSpinBox
 ( 
self
 . 
groupBox_5
 )

1563 
self
 . 
PlotSliceSpinAlpha
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 220 , 20 , 71 , 31 ) )

1564 
self
 . 
PlotSliceSpinAlpha
 . 
	`setMaximum
 ( 1.0 )

1565 
self
 . 
PlotSliceSpinAlpha
 . 
	`setSingleStep
 ( 0.05 )

1566 
self
 . 
PlotSliceSpinAlpha
 . 
	`setProperty
 ( "value" , 1.0 )

1567 
self
 . 
PlotSliceSpinAlpha
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotSliceSpinAlpha" ) )

1568 
self
 . 
	=label_39
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
groupBox_5
 )

1569 
self
 . 
label_39
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 225 , 2 , 43 , 17 ) )

1570 
self
 . 
label_39
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_39" ) )

1571 
self
 . 
	=ColorBar2
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_5
 )

1572 
self
 . 
ColorBar2
 . 
	`setEnabled
 ( True )

1573 
self
 . 
ColorBar2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 243 , 58 , 91 , 27 ) )

1574 
self
 . 
ColorBar2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ColorBar2" ) )

1575 
self
 . 
	=AddPlotSlice
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_5
 )

1576 
self
 . 
AddPlotSlice
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 300 , 20 , 21 , 27 ) )

1577 
self
 . 
AddPlotSlice
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "AddPlotSlice" ) )

1578 
self
 . 
	=ExportSlice
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
groupBox_5
 )

1579 
self
 . 
ExportSlice
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 330 , 20 , 26 , 27 ) )

1580 
self
 . 
ExportSlice
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ExportSlice" ) )

1581 
self
 . 
	=PlotSliceComboCH
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_5
 )

1582 
self
 . 
PlotSliceComboCH
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 156 , 19 , 63 , 31 ) )

1583 
self
 . 
PlotSliceComboCH
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "PlotSliceComboCH" ) )

1584 
self
 . 
	=ColorMap2
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
groupBox_5
 )

1585 
self
 . 
ColorMap2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 60 , 50 , 89 , 31 ) )

1586 
self
 . 
ColorMap2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ColorMap2" ) )

1587 
self
 . 
tabWidget_2
 . 
	`addTab
 ( 
self
 . 
tab_24
 , 
	`_fromUtf8
 ( "" ) )

1588 
self
 . 
	=tabWidget_3
 = 
QtGui
 . 
	`QTabWidget
 ( 
self
 . 
tab_2
 )

1589 
self
 . 
tabWidget_3
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 10 , 0 , 370 , 361 ) )

1590 
self
 . 
tabWidget_3
 . 
	`setMinimumSize
 ( 
QtCore
 . 
	`QSize
 ( 250 , 250 ) )

1591 
self
 . 
tabWidget_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tabWidget_3" ) )

1592 
self
 . 
	=tab_5
 = 
QtGui
 . 
	`QWidget
 ( )

1593 
self
 . 
tab_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_5" ) )

1594 
self
 . 
	=TestProfile
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_5
 )

1595 
self
 . 
TestProfile
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 12 , 166 , 91 , 27 ) )

1596 
self
 . 
TestProfile
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "TestProfile" ) )

1597 
self
 . 
tabWidget_3
 . 
	`addTab
 ( 
self
 . 
tab_5
 , 
	`_fromUtf8
 ( "" ) )

1598 
self
 . 
	=tab_9
 = 
QtGui
 . 
	`QWidget
 ( )

1599 
self
 . 
tab_9
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_9" ) )

1600 
self
 . 
	=getBounds_pushButton
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
tab_9
 )

1601 
self
 . 
getBounds_pushButton
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 30 , 10 , 94 , 27 ) )

1602 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Fixed
 , 
QtGui
 . 
QSizePolicy
 . 
Fixed
 )

1603 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1604 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1605 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
getBounds_pushButton
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1606 
self
 . 
getBounds_pushButton
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1607 
self
 . 
getBounds_pushButton
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "getBounds_pushButton" ) )

1608 
self
 . 
	=label_2
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1609 
self
 . 
label_2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 13 , 49 , 16 , 17 ) )

1610 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Fixed
 , 
QtGui
 . 
QSizePolicy
 . 
Fixed
 )

1611 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1612 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1613 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
label_2
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1614 
self
 . 
label_2
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1615 
self
 . 
label_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_2" ) )

1616 
self
 . 
	=label_3
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1617 
self
 . 
label_3
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 13 , 78 , 17 , 17 ) )

1618 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Fixed
 , 
QtGui
 . 
QSizePolicy
 . 
Fixed
 )

1619 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1620 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1621 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
label_3
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1622 
self
 . 
label_3
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1623 
self
 . 
label_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_3" ) )

1624 
self
 . 
	=xstart
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1625 
self
 . 
xstart
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 36 , 49 , 71 , 16 ) )

1626 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

1627 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1628 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1629 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
xstart
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1630 
self
 . 
xstart
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1631 
self
 . 
xstart
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "xstart" ) )

1632 
self
 . 
	=xdelta
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1633 
self
 . 
xdelta
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 36 , 78 , 71 , 17 ) )

1634 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

1635 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1636 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1637 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
xdelta
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1638 
self
 . 
xdelta
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1639 
self
 . 
xdelta
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "xdelta" ) )

1640 
self
 . 
	=label_4
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1641 
self
 . 
label_4
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 110 , 50 , 16 , 17 ) )

1642 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Fixed
 , 
QtGui
 . 
QSizePolicy
 . 
Fixed
 )

1643 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1644 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1645 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
label_4
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1646 
self
 . 
label_4
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1647 
self
 . 
label_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_4" ) )

1648 
self
 . 
	=label_5
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1649 
self
 . 
label_5
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 110 , 80 , 17 , 17 ) )

1650 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Fixed
 , 
QtGui
 . 
QSizePolicy
 . 
Fixed
 )

1651 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1652 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1653 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
label_5
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1654 
self
 . 
label_5
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1655 
self
 . 
label_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_5" ) )

1656 
self
 . 
	=ystart
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1657 
self
 . 
ystart
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 134 , 49 , 91 , 20 ) )

1658 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

1659 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1660 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1661 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
ystart
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1662 
self
 . 
ystart
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1663 
self
 . 
ystart
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ystart" ) )

1664 
self
 . 
	=ydelta
 = 
QtGui
 . 
	`QLabel
 ( 
self
 . 
tab_9
 )

1665 
self
 . 
ydelta
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 134 , 78 , 101 , 20 ) )

1666 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

1667 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1668 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1669 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
ydelta
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1670 
self
 . 
ydelta
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1671 
self
 . 
ydelta
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ydelta" ) )

1672 
self
 . 
	=layoutWidget8
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
tab_9
 )

1673 
self
 . 
layoutWidget8
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 30 , 130 , 321 , 29 ) )

1674 
self
 . 
layoutWidget8
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget8" ) )

1675 
self
 . 
	=horizontalLayout
 = 
QtGui
 . 
	`QHBoxLayout
 ( 
self
 . 
layoutWidget8
 )

1676 
self
 . 
horizontalLayout
 . 
	`setMargin
 ( 0 )

1677 
self
 . 
horizontalLayout
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "horizontalLayout" ) )

1678 
self
 . 
	=ShowSlice
 = 
QtGui
 . 
	`QPushButton
 ( 
self
 . 
layoutWidget8
 )

1679 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Fixed
 , 
QtGui
 . 
QSizePolicy
 . 
Fixed
 )

1680 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

1681 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

1682 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
ShowSlice
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

1683 
self
 . 
ShowSlice
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

1684 
self
 . 
ShowSlice
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ShowSlice" ) )

1685 
self
 . 
horizontalLayout
 . 
	`addWidget
 ( 
self
 . 
ShowSlice
 )

1686 
self
 . 
	=SliceType
 = 
QtGui
 . 
	`QComboBox
 ( 
self
 . 
layoutWidget8
 )

1687 
self
 . 
SliceType
 . 
	`setEnabled
 ( False )

1688 
self
 . 
SliceType
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SliceType" ) )

1689 
self
 . 
horizontalLayout
 . 
	`addWidget
 ( 
self
 . 
SliceType
 )

1690 
self
 . 
tabWidget_3
 . 
	`addTab
 ( 
self
 . 
tab_9
 , 
	`_fromUtf8
 ( "" ) )

1691 
self
 . 
	=tab_16
 = 
QtGui
 . 
	`QWidget
 ( )

1692 
self
 . 
tab_16
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "tab_16" ) )

1693 
self
 . 
	=layoutWidget_2
 = 
QtGui
 . 
	`QWidget
 ( 
self
 . 
tab_16
 )

1694 
self
 . 
layoutWidget_2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 6 , 9 , 351 , 291 ) )

1695 
self
 . 
layoutWidget_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "layoutWidget_2" ) )

1696 
self
 . 
	=verticalLayout_12
 = 
QtGui
 . 
	`QVBoxLayout
 ( 
self
 . 
layoutWidget_2
 )

1697 
self
 . 
verticalLayout_12
 . 
	`setMargin
 ( 0 )

1698 
self
 . 
verticalLayout_12
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "verticalLayout_12" ) )

1699 
self
 . 
	=HistWidget
 = 
	`MplHIST
 ( 
self
 . 
layoutWidget_2
 )

1700 
self
 . 
HistWidget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "HistWidget" ) )

1701 
self
 . 
verticalLayout_12
 . 
	`addWidget
 ( 
self
 . 
HistWidget
 )

1702 
self
 . 
	=SliderVmin
 = 
QtGui
 . 
	`QSlider
 ( 
self
 . 
layoutWidget_2
 )

1703 
self
 . 
SliderVmin
 . 
	`setMaximum
 ( 49 )

1704 
self
 . 
SliderVmin
 . 
	`setProperty
 ( "value" , 0 )

1705 
self
 . 
SliderVmin
 . 
	`setOrientation
 ( 
QtCore
 . 
Qt
 . 
Horizontal
 )

1706 
self
 . 
SliderVmin
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SliderVmin" ) )

1707 
self
 . 
verticalLayout_12
 . 
	`addWidget
 ( 
self
 . 
SliderVmin
 )

1708 
self
 . 
	=SliderVmax
 = 
QtGui
 . 
	`QSlider
 ( 
self
 . 
layoutWidget_2
 )

1709 
self
 . 
SliderVmax
 . 
	`setMaximum
 ( 49 )

1710 
self
 . 
SliderVmax
 . 
	`setProperty
 ( "value" , 49 )

1711 
self
 . 
SliderVmax
 . 
	`setOrientation
 ( 
QtCore
 . 
Qt
 . 
Horizontal
 )

1712 
self
 . 
SliderVmax
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "SliderVmax" ) )

1713 
self
 . 
verticalLayout_12
 . 
	`addWidget
 ( 
self
 . 
SliderVmax
 )

1714 
self
 . 
tabWidget_3
 . 
	`addTab
 ( 
self
 . 
tab_16
 , 
	`_fromUtf8
 ( "" ) )

1715 
self
 . 
tabWidget
 . 
	`addTab
 ( 
self
 . 
tab_2
 , 
	`_fromUtf8
 ( "" ) )

1716 
self
 . 
control
 . 
	`setWidget
 ( 
self
 . 
dockWidgetContents_5
 )

1717 
MplMainWindow
 . 
	`addDockWidget
 ( 
QtCore
 . 
Qt
 . 
	`DockWidgetArea
 ( 2 ) , 
self
 . 
control
 )

1718 
self
 . 
	=mplactionOpen
 = 
QtGui
 . 
	`QAction
 ( 
MplMainWindow
 )

1719 
self
 . 
mplactionOpen
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplactionOpen" ) )

1720 
self
 . 
	=mplactionQuit
 = 
QtGui
 . 
	`QAction
 ( 
MplMainWindow
 )

1721 
self
 . 
mplactionQuit
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "mplactionQuit" ) )

1722 
self
 . 
	=actionSave
 = 
QtGui
 . 
	`QAction
 ( 
MplMainWindow
 )

1723 
self
 . 
actionSave
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "actionSave" ) )

1724 
self
 . 
	=actionCalibrate
 = 
QtGui
 . 
	`QAction
 ( 
MplMainWindow
 )

1725 
self
 . 
actionCalibrate
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "actionCalibrate" ) )

1726 
self
 . 
	=actionCalibrate_2
 = 
QtGui
 . 
	`QAction
 ( 
MplMainWindow
 )

1727 
self
 . 
actionCalibrate_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "actionCalibrate_2" ) )

1728 
self
 . 
	=actionSave_2
 = 
QtGui
 . 
	`QAction
 ( 
MplMainWindow
 )

1729 
self
 . 
actionSave_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "actionSave_2" ) )

1730 
self
 . 
mplmenuFile
 . 
	`addAction
 ( 
self
 . 
mplactionOpen
 )

1731 
self
 . 
mplmenuFile
 . 
	`addSeparator
 ( )

1732 
self
 . 
mplmenuFile
 . 
	`addAction
 ( 
self
 . 
mplactionQuit
 )

1733 
self
 . 
mplmenuFile
 . 
	`addSeparator
 ( )

1734 
self
 . 
mplmenuFile
 . 
	`addAction
 ( 
self
 . 
actionSave_2
 )

1735 
self
 . 
menuEdit
 . 
	`addAction
 ( 
self
 . 
actionCalibrate_2
 )

1736 
self
 . 
mplmenubar
 . 
	`addAction
 ( 
self
 . 
mplmenuFile
 . 
	`menuAction
 ( ) )

1737 
self
 . 
mplmenubar
 . 
	`addAction
 ( 
self
 . 
menuEdit
 . 
	`menuAction
 ( ) )

1739 
self
 . 
	`retranslateUi
 ( 
MplMainWindow
 )

1740 
self
 . 
tabImageAnalysis
 . 
	`setCurrentIndex
 ( 0 )

1741 
self
 . 
tabWidget_5
 . 
	`setCurrentIndex
 ( 1 )

1742 
self
 . 
analysisCh
 . 
	`setCurrentIndex
 ( 5 )

1743 
self
 . 
tabWidget
 . 
	`setCurrentIndex
 ( 0 )

1744 
self
 . 
tabWidget_4
 . 
	`setCurrentIndex
 ( 0 )

1745 
self
 . 
tabWidget_6
 . 
	`setCurrentIndex
 ( 0 )

1746 
self
 . 
tabWidget_7
 . 
	`setCurrentIndex
 ( 0 )

1747 
self
 . 
tabWidget_2
 . 
	`setCurrentIndex
 ( 0 )

1748 
self
 . 
tabWidget_3
 . 
	`setCurrentIndex
 ( 0 )

1749 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotScansCombo
 , 
QtCore
 . 
	`SIGNAL
 ( 
	`_fromUtf8
 ( "currentIndexChanged(int)" ) ) , 
self
 . 
ScanCombo
 . 
setCurrentIndex
 )

1750 
QtCore
 . 
QMetaObject
 . 
	`connectSlotsByName
 ( 
MplMainWindow
 )

1751 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unitsCh1
 , 
self
 . 
gainCh1
 )

1752 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
gainCh1
 , 
self
 . 
labelCh1
 )

1753 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
labelCh1
 , 
self
 . 
unitsCh2
 )

1754 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unitsCh2
 , 
self
 . 
gainCh2
 )

1755 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
gainCh2
 , 
self
 . 
labelCh2
 )

1756 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
labelCh2
 , 
self
 . 
unitsCh3
 )

1757 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unitsCh3
 , 
self
 . 
gainCh3
 )

1758 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
gainCh3
 , 
self
 . 
labelCh3
 )

1759 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
labelCh3
 , 
self
 . 
unitsCh4
 )

1760 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unitsCh4
 , 
self
 . 
gainCh4
 )

1761 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
gainCh4
 , 
self
 . 
labelCh4
 )

1762 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
labelCh4
 , 
self
 . 
unitsCh5
 )

1763 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unitsCh5
 , 
self
 . 
gainCh5
 )

1764 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
gainCh5
 , 
self
 . 
labelCh5
 )

1765 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
labelCh5
 , 
self
 . 
unitsCh6
 )

1766 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unitsCh6
 , 
self
 . 
gainCh6
 )

1767 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
gainCh6
 , 
self
 . 
labelCh6
 )

1768 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
labelCh6
 , 
self
 . 
enCh1
 )

1769 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
enCh1
 , 
self
 . 
enCh2
 )

1770 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
enCh2
 , 
self
 . 
enCh3
 )

1771 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
enCh3
 , 
self
 . 
enCh4
 )

1772 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
enCh4
 , 
self
 . 
enCh5
 )

1773 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
enCh5
 , 
self
 . 
enCh6
 )

1774 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
enCh6
 , 
self
 . 
tabImageAnalysis
 )

1775 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabImageAnalysis
 , 
self
 . 
tabWidget_6
 )

1776 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget_6
 , 
self
 . 
analysisCh
 )

1777 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
analysisCh
 , 
self
 . 
tabWidget_4
 )

1778 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget_4
 , 
self
 . 
tabWidget
 )

1779 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget
 , 
self
 . 
hDistance
 )

1780 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
hDistance
 , 
self
 . 
vDistance
 )

1781 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
vDistance
 , 
self
 . 
calBounds
 )

1782 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
calBounds
 , 
self
 . 
writeCalibration
 )

1783 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
writeCalibration
 , 
self
 . 
imageBounds
 )

1784 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
imageBounds
 , 
self
 . 
CalScan
 )

1785 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
CalScan
 , 
self
 . 
ScanSize
 )

1786 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ScanSize
 , 
self
 . 
Notes
 )

1787 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Notes
 , 
self
 . 
SamplesPerPoint
 )

1788 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SamplesPerPoint
 , 
self
 . 
Mag
 )

1789 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Mag
 , 
self
 . 
Delay
 )

1790 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Delay
 , 
self
 . 
dxMicrons
 )

1791 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
dxMicrons
 , 
self
 . 
updateROI
 )

1792 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
updateROI
 , 
self
 . 
OScomboBox
 )

1793 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
OScomboBox
 , 
self
 . 
Scan
 )

1794 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Scan
 , 
self
 . 
saveName
 )

1795 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
saveName
 , 
self
 . 
SaveScan
 )

1796 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SaveScan
 , 
self
 . 
Channel
 )

1797 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Channel
 , 
self
 . 
tabWidget_7
 )

1798 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget_7
 , 
self
 . 
BeamCurrent
 )

1799 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
BeamCurrent
 , 
self
 . 
KV
 )

1800 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
KV
 , 
self
 . 
Aux1Spin
 )

1801 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Aux1Spin
 , 
self
 . 
Aux2Spin
 )

1802 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Aux2Spin
 , 
self
 . 
SetAux1
 )

1803 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SetAux1
 , 
self
 . 
SetAux2
 )

1804 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SetAux2
 , 
self
 . 
Aux1En
 )

1805 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Aux1En
 , 
self
 . 
Aux1Start
 )

1806 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Aux1Start
 , 
self
 . 
Aux1End
 )

1807 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Aux1End
 , 
self
 . 
Aux1VStep
 )

1808 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Aux1VStep
 , 
self
 . 
delayAux1
 )

1809 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
delayAux1
 , 
self
 . 
Sweep
 )

1810 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
Sweep
 , 
self
 . 
SaveSweep
 )

1811 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SaveSweep
 , 
self
 . 
SweepName
 )

1812 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SweepName
 , 
self
 . 
TransChannel
 )

1813 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
TransChannel
 , 
self
 . 
TransGain
 )

1814 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
TransGain
 , 
self
 . 
tabWidget_2
 )

1815 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget_2
 , 
self
 . 
ScanCombo
 )

1816 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ScanCombo
 , 
self
 . 
unloadScan
 )

1817 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
unloadScan
 , 
self
 . 
profilelist
 )

1818 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
profilelist
 , 
self
 . 
SaveButton
 )

1819 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SaveButton
 , 
self
 . 
SwapAxes
 )

1820 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SwapAxes
 , 
self
 . 
textEdit
 )

1821 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
textEdit
 , 
self
 . 
ExportProfile
 )

1822 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ExportProfile
 , 
self
 . 
FlipLR
 )

1823 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
FlipLR
 , 
self
 . 
FlipUD
 )

1824 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
FlipUD
 , 
self
 . 
TransportcomboBox
 )

1825 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
TransportcomboBox
 , 
self
 . 
PlotTrans
 )

1826 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotTrans
 , 
self
 . 
ExportTransPort
 )

1827 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ExportTransPort
 , 
self
 . 
SubPlotComobo
 )

1828 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SubPlotComobo
 , 
self
 . 
AxisCombo
 )

1829 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
AxisCombo
 , 
self
 . 
PlotScansCombo
 )

1830 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotScansCombo
 , 
self
 . 
PlotScansComboCH
 )

1831 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotScansComboCH
 , 
self
 . 
AddPlotScan
 )

1832 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
AddPlotScan
 , 
self
 . 
PlotScansSpinAlpha
 )

1833 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotScansSpinAlpha
 , 
self
 . 
ColorMap
 )

1834 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ColorMap
 , 
self
 . 
ColorBar
 )

1835 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ColorBar
 , 
self
 . 
ExportScan
 )

1836 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ExportScan
 , 
self
 . 
reverse
 )

1837 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
reverse
 , 
self
 . 
PlotProfileComboCH
 )

1838 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotProfileComboCH
 , 
self
 . 
PlotProfileCombo
 )

1839 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotProfileCombo
 , 
self
 . 
AddPlotProfile
 )

1840 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
AddPlotProfile
 , 
self
 . 
PlotProfileAlpha
 )

1841 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotProfileAlpha
 , 
self
 . 
ExportProfile_2
 )

1842 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ExportProfile_2
 , 
self
 . 
PlotColorCombo
 )

1843 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotColorCombo
 , 
self
 . 
ActivePlotsCombo
 )

1844 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ActivePlotsCombo
 , 
self
 . 
RemovePlot
 )

1845 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
RemovePlot
 , 
self
 . 
AddAxis
 )

1846 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
AddAxis
 , 
self
 . 
AddSubPlot
 )

1847 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
AddSubPlot
 , 
self
 . 
RemoveSubPlot
 )

1848 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
RemoveSubPlot
 , 
self
 . 
RemoveAxis
 )

1849 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
RemoveAxis
 , 
self
 . 
ClearAxis
 )

1850 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ClearAxis
 , 
self
 . 
PlotSlicesCombo
 )

1851 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotSlicesCombo
 , 
self
 . 
reverse2
 )

1852 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
reverse2
 , 
self
 . 
PlotSliceSpinAlpha
 )

1853 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotSliceSpinAlpha
 , 
self
 . 
ColorBar2
 )

1854 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ColorBar2
 , 
self
 . 
AddPlotSlice
 )

1855 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
AddPlotSlice
 , 
self
 . 
ExportSlice
 )

1856 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ExportSlice
 , 
self
 . 
PlotSliceComboCH
 )

1857 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
PlotSliceComboCH
 , 
self
 . 
ColorMap2
 )

1858 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ColorMap2
 , 
self
 . 
tabWidget_3
 )

1859 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget_3
 , 
self
 . 
TestProfile
 )

1860 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
TestProfile
 , 
self
 . 
getBounds_pushButton
 )

1861 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
getBounds_pushButton
 , 
self
 . 
ShowSlice
 )

1862 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
ShowSlice
 , 
self
 . 
SliceType
 )

1863 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SliceType
 , 
self
 . 
SliderVmin
 )

1864 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SliderVmin
 , 
self
 . 
SliderVmax
 )

1865 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
SliderVmax
 , 
self
 . 
tabWidget_5
 )

1866 
MplMainWindow
 . 
	`setTabOrder
 ( 
self
 . 
tabWidget_5
 , 
self
 . 
IView
 ) 
	}

1868 def 
	$retranslateUi
 ( 
self
 , 
MplMainWindow
 ) :

1869 
MplMainWindow
 . 
	`setWindowTitle
 ( 
	`_translate
 ( "MplMainWindow" , "MainWindow" , None ) )

1870 
self
 . 
tabWidget_5
 . 
	`setTabText
 ( 
self
 . 
tabWidget_5
 . 
	`indexOf
 ( 
self
 . 
tab_17
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab1" , None ) )

1871 
self
 . 
tabWidget_5
 . 
	`setTabText
 ( 
self
 . 
tabWidget_5
 . 
	`indexOf
 ( 
self
 . 
tab_18
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab2" , None ) )

1872 
self
 . 
tabImageAnalysis
 . 
	`setTabText
 ( 
self
 . 
tabImageAnalysis
 . 
	`indexOf
 ( 
self
 . 
tabImage
 ) , 
	`_translate
 ( "MplMainWindow" , "Imaging" , None ) )

1873 
self
 . 
analysisCh
 . 
	`setTabText
 ( 
self
 . 
analysisCh
 . 
	`indexOf
 ( 
self
 . 
Ch1tab
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab 1" , None ) )

1874 
self
 . 
analysisCh
 . 
	`setTabText
 ( 
self
 . 
analysisCh
 . 
	`indexOf
 ( 
self
 . 
Ch2tap
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab 2" , None ) )

1875 
self
 . 
analysisCh
 . 
	`setTabText
 ( 
self
 . 
analysisCh
 . 
	`indexOf
 ( 
self
 . 
Ch3tab
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab 3" , None ) )

1876 
self
 . 
analysisCh
 . 
	`setTabText
 ( 
self
 . 
analysisCh
 . 
	`indexOf
 ( 
self
 . 
Ch4tab
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab 4" , None ) )

1877 
self
 . 
analysisCh
 . 
	`setTabText
 ( 
self
 . 
analysisCh
 . 
	`indexOf
 ( 
self
 . 
Ch5tab
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab 5" , None ) )

1878 
self
 . 
analysisCh
 . 
	`setTabText
 ( 
self
 . 
analysisCh
 . 
	`indexOf
 ( 
self
 . 
Ch6tab
 ) , 
	`_translate
 ( "MplMainWindow" , "Tab 6" , None ) )

1879 
self
 . 
tabImageAnalysis
 . 
	`setTabText
 ( 
self
 . 
tabImageAnalysis
 . 
	`indexOf
 ( 
self
 . 
tabAnalysis
 ) , 
	`_translate
 ( "MplMainWindow" , "Analysis" , None ) )

1880 
self
 . 
tabImageAnalysis
 . 
	`setTabText
 ( 
self
 . 
tabImageAnalysis
 . 
	`indexOf
 ( 
self
 . 
tab_4
 ) , 
	`_translate
 ( "MplMainWindow" , "Transport" , None ) )

1881 
self
 . 
mplmenuFile
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "File" , None ) )

1882 
self
 . 
menuEdit
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "Edit" , None ) )

1883 
self
 . 
label_35
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Units" , None ) )

1884 
self
 . 
label_9
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Label" , None ) )

1885 
self
 . 
label_36
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Gain" , None ) )

1886 
self
 . 
enCh6_2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 7" , None ) )

1887 
self
 . 
enCh4
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 4" , None ) )

1888 
self
 . 
enCh3
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 3" , None ) )

1889 
self
 . 
enCh6_3
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 8" , None ) )

1890 
self
 . 
enCh2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 2" , None ) )

1891 
self
 . 
enCh1
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 1" , None ) )

1892 
self
 . 
enCh5
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 5" , None ) )

1893 
self
 . 
enCh6
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch 6" , None ) )

1894 
self
 . 
tabWidget_6
 . 
	`setTabText
 ( 
self
 . 
tabWidget_6
 . 
	`indexOf
 ( 
self
 . 
tab_8
 ) , 
	`_translate
 ( "MplMainWindow" , "Units and Gain" , None ) )

1895 
self
 . 
calBounds
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Cal Bounds" , None ) )

1896 
self
 . 
writeCalibration
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Calibrate" , None ) )

1897 
self
 . 
label_13
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "hDistance (microns)" , None ) )

1898 
self
 . 
label_14
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "vDistance (microns)" , None ) )

1899 
self
 . 
calBoundsDislpay
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "calibration bounds" , None ) )

1900 
self
 . 
imageBounds
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Image Bounds" , None ) )

1901 
self
 . 
imageBoundDisplay
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "image bounds" , None ) )

1902 
self
 . 
CalScan
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Cal Scan" , None ) )

1903 
self
 . 
ScanSize
 . 
	`setItemText
 ( 0 , 
	`_translate
 ( "MplMainWindow" , "256x256" , None ) )

1904 
self
 . 
ScanSize
 . 
	`setItemText
 ( 1 , 
	`_translate
 ( "MplMainWindow" , "512x512" , None ) )

1905 
self
 . 
ScanSize
 . 
	`setItemText
 ( 2 , 
	`_translate
 ( "MplMainWindow" , "1024x1024" , None ) )

1906 
self
 . 
ScanSize
 . 
	`setItemText
 ( 3 , 
	`_translate
 ( "MplMainWindow" , "2048x2048" , None ) )

1907 
self
 . 
tabWidget_6
 . 
	`setTabText
 ( 
self
 . 
tabWidget_6
 . 
	`indexOf
 ( 
self
 . 
tab_6
 ) , 
	`_translate
 ( "MplMainWindow" , "Calibrate" , None ) )

1908 
self
 . 
tabWidget_6
 . 
	`setTabText
 ( 
self
 . 
tabWidget_6
 . 
	`indexOf
 ( 
self
 . 
tab_7
 ) , 
	`_translate
 ( "MplMainWindow" , "Notes" , None ) )

1909 
self
 . 
label_45
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "# Samples" , None ) )

1910 
self
 . 
label_46
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Delay (s) " , None ) )

1911 
self
 . 
label_61
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Mag" , None ) )

1912 
self
 . 
Delay
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "5e-8" , None ) )

1913 
self
 . 
label_15
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "dx in microns" , None ) )

1914 
self
 . 
label_24
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "ROI scan size" , None ) )

1915 
self
 . 
ROIdim
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "[xpoints,ypoints]" , None ) )

1916 
self
 . 
updateROI
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "updateROI" , None ) )

1917 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 0 , 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

1918 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 1 , 
	`_translate
 ( "MplMainWindow" , "2" , None ) )

1919 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 2 , 
	`_translate
 ( "MplMainWindow" , "4" , None ) )

1920 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 3 , 
	`_translate
 ( "MplMainWindow" , "8" , None ) )

1921 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 4 , 
	`_translate
 ( "MplMainWindow" , "16" , None ) )

1922 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 5 , 
	`_translate
 ( "MplMainWindow" , "32" , None ) )

1923 
self
 . 
OScomboBox
 . 
	`setItemText
 ( 6 , 
	`_translate
 ( "MplMainWindow" , "64" , None ) )

1924 
self
 . 
label_41
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "OverSampling" , None ) )

1925 
self
 . 
Scan
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Scan" , None ) )

1926 
self
 . 
SaveScan
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Save_Scan" , None ) )

1927 
self
 . 
CrossHair
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "Crosshair" , None ) )

1928 
self
 . 
CrossHair
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "..." , "Crosshair" ) )

1929 
self
 . 
ROI
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "Region of Interest" , None ) )

1930 
self
 . 
ROI
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "..." , "Region of Interest" ) )

1931 
self
 . 
Line
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "Line Profile" , None ) )

1932 
self
 . 
Line
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "..." , "Line Profile" ) )

1933 
self
 . 
tabWidget_4
 . 
	`setTabText
 ( 
self
 . 
tabWidget_4
 . 
	`indexOf
 ( 
self
 . 
tab_11
 ) , 
	`_translate
 ( "MplMainWindow" , "ScanSetup" , None ) )

1934 
self
 . 
label_62
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Beam Current" , None ) )

1935 
self
 . 
label_10
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Accel. Voltage" , None ) )

1936 
self
 . 
tabWidget_7
 . 
	`setTabText
 ( 
self
 . 
tabWidget_7
 . 
	`indexOf
 ( 
self
 . 
tab_20
 ) , 
	`_translate
 ( "MplMainWindow" , "Microscope" , None ) )

1937 
self
 . 
label_47
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Aux1 V" , None ) )

1938 
self
 . 
label_48
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Aux2 V" , None ) )

1939 
self
 . 
SetAux1
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Set" , None ) )

1940 
self
 . 
SetAux2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Set" , None ) )

1941 
self
 . 
label_49
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Aux1 V" , None ) )

1942 
self
 . 
label_50
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Aux2 V" , None ) )

1943 
self
 . 
Aux1Value
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

1944 
self
 . 
Aux2Value
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

1945 
self
 . 
tabWidget_7
 . 
	`setTabText
 ( 
self
 . 
tabWidget_7
 . 
	`indexOf
 ( 
self
 . 
tab_15
 ) , 
	`_translate
 ( "MplMainWindow" , "Biasing" , None ) )

1946 
self
 . 
label_51
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Enable" , None ) )

1947 
self
 . 
Aux1En
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Aux 1" , None ) )

1948 
self
 . 
delayAux1
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0.4" , None ) )

1949 
self
 . 
label_11
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "delay(s)" , None ) )

1950 
self
 . 
SweepDir
 . 
	`setItemText
 ( 0 , 
	`_translate
 ( "MplMainWindow" , " +" , None ) )

1951 
self
 . 
SweepDir
 . 
	`setItemText
 ( 1 , 
	`_translate
 ( "MplMainWindow" , " -" , None ) )

1952 
self
 . 
label_42
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Sweep direction" , None ) )

1953 
self
 . 
label_8
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "CH" , None ) )

1954 
self
 . 
Aux1VStep
 . 
	`setSuffix
 ( 
	`_translate
 ( "MplMainWindow" , " V" , None ) )

1955 
self
 . 
label_52
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Start" , None ) )

1956 
self
 . 
label_53
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "End" , None ) )

1957 
self
 . 
label_54
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Step V" , None ) )

1958 
self
 . 
label_55
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Min" , None ) )

1959 
self
 . 
label_56
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Max" , None ) )

1960 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 0 , 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

1961 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 1 , 
	`_translate
 ( "MplMainWindow" , "2" , None ) )

1962 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 2 , 
	`_translate
 ( "MplMainWindow" , "4" , None ) )

1963 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 3 , 
	`_translate
 ( "MplMainWindow" , "8" , None ) )

1964 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 4 , 
	`_translate
 ( "MplMainWindow" , "16" , None ) )

1965 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 5 , 
	`_translate
 ( "MplMainWindow" , "32" , None ) )

1966 
self
 . 
OScomboBox_2
 . 
	`setItemText
 ( 6 , 
	`_translate
 ( "MplMainWindow" , "64" , None ) )

1967 
self
 . 
label_16
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "oversampling" , None ) )

1968 
self
 . 
label_12
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "samples" , None ) )

1969 
self
 . 
TransGain
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "1" , None ) )

1970 
self
 . 
label_17
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Gain" , None ) )

1971 
self
 . 
Sweep
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Run Sweep" , None ) )

1972 
self
 . 
SaveSweep
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Save Sweep" , None ) )

1973 
self
 . 
tabWidget_7
 . 
	`setTabText
 ( 
self
 . 
tabWidget_7
 . 
	`indexOf
 ( 
self
 . 
Sweep_2
 ) , 
	`_translate
 ( "MplMainWindow" , "Sweep" , None ) )

1974 
self
 . 
tabWidget_4
 . 
	`setTabText
 ( 
self
 . 
tabWidget_4
 . 
	`indexOf
 ( 
self
 . 
tab_14
 ) , 
	`_translate
 ( "MplMainWindow" , "Experiment Variables" , None ) )

1975 
self
 . 
tabWidget
 . 
	`setTabText
 ( 
self
 . 
tabWidget
 . 
	`indexOf
 ( 
self
 . 
tab
 ) , 
	`_translate
 ( "MplMainWindow" , "Control" , None ) )

1976 
self
 . 
unloadScan
 . 
	`setWhatsThis
 ( 
	`_translate
 ( "MplMainWindow" , "hhh" , None ) )

1977 
self
 . 
unloadScan
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "-" , None ) )

1978 
self
 . 
label_18
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "profiles" , None ) )

1979 
self
 . 
SaveButton
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Save" , None ) )

1980 
self
 . 
SwapAxes
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "swap axes" , None ) )

1981 
self
 . 
SwapAxes
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "swap" , None ) )

1982 
self
 . 
groupBox_4
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "Scan Info" , None ) )

1983 
self
 . 
label_38
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Notes" , None ) )

1984 
self
 . 
label_26
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Name:" , None ) )

1985 
self
 . 
label_27
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "TextLabel" , None ) )

1986 
self
 . 
label_28
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Delay:" , None ) )

1987 
self
 . 
label_29
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "TextLabel" , None ) )

1988 
self
 . 
label_30
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Mag:" , None ) )

1989 
self
 . 
label_31
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "TextLabel" , None ) )

1990 
self
 . 
label_32
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Accel:" , None ) )

1991 
self
 . 
label_33
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "TextLabel" , None ) )

1992 
self
 . 
label_34
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Beam:" , None ) )

1993 
self
 . 
label_37
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "TextLabel" , None ) )

1994 
self
 . 
ExportProfile
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "export" , None ) )

1995 
self
 . 
FlipLR
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "flip left reft" , None ) )

1996 
self
 . 
FlipLR
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "[|]" , None ) )

1997 
self
 . 
FlipUD
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "flip up down" , None ) )

1998 
self
 . 
FlipUD
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "flipud" , None ) )

1999 
self
 . 
tabWidget_2
 . 
	`setTabText
 ( 
self
 . 
tabWidget_2
 . 
	`indexOf
 ( 
self
 . 
tab_10
 ) , 
	`_translate
 ( "MplMainWindow" , "Scans" , None ) )

2000 
self
 . 
PlotTrans
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "plot" , None ) )

2001 
self
 . 
PlotTrans
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "+" , None ) )

2002 
self
 . 
ExportTransPort
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "export iv" , None ) )

2003 
self
 . 
ExportTransPort
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "->" , None ) )

2004 
self
 . 
tabWidget_2
 . 
	`setTabText
 ( 
self
 . 
tabWidget_2
 . 
	`indexOf
 ( 
self
 . 
tab_12
 ) , 
	`_translate
 ( "MplMainWindow" , "Transport" , None ) )

2005 
self
 . 
groupBox_2
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "Scans" , None ) )

2006 
self
 . 
label_21
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch" , None ) )

2007 
self
 . 
AddPlotScan
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "plot" , None ) )

2008 
self
 . 
AddPlotScan
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "+" , None ) )

2009 
self
 . 
label_25
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "alpha" , None ) )

2010 
self
 . 
ColorMap
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "colormap" , None ) )

2011 
self
 . 
ColorBar
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "colorbar" , None ) )

2012 
self
 . 
ExportScan
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "export" , None ) )

2013 
self
 . 
ExportScan
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "->" , None ) )

2014 
self
 . 
reverse
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "reverse" , None ) )

2015 
self
 . 
groupBox
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "Profiles" , None ) )

2016 
self
 . 
label_20
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch" , None ) )

2017 
self
 . 
AddPlotProfile
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "plot" , None ) )

2018 
self
 . 
AddPlotProfile
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "+" , None ) )

2019 
self
 . 
label_23
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "alpha" , None ) )

2020 
self
 . 
ExportProfile_2
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "export" , None ) )

2021 
self
 . 
ExportProfile_2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "->" , None ) )

2022 
self
 . 
label_19
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "subplot" , None ) )

2023 
self
 . 
label_22
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "axis" , None ) )

2024 
self
 . 
groupBox_3
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "ActivePlots" , None ) )

2025 
self
 . 
RemovePlot
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "remove" , None ) )

2026 
self
 . 
AddAxis
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "add axis" , None ) )

2027 
self
 . 
AddAxis
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "+" , None ) )

2028 
self
 . 
AddSubPlot
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "add subplot" , None ) )

2029 
self
 . 
AddSubPlot
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "+" , None ) )

2030 
self
 . 
RemoveSubPlot
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "-" , None ) )

2031 
self
 . 
RemoveAxis
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "-" , None ) )

2032 
self
 . 
ClearAxis
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "clear" , None ) )

2033 
self
 . 
groupBox_5
 . 
	`setTitle
 ( 
	`_translate
 ( "MplMainWindow" , "Slices" , None ) )

2034 
self
 . 
label_40
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Ch" , None ) )

2035 
self
 . 
reverse2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "reverse" , None ) )

2036 
self
 . 
label_39
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "alpha" , None ) )

2037 
self
 . 
ColorBar2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "colorbar" , None ) )

2038 
self
 . 
AddPlotSlice
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "plot" , None ) )

2039 
self
 . 
AddPlotSlice
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "+" , None ) )

2040 
self
 . 
ExportSlice
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "export" , None ) )

2041 
self
 . 
ExportSlice
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "->" , None ) )

2042 
self
 . 
ColorMap2
 . 
	`setToolTip
 ( 
	`_translate
 ( "MplMainWindow" , "colormap" , None ) )

2043 
self
 . 
tabWidget_2
 . 
	`setTabText
 ( 
self
 . 
tabWidget_2
 . 
	`indexOf
 ( 
self
 . 
tab_24
 ) , 
	`_translate
 ( "MplMainWindow" , "Plots" , None ) )

2044 
self
 . 
TestProfile
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "LineProfile" , None ) )

2045 
self
 . 
tabWidget_3
 . 
	`setTabText
 ( 
self
 . 
tabWidget_3
 . 
	`indexOf
 ( 
self
 . 
tab_5
 ) , 
	`_translate
 ( "MplMainWindow" , "Line Profile" , None ) )

2046 
self
 . 
getBounds_pushButton
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Get Bounds" , None ) )

2047 
self
 . 
label_2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "x" , None ) )

2048 
self
 . 
label_3
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "dx" , None ) )

2049 
self
 . 
xstart
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

2050 
self
 . 
xdelta
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

2051 
self
 . 
label_4
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "y" , None ) )

2052 
self
 . 
label_5
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "dy" , None ) )

2053 
self
 . 
ystart
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

2054 
self
 . 
ydelta
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "0" , None ) )

2055 
self
 . 
ShowSlice
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Show Slice" , None ) )

2056 
self
 . 
tabWidget_3
 . 
	`setTabText
 ( 
self
 . 
tabWidget_3
 . 
	`indexOf
 ( 
self
 . 
tab_9
 ) , 
	`_translate
 ( "MplMainWindow" , "ROI" , None ) )

2057 
self
 . 
tabWidget_3
 . 
	`setTabText
 ( 
self
 . 
tabWidget_3
 . 
	`indexOf
 ( 
self
 . 
tab_16
 ) , 
	`_translate
 ( "MplMainWindow" , "Hist" , None ) )

2058 
self
 . 
tabWidget
 . 
	`setTabText
 ( 
self
 . 
tabWidget
 . 
	`indexOf
 ( 
self
 . 
tab_2
 ) , 
	`_translate
 ( "MplMainWindow" , "Analysis" , None ) )

2059 
self
 . 
mplactionOpen
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Open" , None ) )

2060 
self
 . 
mplactionQuit
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Quit" , None ) )

2061 
self
 . 
actionSave
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Save" , None ) )

2062 
self
 . 
actionCalibrate
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Calibrate" , None ) )

2063 
self
 . 
actionCalibrate_2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Calibrate" , None ) )

2064 
self
 . 
actionSave_2
 . 
	`setText
 ( 
	`_translate
 ( "MplMainWindow" , "Save" , None ) ) 
	}

2066 from 
	~mplwidget
 import 
MplWidget
 , 
MplHIST

2067 from 
	~pyqtgraph
 import 
GraphicsView

2068 import 
	~Re_rc

2069 import 
	~style_rc


	@./Mfigure.py

1 import 
	~numpy
 as 
np

2 import 
	~matplotlib.pyplot
 as 
plt

3 import 
	~matplotlib

4 import 
	~Mfigure

5 import 
	~pylab

6 import 
	~numpy

11 class 
	cDraggableRectangle
 :

12 def 
	$__init__
 ( 
self
 , 
rect
 , 
callback
 = None ) :

13 
self
 . 
	=rect
 = 
rect

14 
self
 . 
	=press
 = None

15 
self
 . 
	=background
 = None

16 
self
 . 
	=lock
 = None

17 
self
 . 
	=callback
 = 
callback
 
	}

20 def 
	$connect
 ( 
self
 ) :

22 
self
 . 
	=cidpress
 = 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_connect
 ( 'button_press_event'

23 , 
self
 . 
on_press
 )

24 
self
 . 
	=cidrelease
 = 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_connect
 ( 'button_release_event'

25 , 
self
 . 
on_release
 )

26 
self
 . 
	=cidmotion
 = 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_connect
 ( 'motion_notify_event'

27 , 
self
 . 
on_motion
 ) 
	}

29 def 
	$on_press
 ( 
self
 , 
event
 ) :

31 if 
event
 . 
inaxes
 != 
self
 . 
rect
 . 
axes
 : return

33 
	=contains
 , 
	=attrd
 = 
self
 . 
rect
 . 
	`contains
 ( 
event
 )

34 if not 
contains
 : return

36 
	=offset
 = 
self
 . 
rect
 . 
	`get_offsets
 ( )

38 
self
 . 
	=press
 = 
offset
 , 
event
 . 
xdata
 , 
event
 . 
ydata

40 
self
 . 
	=lock
 = True

43 
	=canvas
 = 
self
 . 
rect
 . 
figure
 . 
canvas

44 
	=axes
 = 
self
 . 
rect
 . 
axes

45 
self
 . 
rect
 . 
	`set_animated
 ( True )

46 
canvas
 . 
	`draw
 ( )

47 
self
 . 
	=background
 = 
canvas
 . 
	`copy_from_bbox
 ( 
self
 . 
rect
 . 
axes
 . 
bbox
 )

50 
axes
 . 
	`draw_artist
 ( 
self
 . 
rect
 )

53 
canvas
 . 
	`blit
 ( 
axes
 . 
bbox
 ) 
	}

56 def 
	$on_motion
 ( 
self
 , 
event
 ) :

58 if 
self
 . 
lock
 is not True :

60 if 
event
 . 
inaxes
 != 
self
 . 
rect
 . 
axes
 : return

65 
	=offset
 , 
	=xpress
 , 
	=ypress
 = 
self
 . 
press

66 
	=dx
 = 
event
 . 
xdata
 - 
xpress

67 
	=dy
 = 
event
 . 
ydata
 - 
ypress

68 
	=x0
 = 
offset
 [ 0 ] [ 0 ]

69 
	=y0
 = 
offset
 [ 0 ] [ 1 ]

70 
self
 . 
rect
 . 
	`set_offsets
 ( [ ( 
x0
 + 
dx
 ) , ( 
y0
 + 
dy
 ) ] )

72 
	=canvas
 = 
self
 . 
rect
 . 
figure
 . 
canvas

73 
	=axes
 = 
self
 . 
rect
 . 
axes

75 
canvas
 . 
	`restore_region
 ( 
self
 . 
background
 )

78 
axes
 . 
	`draw_artist
 ( 
self
 . 
rect
 )

81 
canvas
 . 
	`blit
 ( 
axes
 . 
bbox
 ) 
	}

84 def 
	$on_release
 ( 
self
 , 
event
 ) :

89 if 
self
 . 
lock
 is not True :

92 
self
 . 
	=press
 = None

93 
self
 . 
	=lock
 = None

96 
self
 . 
rect
 . 
	`set_animated
 ( False )

97 
self
 . 
	=background
 = None

100 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`draw
 ( )

101 
self
 . 
	`callback
 ( ) 
	}

104 def 
	$disconnect
 ( 
self
 ) :

106 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidpress
 )

107 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidrelease
 )

108 
self
 . 
rect
 . 
figure
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidmotion
 ) 
	}

114 class 
	cProfileLine
 :

116 def 
	$__init__
 ( 
self
 , 
canvas
 = None , 
ax
 = None , 
callback
 = None ) :

117 
self
 . 
	=startpoint
 = None

118 
self
 . 
	=endpoint
 = None

119 
self
 . 
	=line
 = None

120 
self
 . 
	=canvas
 = 
canvas

121 
self
 . 
	=ax
 = 
ax

122 
self
 . 
	=callback
 = 
callback

123 
self
 . 
	`set_Point1
 ( ) 
	}

126 def 
	$set_Point1
 ( 
self
 ) :

127 
self
 . 
	=point
 = True

128 
self
 . 
	=cidpress
 = 
self
 . 
canvas
 . 
	`mpl_connect
 ( 'button_press_event' , 
self
 . 
drawPoint
 ) 
	}

130 def 
	$set_Point2
 ( 
self
 ) :

131 
self
 . 
	=point
 = False

132 
self
 . 
	=cidpress
 = 
self
 . 
canvas
 . 
	`mpl_connect
 ( 'button_press_event' , 
self
 . 
drawPoint
 ) 
	}

135 def 
	$drawPoint
 ( 
self
 , 
event
 ) :

136 if 
self
 . 
point
 == True :

137 
	=color
 = 'b'

138 
	=shape
 = 's'

140 
	=color
 = 'r'

141 
	=shape
 = 'o'

142 
self
 . 
	=x
 = 
event
 . 
xdata

143 
self
 . 
	=y
 = 
event
 . 
ydata

144 print 
self
 . 
x
 , 
self
 . 
y

145 
self
 . 
canvas
 . 
	`mpl_disconnect
 ( 
self
 . 
cidpress
 )

146 if 
self
 . 
point
 == True :

147 if 
self
 . 
startpoint
 != None :

148 
self
 . 
startpoint
 . 
	`remove
 ( )

149 
self
 . 
	=startpoint
 = 
self
 . 
ax
 . 
	`scatter
 ( 
self
 . 
x
 , 
self
 . 
y
 , 
s
 = 60 , 
c
 = 
color
 , 
marker
 = 
shape
 )

150 
self
 . 
canvas
 . 
	`draw
 ( )

151 
self
 . 
	=dr1
 = 
	`DraggableRectangle
 ( 
self
 . 
startpoint
 , 
self
 . 
drawLine
 )

152 
self
 . 
dr1
 . 
	`connect
 ( )

153 
self
 . 
	`set_Point2
 ( )

156 if 
self
 . 
endpoint
 != None :

157 
self
 . 
endpoint
 . 
	`remove
 ( )

158 
self
 . 
	=endpoint
 = 
self
 . 
ax
 . 
	`scatter
 ( 
self
 . 
x
 , 
self
 . 
y
 , 
s
 = 60 , 
c
 = 
color
 , 
marker
 = 
shape
 )

159 
self
 . 
canvas
 . 
	`draw
 ( )

160 
self
 . 
	=dr2
 = 
	`DraggableRectangle
 ( 
self
 . 
endpoint
 , 
self
 . 
drawLine
 )

161 
self
 . 
dr2
 . 
	`connect
 ( )

162 
self
 . 
	`drawLine
 ( ) 
	}

166 def 
	$drawLine
 ( 
self
 ) :

167 if 
self
 . 
startpoint
 and 
self
 . 
endpoint
 != None :

168 
self
 . 
	=startOffset
 = 
self
 . 
startpoint
 . 
	`get_offsets
 ( ) [ 0 ]

169 
self
 . 
	=endOffset
 = 
self
 . 
endpoint
 . 
	`get_offsets
 ( ) [ 0 ]

171 
self
 . 
	=xPoints
 = [ 
self
 . 
startOffset
 [ 0 ] , 
self
 . 
endOffset
 [ 0 ] ]

172 
self
 . 
	=yPoints
 = [ 
self
 . 
startOffset
 [ 1 ] , 
self
 . 
endOffset
 [ 1 ] ]

173 if 
self
 . 
line
 != None :

174 
self
 . 
line
 . 
	`remove
 ( )

176 
self
 . 
	=line
 , = 
self
 . 
ax
 . 
	`plot
 ( 
self
 . 
xPoints
 , 
self
 . 
yPoints
 , 
alpha
 = 0.4 , 
color
 = 'green' )

177 
self
 . 
canvas
 . 
	`draw
 ( )

178 
self
 . 
	`callback
 ( )

180 elif 
self
 . 
startpoint
 != None :

181 
self
 . 
	`set_Point2
 ( )

185 return 
	}

188 class 
	cFigureBox
 :

189 def 
	$__init__
 ( 
self
 ) :

190 
self
 . 
	=subplots
 = [ ]

191 
self
 . 
	`add_subplot
 ( ) 
	}

193 def 
	$add_subplot
 ( 
self
 ) :

194 
self
 . 
subplots
 . 
	`append
 ( 
Mfigure
 . 
	`SubPlots
 ( ) ) 
	}

197 class 
	cSubPlots
 :

198 def 
	$__init__
 ( 
self
 ) :

199 
self
 . 
	=axes
 = [ ]

200 
self
 . 
	`add_axes
 ( ) 
	}

202 def 
	$add_axes
 ( 
self
 ) :

203 
self
 . 
axes
 . 
	`append
 ( 
Mfigure
 . 
	`AxesBox
 ( ) ) 
	}

206 class 
	cAxesBox
 :

207 def 
	$__init__
 ( 
self
 ) :

211 
self
 . 
	=title
 = None

212 
self
 . 
	=xlabel
 = None

213 
self
 . 
	=ylabel
 = None

216 
self
 . 
	=axesObjects
 = [ ] 
	}

219 class 
	cImageBox
 :

220 def 
	$__init__
 ( 
self
 , 
data
 = None , 
cmap
 = 
pylab
 . 
cm
 . 
Greys
 , 
extent
 = None , 
origin
 = "lower" , 
alpha
 = 1.0 , 
clim
 = None , 
name
 = 'Image' , 
bins
 = 49 ) :

224 
self
 . 
	=cmap
 = 
cmap

225 
self
 . 
	=data
 = 
data

226 
self
 . 
	=extent
 = 
extent

227 
self
 . 
	=origin
 = 
origin

228 
self
 . 
	=alpha
 = 
alpha

229 
self
 . 
	=clim
 = 
clim

230 
self
 . 
	=name
 = 
name

231 
self
 . 
	=bins
 = 
bins

232 
self
 . 
	`create_histogram
 ( 
self
 . 
bins
 ) 
	}

234 def 
	$create_histogram
 ( 
self
 , 
bins
 ) :

235 
self
 . 
	=binx
 , 
self
 . 
	=binHist
 = 
numpy
 . 
	`histogram
 ( 
self
 . 
data
 , 
bins
 )

236 
self
 . 
	=binHistTrunk
 = 
self
 . 
binHist
 [ 0 : 
bins
 ] 
	}

238 class 
	cLineBox
 :

239 def 
	$__init__
 ( 
self
 , 
Xdata
 = None , 
Ydata
 = None , 
alpha
 = 1.0 , 
color
 = 'b' , 
label
 = None , 
ls
 = '-' , 
lw
 = 2 , 
name
 = 'line' ) :

240 
self
 . 
	=Xdata
 = 
Xdata

241 
self
 . 
	=Ydata
 = 
Ydata

242 
self
 . 
	=alpha
 = 
alpha

243 
self
 . 
	=color
 = 
color

244 
self
 . 
	=label
 = 
label

245 
self
 . 
	=ls
 = 
ls

246 
self
 . 
	=lw
 = 
lw

247 
self
 . 
	=name
 = 
name
 
	}

249 class 
	cScatterBox
 :

250 def 
	$__init__
 ( 
self
 , 
x
 , 
y
 , 
size
 = 60 , 
color
 = 'b' , 
marker
 = 'o' , 
alpha
 = 1.0 , 
name
 = 'scatterPlot' ) :

251 
self
 . 
	=x
 = 
x

252 
self
 . 
	=y
 = 
y

253 
self
 . 
	=size
 = 
size

254 
self
 . 
	=c
 = 
color

255 
self
 . 
	=marker
 = 
marker

256 
self
 . 
	=alpha
 = 
alpha

257 
self
 . 
	=name
 = 
name
 
	}

259 class 
	cErrorPlot
 :

260 def 
	$__init__
 ( 
self
 , 
x
 , 
y
 , 
yerr
 = None , 
xerr
 = None , 
ecolor
 = None , 
elinewidth
 = None , 
name
 = 'error' ) :

261 
self
 . 
	=x
 = 
x

262 
self
 . 
	=y
 = 
y

263 
self
 . 
	=xerr
 = 
xerr

264 
self
 . 
	=yerr
 = 
yerr

265 
self
 . 
	=ecolor
 = 
ecolor

266 
self
 . 
	=elinewidth
 = 
elinewidth

267 
self
 . 
	=name
 = 
name
 
	}

270 class 
	cPlotter
 :

271 def 
	$__init__
 ( 
self
 , 
ax
 = None , 
axBox
 = None , 
canvas
 = None ) :

272 
self
 . 
	=ax
 = 
ax

273 
self
 . 
	=axBox
 = 
axBox

274 
self
 . 
	=canvas
 = 
canvas

275 
self
 . 
	=activeplots
 = [ ]

276 if 
self
 . 
axBox
 != None :

277 
self
 . 
	`replot
 ( ) 
	}

279 def 
	$replot
 ( 
self
 ) :

280 if 
self
 . 
axBox
 != None :

282 for 
i
 in 
	`range
 ( 
	`len
 ( 
self
 . 
axBox
 . 
axesObjects
 ) ) :

283 
	=var
 = None

284 
	=temp
 = 
self
 . 
axBox
 . 
axesObjects
 [ 
i
 ]

285 if 
temp
 . 
__class__
 == 
Mfigure
 . 
ImageBox
 :

286 
self
 . 
	`show_image
 ( 
temp
 )

287 elif 
temp
 . 
__class__
 == 
Mfigure
 . 
ScatterBox
 :

288 
self
 . 
	`scatter_plot
 ( 
temp
 )

289 elif 
temp
 . 
__class__
 == 
Mfigure
 . 
ErrorPlot
 :

290 
self
 . 
	`show_errorbar
 ( 
temp
 )

291 elif 
temp
 . 
__class__
 == 
Mfigure
 . 
LineBox
 :

292 
self
 . 
	`show_line
 ( 
temp
 )

293 print "len activeplots" , 
	`len
 ( 
self
 . 
activeplots
 ) 
	}

295 def 
	$scatter_plot
 ( 
self
 , 
ScatterB
 = None ) :

296 
	=scat
 = 
self
 . 
ax
 . 
	`scatter
 ( 
ScatterB
 . 
x
 , 
ScatterB
 . 
y
 , 
alpha
 = 
ScatterB
 . 
alpha
 , 
c
 = 
ScatterB
 . 
c
 , 
marker
 = 
ScatterB
 . 
marker
 )

297 
self
 . 
canvas
 . 
	`draw
 ( )

298 
self
 . 
activeplots
 . 
	`append
 ( 
scat
 )

299 return 
scat
 
	}

301 def 
	$show_image
 ( 
self
 , 
Im
 = None ) :

302 
	=image
 = 
self
 . 
ax
 . 
	`imshow
 ( 
Im
 . 
data
 , 
extent
 = 
Im
 . 
extent
 , 
cmap
 = 
Im
 . 
cmap
 , 
alpha
 = 
Im
 . 
alpha
 , 
origin
 = 
Im
 . 
origin
 , 
clim
 = 
Im
 . 
clim
 )

303 
self
 . 
canvas
 . 
	`draw
 ( )

304 
self
 . 
activeplots
 . 
	`append
 ( 
image
 )

305 return 
image
 
	}

309 def 
	$show_line
 ( 
self
 , 
Line
 = None ) :

310 
	=line
 , = 
self
 . 
ax
 . 
	`plot
 ( 
Line
 . 
Xdata
 , 
Line
 . 
Ydata
 , 
alpha
 = 
Line
 . 
alpha
 , 
color
 = 
Line
 . 
color
 , 
label
 = 
Line
 . 
label
 , 
ls
 = 
Line
 . 
ls
 , 
lw
 = 
Line
 . 
lw
 )

311 
self
 . 
canvas
 . 
	`draw
 ( )

312 
self
 . 
activeplots
 . 
	`append
 ( 
line
 )

313 return 
line
 
	}

315 def 
	$show_errorbar
 ( 
self
 , 
Eplot
 = None ) :

316 
	=er
 , 
	=xer
 , 
	=yer
 = 
self
 . 
ax
 . 
	`errorbar
 ( 
Eplot
 . 
x
 , 
Eplot
 . 
y
 , 
yerr
 = 
Eplot
 . 
yerr
 , 
xerr
 = 
Eplot
 . 
xerr
 , 
ecolor
 = 
Eplot
 . 
ecolor
 , 
elinewidth
 = 
Eplot
 . 
elinewidth
 )

317 
self
 . 
canvas
 . 
	`draw
 ( )

318 return 
er
 , 
xer
 , 
yer
 
	}

321 def 
	$remove_and_update
 ( 
self
 , 
axobject
 ) :

325 if 
axobject
 . 
__class__
 == 
matplotlib
 . 
image
 . 
AxesImage
 :

326 
self
 . 
ax
 . 
images
 . 
	`remove
 ( 
axobject
 )

328 
axobject
 . 
	`remove
 ( )

330 
	=tempindex
 = 
self
 . 
activeplots
 . 
	`index
 ( 
axobject
 )

331 print 
	`len
 ( 
self
 . 
activeplots
 )

332 print 'tempindex' , 
tempindex

333 
self
 . 
activeplots
 . 
	`pop
 ( 
tempindex
 )

335 
self
 . 
axBox
 . 
axesObjects
 . 
	`pop
 ( 
tempindex
 )

336 print 
	`str
 ( 
self
 . 
canvas
 . 
	`__class__
 ( ) )

337 
self
 . 
canvas
 . 
	`draw
 ( ) 
	}

341 def 
	$add_colorbar
 ( 
self
 , 
image
 ) :

343 
self
 . 
canvas
 . 
fig
 . 
	`colorbar
 ( 
image
 , 
ax
 = 
self
 . 
ax
 , 
orientation
 = 'vertical' )

344 
self
 . 
canvas
 . 
	`draw
 ( ) 
	}


	@./mplwidget.py

2 import 
	~Mfigure

5 from 
	~PyQt4
 import 
QtGui

6 import 
	~mplwidget

10 from 
	~matplotlib.backends.backend_qt4agg
 import 
FigureCanvasQTAgg
 as 
FigureCanvas

11 from 
	~matplotlib.backends.backend_qt4agg
 import 
NavigationToolbar2QTAgg
 as 
NavigationToolbar

14 from 
	~matplotlib.figure
 import 
Figure

16 class 
	cMplCanvas
 ( 
FigureCanvas
 ) :

18 def 
	$__init__
 ( 
self
 ) :

20 
self
 . 
	=fig
 = 
	`Figure
 ( 
facecolor
 = '0.2' , 
edgecolor
 = 'black' )

21 
self
 . 
	=plotters
 = [ ]

22 
self
 . 
	=subplots
 = [ ]

32 
self
 . 
	`oneSubPlot
 ( )

34 
FigureCanvas
 . 
	`__init__
 ( 
self
 , 
self
 . 
fig
 )

36 
FigureCanvas
 . 
	`setSizePolicy
 ( 
self
 ,

37 
QtGui
 . 
QSizePolicy
 . 
Expanding
 ,

38 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

40 
FigureCanvas
 . 
	`updateGeometry
 ( 
self
 ) 
	}

44 def 
	$add_Ax
 ( 
self
 , 
ax
 = None , 
axes
 = None ) :

45 if 
ax
 == None :

46 
self
 . 
	=ax2
 = 
self
 . 
ax
 . 
	`twinx
 ( )

47 elif 
ax
 != None and 
axes
 != None :

48 
axes
 . 
	`append
 ( 
ax
 . 
	`twinx
 ( ) )

49 
self
 . 
	=ax2
 = 
axes
 [ - 1 ]

51 
self
 . 
ax2
 . 
	`set_navigate
 ( False )

53 
self
 . 
	`draw
 ( ) 
	}

59 def 
	$twoSubplots
 ( 
self
 ) :

61 
self
 . 
fig
 . 
	`clear
 ( )

63 
self
 . 
	=plotters
 = [ ]

64 
self
 . 
	=subplots
 = [ ]

65 
self
 . 
subplots
 . 
	`append
 ( 
	`SubPlot
 ( ) )

66 
self
 . 
subplots
 [ - 1 ] . 
axes
 . 
	`append
 ( 
self
 . 
fig
 . 
	`add_subplot
 ( 211 , 
autoscale_on
 = False ) )

67 
self
 . 
	=ax
 = 
self
 . 
subplots
 [ 0 ] . 
axes
 [ 0 ]

68 
self
 . 
ax
 . 
	`clear
 ( )

70 
self
 . 
subplots
 . 
	`append
 ( 
	`SubPlot
 ( ) )

71 
self
 . 
subplots
 [ - 1 ] . 
axes
 . 
	`append
 ( 
self
 . 
fig
 . 
	`add_subplot
 ( 212 , 
sharex
 = 
self
 . 
ax
 ) )

72 
self
 . 
	=ax_2
 = 
self
 . 
subplots
 [ - 1 ] . 
axes
 [ 0 ]

73 
self
 . 
ax_2
 . 
	`clear
 ( ) 
	}

78 def 
	$oneSubPlot
 ( 
self
 ) :

82 
self
 . 
fig
 . 
	`clear
 ( )

88 
self
 . 
	=subplots
 = [ ]

89 
self
 . 
subplots
 . 
	`append
 ( 
	`SubPlot
 ( ) )

90 
self
 . 
subplots
 [ - 1 ] . 
axes
 . 
	`append
 ( 
self
 . 
fig
 . 
	`add_subplot
 ( 111 , 
autoscale_on
 = False , 
axisbg
 = 'black' ) )

93 
self
 . 
	=ax
 = 
self
 . 
subplots
 [ 0 ] . 
axes
 [ 0 ]

94 
self
 . 
ax
 . 
	`clear
 ( )

95 
self
 . 
ax
 . 
	`tick_params
 ( 
axis
 = 'both' , 
colors
 = 'black' , 
direction
 = 'out' , 
top
 = 'off' , 
right
 = 'off' ) 
	}

99 def 
	$add_plotter
 ( 
self
 , 
ax
 = None , 
axBox
 = None , 
subplot
 = None ) :

101 if 
subplot
 != None :

102 
subplot
 . 
plotters
 . 
	`append
 ( 
Mfigure
 . 
	`Plotter
 ( 
ax
 = 
ax
 , 
axBox
 = 
axBox
 , 
canvas
 = 
self
 ) ) 
	}

104 def 
	$append_subplot
 ( 
self
 ) :

105 
self
 . 
subplots
 . 
	`append
 ( 
	`SubPlot
 ( ) ) 
	}

107 def 
	$remove_subplot
 ( 
self
 , 
index
 ) :

108 
self
 . 
subplots
 . 
	`pop
 ( 
index
 ) 
	}

110 def 
	$load_figure
 ( 
self
 , 
figure
 = None ) :

111 if 
figure
 != None :

112 
self
 . 
	=fig
 = 
figure

113 
FigureCanvas
 . 
	`__init__
 ( 
self
 , 
self
 . 
fig
 )

115 
FigureCanvas
 . 
	`setSizePolicy
 ( 
self
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

117 
FigureCanvas
 . 
	`updateGeometry
 ( 
self
 ) 
	}

121 class 
	cMplWidget
 ( 
QtGui
 . 
QWidget
 ) :

123 def 
	$__init__
 ( 
self
 , 
parent
 = None ) :

125 
QtGui
 . 
QWidget
 . 
	`__init__
 ( 
self
 , 
parent
 )

127 
self
 . 
	=canvas
 = 
	`MplCanvas
 ( )

128 
self
 . 
	=nav
 = 
	`NavigationToolbar
 ( 
self
 . 
canvas
 , 
parent
 )

130 
self
 . 
	=vbl
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

132 
self
 . 
vbl
 . 
	`addWidget
 ( 
self
 . 
canvas
 )

133 
self
 . 
vbl
 . 
	`addWidget
 ( 
self
 . 
nav
 )

135 
self
 . 
	`setLayout
 ( 
self
 . 
vbl
 ) 
	}

137 class 
	cMplHIST
 ( 
QtGui
 . 
QWidget
 ) :

139 def 
	$__init__
 ( 
self
 , 
parent
 = None ) :

141 
QtGui
 . 
QWidget
 . 
	`__init__
 ( 
self
 , 
parent
 )

143 
self
 . 
	=canvas
 = 
	`MplCanvas
 ( )

145 
self
 . 
	=vbl
 = 
QtGui
 . 
	`QVBoxLayout
 ( )

147 
self
 . 
vbl
 . 
	`addWidget
 ( 
self
 . 
canvas
 )

149 
self
 . 
	`setLayout
 ( 
self
 . 
vbl
 ) 
	}

152 class 
	cCursor
 :

153 def 
	$__init__
 ( 
self
 , 
ax
 , 
canvas
 ) :

154 
self
 . 
	=canvas
 = 
canvas

155 
self
 . 
	=ax
 = 
ax

156 
self
 . 
	=lx
 = 
ax
 . 
	`axhline
 ( 
color
 = 'k' )

157 
self
 . 
	=ly
 = 
ax
 . 
	`axvline
 ( 
color
 = 'k' )

160 
self
 . 
	=txt
 = 
ax
 . 
	`text
 ( 0.7 , 0.9 , '' , 
transform
 = 
ax
 . 
transAxes
 ) 
	}

162 def 
	$mouse_move
 ( 
self
 , 
event
 ) :

163 if not 
event
 . 
inaxes
 : return

165 
	=x
 , 
	=y
 = 
event
 . 
xdata
 , 
event
 . 
ydata

167 
self
 . 
lx
 . 
	`set_ydata
 ( 
y
 )

168 
self
 . 
ly
 . 
	`set_xdata
 ( 
x
 )

170 
self
 . 
txt
 . 
	`set_text
 ( 'x=%1.2f, y=%1.2f' % ( 
x
 , 
y
 ) )

171 
self
 . 
canvas
 . 
	`draw
 ( ) 
	}

173 class 
	cSubPlot
 :

174 def 
	$__init__
 ( 
self
 ) :

175 
self
 . 
	=axes
 = [ ]

176 
self
 . 
	=plotters
 = [ ] 
	}


	@./Re_rc.py

10 from 
	~PyQt4
 import 
QtCore

12 
	=qt_resource_data
 = "\\n\x00\x00\x02\x73\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x6a\x00\x00\x00\x6a\x08\x02\x00\x00\x00\xdb\x43\x53\xc0\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x17\x12\x00\x00\x17\x12\\n\x01\x67\x9f\xd2\x52\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x41\x64\x6f\x62\x65\x20\x49\x6d\x61\x67\\n\x65\x52\x65\x61\x64\x79\x71\xc9\x65\x3c\x00\x00\x02\x00\x49\x44\\n\x41\x54\x78\xda\xec\xdc\x4f\x4a\x02\x51\x1c\xc0\x71\x8d\xc9\x04\\n\x07\x1c\x37\x33\xad\x82\x9c\xb6\x62\xd4\x11\x94\xbc\x43\x0b\xdd\\n\xd7\xce\x83\xb8\xca\x03\xd4\xa2\x3b\x18\x79\x84\x22\x71\x9d\x41\\n\x2b\x9d\x8d\x08\x0e\xd9\x54\xd6\xa3\x17\x04\x3a\x89\x63\x63\xf1\\n\x66\xbe\x5f\xa2\xa0\x3f\x44\x9f\xde\xf4\xde\xd4\xcf\x92\x4f\x67\\n\x3b\x09\x5a\xb5\x0d\x08\x7e\x93\x26\x5f\x94\x2e\x59\x83\xc1\x6a\\n\x94\x9d\xa2\x39\x61\xf5\x71\xf1\xc2\x07\x1f\x7c\x04\x1f\x7c\xf0\\n\xc1\x47\xf0\xc1\x07\x1f\x7c\x04\x1f\x7c\xf0\xc1\x47\xf0\xc1\x07\\n\x1f\x7c\xf0\x11\x7c\xf0\xc1\x17\xa3\xb4\x25\xdf\x6f\x3b\xf3\x6a\\n\xe9\x6f\x31\x41\x19\x7b\xc9\xfb\x61\x2a\x4c\xbe\x4a\xde\xad\x16\\n\x46\x31\xe1\xeb\x38\xe9\xfa\xb5\x19\x26\x9f\xac\xef\x6a\x03\xd7\\n\xe7\x43\x8a\xe6\x44\x7e\x56\x25\x74\x6c\xc3\xd3\x53\x53\xb1\xbe\\n\xc6\x2f\xb3\x3f\xbb\xf4\xcd\xa9\x9d\xf3\xc2\xbf\x78\x65\x57\xbd\\n\xcc\x79\x37\x3b\xff\xfa\xf6\xf1\xa3\x78\xbe\xe4\x77\xec\xdf\x93\\n\xd3\x3d\xcd\xdb\x5c\x67\xb0\x35\xbb\x0e\xac\xe7\x46\x69\xc0\xd6\\n\xc1\xce\x0b\x1f\x7c\x04\x1f\x7c\x6a\xdf\x75\xc8\x8e\xf2\xae\xd8\\n\xda\xa3\xf1\x95\x9f\x1e\x0c\x7d\xcf\x7d\x6b\xe4\x13\xb7\x6e\xe2\\n\x29\x1a\x7c\x81\x8e\xc7\xe1\xf0\xb5\x7a\x99\xd6\x83\xae\x3a\x5c\\n\xf3\xc6\xd0\x53\xef\xbe\x6f\xda\x33\xbc\x93\xc3\xe1\xba\xf8\xc4\\n\x1d\xdb\xfc\x49\x5d\xb9\x96\xfc\x75\x00\x5b\x07\x3b\x2f\x7c\xf0\\n\x11\x7c\xf0\xc1\x07\x1f\xc1\x07\x1f\x7c\xf0\xc1\x47\xf0\xc1\x07\\n\x1f\x7c\x04\x1f\x7c\xf0\xc1\x47\xf0\xc1\x07\x5f\xf4\x0a\xf6\x67\\n\xf2\x6a\x61\xb4\x60\x40\x5c\x95\x7f\x02\x28\x87\x73\x59\x7d\xaa\\n\xad\xbe\x8b\x6e\x76\xc1\x68\xb8\x5a\xd5\xdb\x16\xa3\xe1\x6c\x1d\\n\xf0\xc1\x47\xf0\xc1\x17\xe5\x83\x8b\xd8\xd7\x6b\x89\x1f\x8f\xcd\\n\x35\x45\x1e\x72\x69\x7d\x8e\x67\x57\x76\xc7\xfb\x73\x87\x67\x2b\\n\xe0\xe4\x76\x40\x3e\x73\xb2\xe0\xbc\xae\xd6\x23\x56\x2b\x79\xf7\\n\xef\x56\xdf\x9d\x93\x4e\x74\xe3\x72\x49\xf6\x5d\x2d\x64\x3e\x71\\n\x40\x8f\xc0\x50\x38\x5b\x07\x7c\xf0\x11\x7c\xf0\xc1\x07\x1f\x7c\\n\x04\x1f\x7c\xf0\xc1\x47\xf0\xc1\x07\x1f\x7c\x04\x1f\x7c\xf0\xc1\\n\x47\xf0\xc1\x07\x1f\x7c\xf0\xd1\xea\x7d\x4d\x19\x34\xca\x0e\x16\\n\x81\xb2\x0d\xef\x9b\x2f\xac\x41\xfd\xb8\xf5\x21\xc0\x00\x2a\x4d\\n\x75\xe2\x04\x5c\x72\x38\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x08\x3a\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x68\x00\x00\x00\x68\x08\x02\x00\x00\x00\x92\x7e\x22\xf6\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x17\x12\x00\x00\x17\x12\\n\x01\x67\x9f\xd2\x52\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x41\x64\x6f\x62\x65\x20\x49\x6d\x61\x67\\n\x65\x52\x65\x61\x64\x79\x71\xc9\x65\x3c\x00\x00\x07\xc7\x49\x44\\n\x41\x54\x78\xda\xec\x9d\xed\x6f\xd3\x56\x14\xc6\x93\x26\x44\x8a\\n\x6c\xb5\xcb\x84\x1a\x51\x92\x51\x1c\x3a\xca\x18\x0c\xd2\x40\x9b\\n\x50\xc6\xb4\xad\x1a\x62\x12\x62\x9a\x86\x86\xb6\x3f\x6f\xd3\x3e\\n\x82\xf8\x0a\x63\xea\x28\x29\x6c\x85\x6d\xcd\x28\x45\x6d\xdd\x85\\n\x18\x50\xfb\x85\xa9\x23\x52\x95\x28\x68\x8f\x73\x8a\x31\xd7\x2f\\n\x49\x1a\xc7\x71\x9c\x7b\x62\x45\xc1\xb1\xd3\xdc\x5f\xce\x3d\xcf\\n\x39\xf7\x5e\x9b\x60\x2e\x37\x1d\xe0\xd6\xba\x0d\x70\x04\x1c\x1c\\n\x07\xc7\xc1\x71\x70\xdc\x38\x38\x0e\x8e\x83\xe3\xe0\x38\x38\x6e\\n\x1c\x1c\x07\xc7\xc1\x71\x70\x1c\x1c\xb7\xd6\x2d\x94\x4c\xbe\xd7\\n\xf0\xa0\x48\x24\x72\xf9\xdb\x2b\xa2\x28\x56\xaa\x95\x72\xb9\xcc\\n\xa9\x35\x0b\xee\xd0\xd8\xd8\xbe\x91\x91\x58\x2c\x26\x49\x29\x29\\n\x95\xc2\x9e\xff\xb6\xb6\x6a\xb5\x1a\x07\xd7\xc0\xce\x4c\x9f\x85\\n\xd3\x69\xde\x07\x88\x1f\x1c\x3d\xda\xe7\x0e\xd8\x38\xc6\x0d\xc7\\n\xe3\x82\x20\x18\xf7\x1f\x94\xa4\xb3\x1f\x9f\xe3\xe2\x60\x69\xe8\\n\x9e\x56\x6f\x3d\x55\x14\x0e\xce\x52\x16\xe0\x59\x56\xef\x3e\x5e\\n\x7e\xc4\xc1\x99\x9b\x0d\xb5\x17\x75\xe3\xe0\xac\xc0\xa5\xac\xdd\\n\x6d\x99\xd9\x73\xf1\xd2\x57\xe9\x89\x8c\x20\x88\x5c\x55\x03\x4f\\n\x8a\xc5\xad\xad\x2d\x41\x14\xa3\xd1\xa8\x7e\x7f\xa5\x52\x59\xf8\\n\xfd\x37\x7d\x46\x02\xc4\x92\x24\xed\xdd\xbb\xf7\xf0\xf8\x78\x3c\\n\x1e\x0f\x04\x82\xff\xfa\xda\x1f\x1b\x80\x03\x1a\xb4\x7f\x75\x65\\n\xe5\xa9\x52\x0a\x85\xc2\x90\xd7\x50\x28\x44\x40\x8b\xc5\x7f\xf4\\n\x47\x4e\xc0\xd7\xc4\x1d\x5f\xc3\x8b\x44\x32\x09\x82\xc0\x0d\xee\\n\xd5\x6a\xa5\x4f\xf3\x38\xd8\xf6\xf6\xb6\xa2\x94\xd6\x56\x57\xc8\\n\x01\xff\xfa\xf3\x0f\xec\xd1\xde\x45\xf7\x4c\x67\x32\xec\x47\x87\\n\x42\x70\x40\x41\x14\x40\xb9\x7f\xc1\x31\x0e\xa8\xa7\x06\x83\x4f\\n\x61\x7f\x28\x1c\x1a\x1c\x1c\x62\x4e\x59\x7a\xb8\xe4\xcb\x3e\xdb\\n\x1a\x38\x1b\x83\x27\xc2\xb3\xd6\x65\x19\xaf\x07\x07\x07\xa9\x47\\n\x23\x14\xe6\xef\xcc\xe9\x0f\x83\x6f\x4e\xe5\xb2\xe8\xf5\xbd\x4e\\n\xd3\x31\x70\x9a\xeb\x3d\x7f\xfe\xec\xd1\xd2\x43\x94\x62\xc8\x01\\n\x9f\xab\xf6\x4c\x7f\xc0\xb1\xe3\xc7\x91\x51\xfb\x20\x02\x06\x5d\\n\x5e\xad\xf4\xf5\x37\x97\xb5\xb2\x97\x6c\x73\x63\x43\x96\xe5\x75\\n\x79\xad\xb7\xc0\x85\xdd\xfc\x63\x48\x59\x18\x6a\x54\x0b\x63\x13\\n\x45\xa1\xb0\xb8\xe8\xab\x5a\xd5\x41\x83\x73\x21\x6d\x46\xe0\x33\\n\xbe\x25\xaf\xc9\x7d\x1d\xe3\x5a\x8a\x80\x5a\xde\xa7\x02\x7d\xfc\\n\x56\x1d\x92\x48\x24\x0f\x8c\x8e\x96\x5f\x96\x3d\x1b\x01\x5d\x05\\n\xa7\x19\x24\x75\x5d\x8d\x6b\x3b\x12\xbc\xb4\xc4\xa6\x2c\xa7\x4e\\n\x4f\xa2\x5f\x43\x40\x62\xef\xc6\x5e\xd5\x5e\x41\x43\xfa\x5d\x1c\\n\x9a\x31\xa4\x2c\x17\x2f\x5d\xd2\xef\x81\x87\x42\x3d\xf0\x28\x97\\n\x5f\xf6\xb5\xc7\xd9\x1b\x52\x16\x94\x1c\xfa\x3d\xe8\xd7\x10\x10\\n\x38\x20\x2a\x3f\x26\xf7\xee\x0b\x71\x68\x5e\x43\xb0\x19\xf7\x43\\n\x55\xbc\x33\x90\xe5\x45\x8f\x43\x44\xd3\x47\x40\x2a\x42\x60\x28\\n\xf5\x98\x74\x1a\x1a\x82\x22\xaf\x2b\x11\xd0\x8b\xe0\xac\x24\x38\\n\x3f\x37\xc7\x88\xec\xcc\x17\xe7\xa5\x94\x3a\xf1\x86\x03\x5c\x96\\n\xe0\x60\xaf\x5c\xe7\x00\xc5\x60\x94\x01\xb2\x3b\x95\xcd\xea\xf7\\n\x28\x4a\x69\x7d\x4d\xc6\xb3\xdf\x2a\x87\x76\xcc\xa8\xa7\x92\x61\\n\x58\x1f\x3d\x17\x1b\x3c\xf4\xfa\xb5\xab\xfd\x28\x0e\x4d\x1a\x84\\n\xc2\xb4\x08\x29\xbf\x74\x23\x65\xf1\x6e\x8c\x6b\x68\xa6\x45\x08\\n\xac\x50\x28\x30\xe9\x34\x3a\x75\xb5\x52\x75\x36\x02\xf6\x30\x38\\n\xd3\x22\xa4\x56\xab\x19\x47\x00\x3f\x9b\x99\x71\xbc\x08\x09\xfa\\n\xec\x22\xb8\x58\x2c\xc6\xe4\x7a\xe9\x89\x0c\xa8\x39\x5e\x84\xf4\\n\xbc\xc7\x31\x66\xac\x2b\x72\xd3\xd3\x5a\x26\xa8\x2f\x42\x44\x51\\n\x64\xf4\x17\xfb\xf1\x6e\x93\x95\x49\x38\xe0\x6b\x43\x3f\x45\x5f\\n\x1e\x56\xa7\x2b\x4d\xea\x10\x66\x0f\x7c\x93\x1c\xf6\xf1\xf2\x32\\n\x6a\x3b\x53\xe5\xf1\xad\xc7\x19\xb3\x68\xd3\x22\x04\xc6\xa4\xd3\\n\x40\x86\x1a\x19\x2f\xa2\xd1\x68\x22\x99\x3c\x34\x36\x36\x34\x34\\n\x84\xee\x6c\xe5\x80\xe6\xe0\xf0\x29\x83\xea\x69\x65\xdf\xe0\x63\\n\x24\xd8\x38\x02\x78\xe2\x64\x1a\xad\x7e\xc3\x25\x14\xc2\x3f\x0f\\n\x8d\xbd\x0f\x88\xd0\x13\x23\x0a\xf3\xae\x8a\xa3\xf7\xec\x89\x98\\n\x56\xda\x3d\x6d\x90\x05\x6c\xe8\xbf\x78\x30\xa3\x2f\xfb\x13\x09\\n\x2b\xb5\x69\x21\xc6\x0d\x0f\xc7\xf7\x18\x26\x07\x7c\x63\xe8\x80\\n\x8c\xa4\xee\x4f\x24\x23\x16\xed\x85\xaf\x99\x3a\x90\x09\x38\xd2\\n\x1d\x7a\x61\x1f\x20\x7d\x63\xfa\x7c\x85\x31\xab\xa5\x6c\x03\xa6\\n\xee\xc6\xbc\xf0\xb7\xc5\xea\x66\xdd\xbb\xe5\xa6\xc1\xbd\x16\x6f\\n\x44\xba\x7e\x00\x87\xa0\x64\x25\x83\xa0\x66\xd5\xe7\xc2\x36\xe0\\n\x4c\xd3\x1f\xff\x19\x42\xd8\xf5\x6b\x57\xd1\x58\x49\x4a\x31\x0b\\n\x29\x65\xeb\x69\xf2\xb0\x31\x63\xd4\xfc\x56\x50\x4d\xf4\xce\xfc\\n\x48\xa7\xf1\x61\x7b\x70\x7f\x01\xec\x0e\x8f\x1f\x41\xcb\xad\x64\\n\xc1\x1c\x1c\xe3\x65\x89\x64\xc2\xb8\xf2\xd2\xc7\x86\x8e\x89\xf6\\n\x62\x6b\xd8\xdb\xd8\x18\x17\x7f\xfb\x84\x3e\xe9\xad\x56\x0e\xd8\\n\x42\xad\xca\x90\x72\x59\x58\x91\x00\xbd\x53\x0f\x14\x6a\xa6\xe5\\n\xed\x10\x11\x66\xbe\x37\xad\x1a\xfa\xf0\x98\x5a\xb5\xfd\x5d\x58\\n\x74\x21\x9b\xa3\x2b\x02\xd4\xa5\x37\xc3\x71\xe3\x42\x26\x45\x29\\n\xe1\xe1\x41\x88\xe6\xe3\x71\x57\xbe\xfb\x1e\xcf\x3f\xfd\xf8\x43\\n\xa7\xfd\x2b\x3d\x91\x61\x84\x8c\x3a\x08\xfc\x4e\x0f\x11\x69\x01\\n\xc2\xb6\xa7\xb2\xf1\xae\x0d\x2b\x21\x59\x87\x5f\x13\x1d\x1a\xc9\\n\x01\x32\xbd\x67\xd5\xeb\xc7\xa4\x54\x77\x46\xc0\x45\x2d\xf9\xe0\\n\xfe\x7d\xef\x2c\xa3\xeb\x02\x38\xbd\xa3\x01\x19\x5c\xc9\x6a\xde\\n\x9e\x6a\x72\x80\xa3\x91\xb2\xa9\x6c\x16\xda\x75\x77\x3e\xef\x05\\n\x70\xe6\xc3\x4a\x34\x32\x45\x31\xce\x71\x6a\x9f\x7e\x3e\xb3\x6f\\n\x64\x84\x3e\x3f\x3f\x37\xd7\x70\xf0\x0a\x07\xac\xae\xac\x04\x83\\n\xaa\x70\x01\x1f\xea\x99\x27\xc5\x62\xd7\x2f\xfa\x1c\x70\xd9\xd7\\n\x40\x0d\x8d\x87\x37\xfd\x7c\xf3\x46\x4b\x4b\x30\x71\xf0\xed\xd9\\n\x59\x9c\x88\xd3\xf1\x21\x91\x6e\x0f\xde\x0c\x74\x85\xda\xad\x9b\\n\x37\x76\x31\xd8\x07\x85\xc5\x89\x1a\xbb\xbe\x00\xc7\x50\xdb\xf5\\n\xa2\x23\x9c\xa8\xb1\x9b\xca\xe6\xfc\x0f\x8e\xa2\x7b\x9b\xd4\x34\\n\x76\xb7\x7f\x9d\x0d\xd4\xaf\x6c\xa4\x58\xec\x5b\x70\x68\x1e\x69\\n\x68\xfb\xd4\xb4\x5c\xef\xee\xfc\x3c\x25\xea\x89\x44\xd2\x9f\xe0\\n\x0e\x4a\x29\xaa\x43\xd0\x54\x07\x97\x05\x22\x4d\xa1\xd1\x87\xc9\\n\x6c\xd6\x66\x18\xb2\x57\xc1\xa1\x49\xe9\x89\x89\x40\xfd\xe2\x56\\n\xc7\x73\x57\x4a\x00\x11\x3d\x27\xb3\x39\xf7\x45\xb6\x83\xe0\xb4\\n\x26\xd1\x38\x57\x27\xfe\x04\x82\x1d\x09\x05\x62\xa8\x7f\xc0\x51\\n\x27\x42\xc3\x28\x96\x77\xc2\xb4\x0f\x47\x0c\xb5\xb9\x98\xbb\x97\\n\xc0\xa1\x14\xa5\xb0\x4d\xd9\x43\xe7\x1a\x00\x77\xa6\x0a\x07\x31\\n\xc1\xcd\x60\xd7\x11\x70\x54\x5d\x3a\x2e\x08\x36\x45\x85\xfb\xc1\\n\xce\x79\x70\x82\x20\xd2\x8d\x5c\xd6\x5d\xbc\x26\xd0\xfd\x60\xe7\\n\x30\x38\xfc\xe0\x67\xcf\x9d\xc3\x33\x0d\x7b\xb8\xd6\x71\xf4\xc1\\n\xce\x66\x76\xd9\xbb\xe0\xe0\x6b\x5a\x85\xe0\xf2\xb8\xa3\xa6\xdd\\n\x70\x3a\x17\xa6\x4a\x9c\x04\x87\xe2\x11\xdf\xb8\x2b\xd4\xc8\xea\\n\xd9\xa2\xac\xfd\x7e\xbd\x01\x0e\xd4\xa8\xae\xba\xe7\x8a\x20\xd8\\n\x64\xc5\xf8\xeb\xf5\x88\xf1\x49\x47\x85\x62\xc0\x59\x6a\x90\x51\\n\x77\xae\xcf\xb0\x09\x76\x54\x11\x0b\x82\xd0\xd1\x61\xbb\x76\xc1\\n\xe1\x9b\x9d\xbf\xf0\xa5\x46\xcd\x0b\x73\x02\x60\x77\x6f\x3e\xaf\\n\x0d\xdb\x75\xe8\x96\x45\x6d\x81\x43\x44\x03\xb5\x9d\xf2\x60\x76\\n\xd6\x3b\x33\x29\xfa\x61\xbb\xf3\x17\x2e\x74\x42\x2b\x76\x39\xe7\\n\x00\x47\xfb\xe8\xc4\xc9\x53\xa7\x27\x23\xf5\xa5\x3e\xb3\xbf\xdc\\n\xda\xdc\xf4\xd6\xf2\xcd\xed\xed\xed\xb5\xd5\x95\x7d\x23\x23\xa2\\n\x28\x4a\x52\x2a\x18\x54\xaf\x88\x70\x70\xa6\xa2\x65\x70\xf0\xfc\\n\xf1\x23\xe3\xb9\x33\xd3\xb4\x58\x02\x42\x96\xbf\x33\xe7\xcd\xd5\\n\xc2\xc0\xf4\xa4\x58\x8c\x46\xa3\xf0\x3b\x38\xdd\x81\xd1\xd1\x80\\n\x73\x77\xf7\x6c\x61\x7a\x70\xe7\x22\xf9\xd7\x32\x6f\x33\xb3\xe7\\n\x1d\x43\x6f\xbd\x3b\x9f\x57\x4a\xa5\x74\x26\x03\xb9\x40\x8a\x87\\n\x0d\xdf\x19\x5f\xbe\x5a\xad\xb4\x73\xc3\x8e\x16\xc0\xc5\xeb\xb3\\n\x73\x81\xfa\xa4\x09\xcd\x1f\x07\x7a\xc4\xd4\x75\x14\x4a\x49\xfb\\n\xe1\xe9\x4e\x27\x54\xe4\xba\x01\x4e\x96\xd7\xf0\xd3\x21\x96\xf5\\n\xe8\xc2\x60\x9a\xde\xa6\x75\x3d\xf1\xb6\xe5\xa2\x05\x70\xfe\x58\\n\xbd\x8f\x5f\xbd\xe1\x12\x2e\x87\xc1\xf9\xdb\xa0\x87\xc4\xb4\xc9\\n\xb2\x87\x83\x7b\x9d\x93\x0e\xef\x04\x3e\xe0\x7b\xaa\x28\x1b\x75\\n\xaf\xb4\x59\x5e\x16\xb6\xff\x11\xfa\x07\x9c\x76\xa9\x30\xad\xd7\\n\xa3\x5a\x08\x69\x96\x1a\xd6\x01\xd1\x10\xd9\xed\xd6\xc7\x71\xd3\\n\x0c\x04\x1f\x2c\x2c\xe8\xcb\x70\x73\x8f\xeb\xc4\x3a\x25\x8f\x1b\\n\x92\x15\xe6\xce\xe4\x6a\xc8\xdb\xdc\x40\x26\x63\xda\x67\xcd\xc1\\n\xf5\xd6\xad\xdc\x9c\x8a\x71\x04\x8e\xd6\xcf\x36\x54\x09\x2e\x0e\\n\x5a\x96\x2a\x17\x0a\x8b\xcd\xa7\x29\x1c\xdc\x9b\xf4\xb8\xa5\xe3\\n\xf9\x7f\xbd\xb2\x4b\xe3\xe0\x38\x38\x0e\x8e\x83\xe3\xe0\xb8\x19\\n\xec\x7f\x01\x06\x00\x98\x58\x80\x1d\xd5\x4e\x65\x2c\x00\x00\x00\\n\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x07\x9e\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x6a\x00\x00\x00\x6a\x08\x02\x00\x00\x00\xdb\x43\x53\xc0\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x17\x12\x00\x00\x17\x12\\n\x01\x67\x9f\xd2\x52\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x41\x64\x6f\x62\x65\x20\x49\x6d\x61\x67\\n\x65\x52\x65\x61\x64\x79\x71\xc9\x65\x3c\x00\x00\x07\x2b\x49\x44\\n\x41\x54\x78\xda\xec\x9c\x3d\x68\x5b\x57\x14\xc7\x53\x55\xb6\x12\\n\x24\x91\xaa\xb5\x25\x51\x4c\xc1\x76\xc1\x5d\x84\x42\xba\x18\x42\\n\xbd\xd8\xd8\x78\x32\xc4\x5b\x0b\xf6\x96\x82\xbb\xb9\xe0\x6e\x1e\\n\xbc\xa5\x83\xa6\x62\x68\x36\x07\xd2\xa9\x31\x74\x32\x0a\xf6\xe2\\n\x12\xc8\xd2\x60\x91\xc5\x85\xc6\x86\xb6\x04\x7d\xd4\x15\xaa\xad\\n\xc6\x72\x9c\xd0\xbf\x74\xac\xdb\x97\x7b\xf5\x3e\x64\xbd\xef\x77\\n\x0f\x8f\x44\x52\xf4\x14\xbd\x9f\xce\x39\xff\x73\xee\xc7\x7b\xe7\\n\xe5\x77\x1f\x5d\x91\x76\x59\x0b\x49\x04\xbd\x58\x98\xfe\x9a\xfc\\n\x41\xfa\x60\x77\x96\x9b\x2a\x67\x93\xa7\xd2\xfb\x64\xf0\x4a\x7c\\n\x12\x9f\xc4\x27\x4d\xe2\x93\xf8\x24\x3e\x89\x4f\x9a\xc4\x27\xf1\\n\x49\x7c\x12\x9f\x34\x89\xcf\x29\x7c\xb1\xfe\x37\x0f\xe6\x5e\xac\\n\x8c\x1f\x8d\x26\xce\x24\x35\x66\x61\x83\xef\xbb\x35\xf4\x32\x1d\\n\x3d\x4f\x8f\x9c\xcf\x8c\xd4\x9f\x57\xfb\x1f\xfe\x1a\x7f\xfc\xe7\\n\xb5\x93\xb3\x90\xc4\x67\xc8\xe6\xc7\x8e\xd9\x63\x38\x20\xdc\x10\\n\xec\x40\x10\x1c\x41\x53\x06\xaf\x96\x81\x97\x18\xb3\x08\x67\x78\\n\xe2\xbd\xd9\x22\x1e\x48\x7c\x46\x5d\x8f\xb3\xfc\x41\x34\xc8\x21\\n\xac\x7f\xe5\x70\x2e\x24\x3e\x55\x7c\x87\x31\xa9\xbc\x3a\xa2\xa1\\n\x16\x9e\xc5\x7a\xb8\x50\x8a\x48\x7c\x5a\x86\x04\xa7\xf6\x4f\x9b\\n\xfb\x71\xee\x95\xdc\x54\x79\x31\x53\x83\x46\x4b\xe5\xbd\xb0\xd5\\n\xdd\x81\x99\xe1\xfa\xed\x4f\x8e\x45\x28\xf9\xc3\x28\xe7\xa7\xd9\\n\xe4\x29\x8e\x85\x4c\x0d\xa2\x9c\x3f\x88\xe1\xcf\xa0\xe3\x83\x32\\n\xa0\x3a\xc1\x91\x4d\x35\x66\x86\x4f\x98\x33\x8a\xa2\x31\x33\x72\\n\xa2\x44\x89\x03\xd1\xfd\xe8\x20\x8a\x77\xe2\x41\xa0\xeb\x3e\x18\\n\xd2\x1c\x8e\xf5\xa7\x09\x72\x46\x4e\x34\xe0\x9b\xa2\xc2\xe0\x45\\n\x78\x22\xb8\x2f\x6f\x27\x83\x8e\x8f\x73\x46\x51\x46\xbe\x7d\xf2\\n\x01\x7c\x13\xc1\x2b\x16\x37\x41\xef\x3a\x8c\x58\xbe\x15\xa7\xf0\\n\x38\xf8\x26\x3c\x94\xf4\x9a\x9a\x13\xce\x25\x97\x3e\xad\xfa\x23\\n\x33\x9a\x9f\x92\xe0\x86\xeb\xbf\x24\x70\xc0\x13\x71\x14\x4f\xde\\n\x15\x52\x64\xdd\x37\x99\xd1\xc2\xef\x4d\xce\x28\xbe\x3e\xdd\x16\\n\x1f\xca\x8c\x9e\x96\x69\xbb\xfb\x2d\x1a\xb9\x11\x5f\x5c\x9b\xa8\\n\x20\xa2\x25\x3e\x1d\x7b\x5e\xed\x83\xec\x74\x6c\x93\xbd\xa8\x30\\n\x76\xe3\xa3\xcc\x38\xf7\xe3\x10\x64\xba\x50\xbe\xaa\xc0\xda\xcf\\n\x0d\x7c\xa1\xdc\x71\x7f\x03\xe3\x58\xce\xe6\x64\x5a\xac\x84\xe6\\n\xc7\xfe\x41\x50\xbb\x3c\x33\x3a\x2c\x79\x4c\xa6\xc5\x7a\x9b\x15\\n\xe1\x6e\x96\x69\x97\x0e\xd5\x89\xe3\x14\x24\xd3\x0f\xe6\x5e\x20\\n\xa8\x25\x3e\x1d\xfb\xad\xda\xaf\xcc\x8c\xca\x9e\x07\xe2\x23\x83\\n\x57\xc7\x90\xe9\x70\x70\x0d\x0c\xbd\xce\xa9\x36\xc5\xb8\x53\x99\\n\xd1\xd5\xe5\x3e\xd7\xc0\xa0\x9b\x16\x15\x06\xd5\x22\x28\x3b\x95\\n\x19\xbd\xd1\x2d\x31\x99\xe6\xe8\xb0\x22\xdc\xa9\x06\xc6\x4b\xcd\\n\xa6\xe8\x59\xca\x11\x46\x4e\xa6\xbf\xde\x4e\xda\xe0\x89\xde\x9e\\n\x24\x03\xa0\x8e\x0d\x4c\xfd\x2c\x64\x4f\x14\x7b\x1b\x5f\xc7\x06\\n\x06\x26\xa6\xc8\x8e\xbd\x76\xb0\x82\xd7\x60\x03\x23\x0a\x31\xfe\\n\x69\x6d\xa2\x42\xaf\x9b\x9b\x19\xfd\x33\x05\xc1\x64\x7a\x34\x71\\n\x26\x8e\x30\x5a\xd4\xc0\xf8\x70\x81\x80\xb8\xe6\x66\xfa\xed\x1e\\n\x86\x35\x30\x2b\xe3\x47\xdc\x3b\xd1\xd2\x74\x15\xe3\xfe\x9c\x00\\n\xe3\x60\x95\xea\x61\x83\x50\x16\x33\x35\x54\x97\xc8\xa4\x6a\x63\\n\xbd\x81\xc3\x87\x08\x5d\xde\x4e\x8a\x0d\x8c\xa8\x30\x78\x0f\xcd\\n\x73\xd1\x6c\xf5\xd2\xcd\x6a\xfe\x30\xba\xb9\x1f\xd7\x88\x71\xd5\\n\xe0\x45\x06\xd1\x58\xda\xe2\xd1\xcc\xa8\x94\x69\x71\x84\x11\x7c\\n\x95\x4f\x01\x7a\x7e\xec\x18\x31\xde\xdc\xba\xab\x32\x4e\xa1\xca\\n\xf5\x46\xb2\x91\x8a\x9d\xfb\x6f\x99\x00\x93\xe9\x54\xec\x35\x5f\\n\x84\x0f\x77\x5e\x8e\x02\x4f\x8c\xf5\xc5\xbb\xc3\x97\x4d\x9d\xa6\\n\xa3\xaf\x7d\x1c\xd1\x5c\x48\x42\x9d\x35\x56\x42\xa9\xb9\x91\x2a\\n\x3e\x8a\x5c\xb1\xcd\xf4\xab\x69\xac\x84\x7a\xa4\xae\x21\x21\x15\\n\xd7\x6b\x70\x0f\x7c\xaf\xce\xe2\xe2\x08\x65\xbc\x77\x87\xef\x46\\n\xfb\xb3\x34\x3e\xd4\x4f\x86\x3c\xa8\x16\x64\x08\x5b\x8d\xf8\x0b\\n\x6b\x44\x6e\x70\xbc\xaf\x50\x8a\x7c\xf1\xd3\x87\xdc\x12\xb2\xb6\\n\xeb\xc5\xba\xeb\x3a\x90\x41\xd9\x42\x70\x78\x75\x70\x36\x72\x00\\n\x22\xca\x1a\x14\x37\x28\x71\xc8\xe3\x34\x44\x43\xd5\xfb\xb2\xc9\\n\x06\x57\xc1\x04\x6a\xeb\x81\x72\x3d\x63\xac\xef\x4d\xd7\x3d\x2f\\n\x4a\x16\x8d\xa7\xc1\x31\x38\xa3\x6e\xd9\x1b\xd2\x48\x7c\x1d\x9f\\n\xda\xa4\x83\x1e\xc9\xb9\x1d\x82\x17\x0d\x36\x0e\xd2\x5c\xea\x6f\\n\x90\xfe\x2c\x8d\x5f\xda\xfb\x70\x6b\xe8\xdf\xd1\xc4\x2b\xae\xb7\\n\xc7\x17\x78\xfc\xc7\x35\xf4\x9e\xee\xdc\x3d\xd2\x01\x1f\x2d\xa4\\n\xdd\xf9\xfc\x77\xf6\xd8\x52\x70\xe8\x2b\x6f\x8f\x1d\x2b\x2b\x7e\\n\x90\xc2\xef\x47\x92\x75\xd1\xbd\x37\x97\x53\x46\xd7\x9f\x26\xdc\\n\x06\xd1\xc9\x8e\x02\x1e\xb7\x32\x7e\x44\xe0\xa0\x71\x9b\xfb\xf1\\n\xbd\x72\x44\xe9\xe6\x14\xc5\x34\x45\x49\x8b\x2a\xa1\x8c\xae\x6a\\n\xc3\x1d\xc3\x07\x87\xa2\xbd\x5e\xb4\x28\xba\xe3\xf6\x9a\x66\x67\\n\x7a\x10\x86\xdf\x01\xe2\x57\x37\xab\xf0\xc7\xb5\x89\x0a\x9e\xe2\\n\xfd\x2e\xc1\xe7\x40\x2c\xc0\xdd\x72\x53\x65\x62\x87\xfa\x00\xf5\\n\xaa\xee\xd6\x24\xbc\xe1\xce\x56\xfa\xfe\xb3\xeb\xd4\x9c\xe2\x74\\n\x97\xec\x43\x0c\x39\xc0\x6e\xb2\x79\xe7\x3b\x64\xb1\xd5\xdd\x41\\n\x71\x6d\x95\x86\x6d\x3c\xbb\x8e\x53\x70\x22\x4e\xc7\x87\xb8\x81\\n\x60\xc8\x7e\x76\x34\x95\xb3\xbc\x93\xbc\x44\x16\xc3\x29\x38\x11\\n\xa7\xe3\x43\xf0\x51\xc1\xc2\xb7\x36\xf1\x17\x63\x77\xe9\x4a\x08\\n\x27\x32\x82\xe2\x5c\x8f\x6f\xf1\xe1\x52\x29\x66\x7b\x61\xc7\x08\\n\xae\xfe\x3c\x48\x79\x70\x31\x53\xf3\x3f\x3e\x08\x05\x8d\x64\x40\\n\x34\x4d\xa9\xc0\xa9\xbd\xc7\x83\x85\x4c\x4d\x63\xa4\xd3\x0f\xf8\\n\x50\x76\xd0\xa6\x03\x08\x85\x89\x55\x1b\x2a\x18\x9a\x2a\x5b\x6a\\n\xd5\x34\xfe\xc4\xd7\x5c\x20\xf1\x59\x45\x79\xb5\x26\x1a\x7e\x0f\\n\x74\x75\x50\xa4\x6f\xc6\xff\x76\x44\x88\x2d\xc7\x07\xb9\xc0\x85\\n\x21\x60\xd1\x72\x59\xf1\xf9\xab\xbb\x03\x24\x23\xf0\x41\xbf\xe1\\n\xa3\xdb\xe6\xb4\x4a\xbc\x01\x8b\xda\xd5\xe6\x87\xb7\x65\xc4\xfe\\n\x24\x68\x21\x3e\x76\x3d\xb8\x3c\x4b\xa7\xeb\x20\x23\xd4\x90\xd8\\n\x9f\x04\xad\xc2\xc7\x8a\x32\x5c\x98\x0d\xb7\x8b\x40\x43\xe2\x48\\n\x12\xb4\x04\x1f\x75\x17\xd4\x24\x6c\xb4\xfc\xc2\x06\x73\x24\x09\\n\x86\x2c\x62\x47\x72\x61\xe7\xd0\x08\x15\xe4\x94\x34\x34\xee\xdb\\n\xe3\x76\x7c\x94\x80\x70\x31\x77\x9f\xbc\x6f\xf3\xe8\x66\x53\xdf\\n\x5b\x63\x10\x28\x33\xed\x19\xee\x37\xf9\xf2\x90\xef\x98\x5c\x38\\n\x32\x3f\x87\xd2\x92\x16\x05\xa0\xd8\xb4\x41\x46\x42\x56\xb0\x53\\n\x1b\xfe\xb4\xc7\x50\x60\xe2\x97\x43\xf6\xa0\x92\xd3\x1b\xf8\x94\\n\xec\x9c\xdd\xd8\xcc\x46\x25\xd0\xf0\x58\x3d\x2c\x68\x02\xbe\xd6\\n\xef\x5c\x71\x09\x3b\x46\x90\x32\x2f\x0d\x0b\x5a\xb7\xa7\xba\x57\\n\x7c\xf4\xfd\x68\x2e\xd8\x25\xec\x98\x8c\xb0\x61\xc1\xef\x67\x8b\\n\x16\x29\x49\xa8\x17\xa7\x5b\xcc\xd4\xee\xcd\x16\x49\x67\xef\x6c\\n\xa5\xdd\x76\x33\x02\x10\xfc\x72\x2b\x4d\x79\x30\x37\x59\xc2\xb7\\n\x35\x3d\x90\xc3\x97\x03\xa7\x9c\x9c\x45\x6d\x0c\xbf\x73\xe7\x34\\n\x76\x73\x5d\xf8\x4e\x12\x79\x99\xf6\xf5\x4f\x8f\xd4\xd1\x05\x99\\n\x78\xd7\xd5\xee\xf0\xb1\x8d\xa1\xec\xcb\x99\x3b\x84\x67\xd5\x98\\n\xc2\xee\x20\xf0\xd1\xd6\x55\x6a\x25\xd1\xe1\x51\x6d\xd0\x63\x53\\n\xd4\x1d\x3e\x9a\xf3\xa7\xff\xde\xe0\xce\x07\x97\x18\xed\xaf\xa6\\n\x86\x04\xd9\x86\x5d\x88\xad\xf8\xf2\x87\x31\xfa\xdd\x3c\xba\xe0\\n\x99\x2d\xab\x1f\x4d\xbc\xfa\xd8\x8c\xa2\xba\x3b\x0a\xcd\x7b\xd0\\n\x5d\xf1\xfc\xdd\x36\x69\x59\xbd\x29\x39\x27\x10\xab\xe6\x0d\x1a\\n\xa4\x99\xee\xf7\x66\x3c\xb6\x24\x3e\x45\x66\x4f\x35\x68\x35\x17\\n\xdd\xd2\xb6\xb9\x36\x4e\x4f\xa3\xc3\xba\x3f\x48\x70\xf0\xa5\xda\\n\xcd\x09\xbb\xbd\x3c\x15\x8f\x7b\xe5\x48\xa1\x74\xb5\x63\xb0\xeb\\n\xe0\x5b\x08\x12\x3e\xb5\xb6\x0a\x07\xf4\x1a\x6e\x28\x2e\x8f\x53\\n\xc5\x77\xdf\xae\x51\x62\xf7\x18\x8a\x6a\xb1\x3b\x06\x2f\xb8\x1e\\n\xb7\xf0\x50\x1f\xdf\x46\xf0\xf0\xb1\xbd\xd0\x20\x05\x6a\x7b\xed\\n\xd2\x5a\x4a\x87\xd1\xaa\xf0\xe1\x7e\xbc\x50\x8e\x18\x6f\xe9\x24\\n\xbe\xb7\xf0\xd9\x37\xe2\x22\x4d\xe2\x93\xf8\x24\x3e\x89\x2f\xa0\\n\x76\xa1\xbc\xb9\xa9\xb2\x64\xd1\x5d\x37\xf2\xde\xd9\xff\xf8\x02\\n\xb2\x6b\xdc\x74\xfb\x4f\x80\x01\x00\x47\x86\x52\x95\x62\xdb\x0f\\n\x9d\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x04\xaf\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x6a\x00\x00\x00\x6a\x08\x02\x00\x00\x00\xdb\x43\x53\xc0\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x17\x12\x00\x00\x17\x12\\n\x01\x67\x9f\xd2\x52\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x41\x64\x6f\x62\x65\x20\x49\x6d\x61\x67\\n\x65\x52\x65\x61\x64\x79\x71\xc9\x65\x3c\x00\x00\x04\x3c\x49\x44\\n\x41\x54\x78\xda\xec\xdc\x3d\x4c\x13\x61\x18\x07\x70\x4a\xa0\x14\\n\x5a\xf9\x10\x69\x3b\x10\x07\x30\x61\x32\x34\xb8\x90\x40\x5c\x6a\\n\x42\x58\x5c\xd8\x1c\x1c\x35\xc1\xad\x03\x23\x83\x9b\x0c\x9d\x94\\n\x44\x37\x49\x74\xab\xab\x61\xe8\x82\x21\x61\xc1\xa4\x61\x22\x29\\n\x98\x18\x62\xe0\x22\x29\x86\x22\xa5\x16\xe3\xbf\xf7\xc0\x6b\x03\\n\x83\xe5\xda\xf7\xbd\xf3\xf8\x3f\x69\x8e\x16\xda\xfb\xf8\xf5\x79\\n\x3f\xef\xb8\xc0\xf1\xcb\xdb\x2d\x0c\xa7\xd1\x4a\x82\x46\xa2\x4d\\n\x7e\x24\xdf\x7b\x31\x07\xd3\x0f\xac\xd1\x68\xc9\xcb\xfb\xc6\xec\\n\x63\xe1\x25\x1f\xf9\xc8\xc7\x20\x1f\xf9\xc8\x47\x3e\x06\xf9\xc8\\n\x47\x3e\xf2\x31\xc8\x47\x3e\xf2\x91\x8f\x41\x3e\xf2\x91\x8f\x7c\\n\xe4\x63\x90\x8f\x7c\xe4\x23\x1f\x83\x7c\xe4\x23\x1f\xf9\x18\xe4\\n\x23\x9f\xf7\xa2\xcd\x6b\x3b\x34\x1a\x3b\x49\x44\x4b\xb1\x70\x25\\n\x1e\x39\x1d\xee\x2d\xb7\xd8\x17\x22\x16\xcb\x81\xad\x42\x30\x5f\\n\x08\xe6\xac\x8e\x62\xb9\x95\x7c\x17\x23\x1e\xae\x3c\xbe\xfb\x63\\n\x62\xf0\x38\x12\xfc\x7d\x11\x34\x5a\xc2\x12\x7f\x92\x97\xab\x3b\\n\x9d\x99\xcd\xee\xdc\x5e\x07\xf9\xfe\xc2\x4d\x0d\x1d\xc9\x4b\x24\\n\x17\x80\xaa\xb9\x76\x10\x7c\x36\x56\x18\xee\x2b\xa7\xb2\x31\xbc\\n\x07\x4f\x20\x88\x27\x58\xe2\x91\xb3\x42\x6f\x37\x7a\x5c\x47\x74\\n\x99\x0f\x6a\xb3\x63\x05\xc9\x38\xa8\x2d\x6f\x47\xb0\x54\x7f\x2d\\n\xfe\xaa\x96\x53\x18\xe5\x5a\xc0\x14\x5e\x5c\xef\x03\xe2\xcc\xc8\\n\x21\xf8\x90\x92\xe9\x64\x29\xb3\x79\x03\xbf\xbc\xa6\x7c\x73\xe3\\n\xfb\x92\x74\xc8\xb5\x17\x6b\x37\xb1\xfc\xe7\x47\xf0\x9e\x85\xb5\\n\x7e\xe4\xe0\xec\xbd\x02\x10\x41\x99\x88\x9e\xa4\xb2\x51\xb7\x2a\\n\xc4\x56\xd7\xed\x96\x36\x7a\x9e\x7c\x8c\xd7\x63\xa7\x62\xf7\xa8\\n\x6d\x7e\x65\x00\x0f\xa8\x21\x1f\xd3\x49\xeb\x72\x8d\xe9\x67\x3e\\n\x65\x87\x54\x42\x15\xe6\x6c\x25\x28\xe6\x92\x77\x2e\x0a\xba\xc0\\n\x07\x38\x65\xb7\xbc\x1d\x6e\x64\x55\xc8\x59\x25\x88\x3a\xd4\xff\\n\x7c\xd5\x6a\xcb\x3e\x4e\x94\xd9\x06\xed\x94\xe0\xfc\xa7\x01\xf9\\n\x56\x54\xe7\xc6\xb7\x7c\xe8\xa3\xa0\x94\xe1\x98\x1d\x97\xd9\xcb\\n\x81\xa6\x19\x4d\x30\x9e\xa0\x3d\xf1\x33\x1f\x52\x4f\x8a\xed\xab\\n\xcf\x4d\xee\x6d\x20\x97\x51\x84\xd5\xfa\xfd\xc9\x87\xd4\x93\x2a\\n\xbf\xe9\xdd\x5d\xd8\x2d\xd9\xe9\x2c\x9b\xf0\x27\x9f\xd4\x4d\xe8\\n\x1b\xeb\x58\xf9\xf2\x97\xb0\x24\x38\x9a\x11\x1f\xf2\x8d\xc6\x4e\\n\x50\xeb\xc9\x98\x4c\xc7\xfa\xd5\x9a\x27\x0d\x36\x20\xe6\xf8\x12\\n\xf6\xc8\x5f\x93\xdd\x79\x4f\xb0\x4b\xbe\x27\x1f\xf2\xc5\xc2\x15\\n\xe9\x67\xe8\xdb\x04\x46\x23\x6a\x43\x7e\xe3\x8b\x47\x4e\xb1\xcc\\n\x1f\x68\xe4\x93\x16\x29\x6e\x90\x2f\x20\xf7\x32\xc8\x59\x21\xdd\\n\x5b\x1a\xee\x2d\x4b\x8f\x4f\xe6\x51\xea\xff\xc8\x95\xf6\x4d\x26\\n\x07\x8d\x1d\x4e\x80\xb7\x82\x68\x24\xcc\xdd\xcb\x40\xfe\xf9\x3f\\n\x95\x8d\xd5\xdf\xe9\x73\x70\x2f\x83\xec\xa3\xaf\x26\x0f\xc7\x5c\\n\xdd\x57\x2c\x07\xb0\xbc\xd3\xab\xb1\x53\x26\x3d\x3e\x93\x73\x7f\\n\xe6\xb6\x24\x6d\x6e\x2c\xa2\xb1\x5e\x8f\x87\xab\xad\xd3\x96\xce\\n\xd6\xc9\x35\xbe\xbc\xcd\xa7\x75\x52\x64\x62\xf0\xa7\xbd\xa1\x76\\n\x1f\xf2\xe5\xac\x0e\xdd\x83\x2a\xf9\x6e\x72\x7b\x21\x1f\xf2\xa9\\n\x41\xd5\xcc\xc8\xa1\x8e\xf5\x4f\x0d\x1d\x69\x1d\x14\xba\x3f\x65\\n\x90\xd9\xec\x96\x1c\xd1\xd1\xb3\x95\x6f\xe5\x83\x3d\xf1\xe7\x4f\\n\xbe\xea\x29\x47\x2b\x84\x1c\x69\xfa\xbc\x26\xec\x50\x27\x20\xf5\\n\x32\x3e\xe6\x43\xc8\x24\xb3\x9c\xea\x6e\x5e\x83\x5b\x91\x69\x3e\\n\xa4\x9e\xe1\x33\x96\xa6\xf9\xd4\xc4\xfa\xdc\xf8\x7e\x53\xda\x10\\n\xe4\xf2\xf3\xfb\xdf\x9b\x7e\x02\xc0\xa3\x7c\x88\xc5\xf5\x3e\x1c\\n\x2a\x0e\x38\x9d\xb4\x1a\x14\x54\x2b\x41\xd2\xcd\xaf\xdc\x32\x7f\\n\x2c\xee\x9c\xe7\x4d\x65\xa3\x4a\xd0\xf1\xf4\x1c\xca\xac\xb2\xc3\\n\x0a\x65\xb6\xea\x5a\xf0\xc9\x01\x9f\x0b\xee\xa1\x25\xb9\xea\x49\\n\x6e\xb4\x15\xaf\xa7\x77\x95\x9d\xd6\x69\x44\xcf\xf1\x29\x41\x39\\n\xd5\x0b\x8b\x77\x0f\xbf\x61\x59\x0f\x22\xfa\x77\x6f\xa6\x77\x45\\n\x1c\x6a\x4f\xaf\x78\x81\x87\x96\x19\x17\xb7\x04\x17\xd6\xfa\x57\\n\x77\xba\x60\x21\x57\xfd\xe0\x81\x4e\x2f\x7e\x83\x92\x58\x3b\x31\\n\x83\x2c\xc3\x78\x16\x63\x32\x75\x01\x20\x3e\x8b\x76\xd6\x7c\x5b\\n\xe1\x21\x3e\x09\xdb\xab\x13\x39\x85\xce\x87\xba\x7c\xaf\xf6\x0d\\n\x32\x07\x55\x8b\x0e\xb8\x8c\xf1\x3e\x8a\x47\xf9\x24\x50\x8a\xf1\\n\x40\x96\x4d\x0e\x1e\xa3\x31\xa9\x5e\x9c\x5b\x33\x32\x81\xd4\xd6\\n\x41\x30\x5f\x68\xc7\x78\xd6\xe4\x98\xec\xbf\xe1\x93\x40\x2d\x56\\n\xad\xc8\x36\xce\x5e\x7a\xf9\xd6\xaf\x2e\x37\x1d\xfe\x08\xf2\x91\\n\x8f\x7c\xe4\x23\x1f\x83\x7c\xe4\x23\x1f\xf9\x18\xe4\x23\x1f\xf9\\n\xc8\xc7\x20\x1f\xf9\xc8\x47\x3e\x06\xf9\xc8\x47\x3e\xf2\x91\x8f\\n\x41\x3e\xf2\x91\x8f\x7c\x0c\xf2\x91\x8f\x7c\xe4\x63\x90\x4f\x4b\\n\x98\xbb\x97\x81\x83\x70\x70\x2f\x03\xc3\xfb\x76\x76\x75\xa9\xdc\\n\x41\xc1\x9b\xe1\xe5\x7d\xfb\x23\xc0\x00\xb9\xee\x00\xb6\xe4\x5b\\n\xa0\x9d\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x06\x0b\\n\x00\\n\x00\x3b\xc6\x78\x9c\xed\x9b\x7d\x6c\x13\x65\x1c\xc7\x1f\x90\x37\\n\x47\x90\x3f\xa6\x32\xa7\x92\x72\x44\x04\xf5\x7a\x77\x7d\xbf\xb3\\n\xed\xd2\xad\x1b\x9b\xd0\x6d\x6c\x45\xb7\x98\x38\xae\x77\x4f\xbb\\n\x1b\xed\x5d\xb9\xbb\x6e\xdd\x20\x4a\x50\x5e\x54\x50\x51\x8c\x08\\n\x44\xc1\x04\x48\x04\x66\x30\x10\x0d\x98\x4d\x4d\x88\x20\xd1\x08\\n\x99\x82\xf8\x0f\x26\x43\x60\xd3\x90\x80\xfe\xe1\x0b\xea\x73\xed\\n\xba\x75\x6d\xb7\x2c\x01\xe3\x3f\xcf\x93\xdc\x5d\xef\xf7\x7b\xbe\\n\xbf\xcf\xf3\xf6\x7b\xfa\xfc\x73\x2f\xd6\xd7\x2e\x9e\x55\x54\x5a\\n\x04\x00\x98\x55\x53\xed\x6f\x30\x9e\xc6\x35\x63\x1a\xba\xab\x83\\n\xfd\x6b\xd0\xe3\xce\x78\x75\xb3\x06\xc0\xcc\x62\xe3\x9a\x04\x76\\n\xec\x2a\x01\x80\xbd\x2e\x05\x9b\xf4\xa6\xc0\x52\x4e\x50\x62\x66\\n\x5e\x54\x42\xd0\x9c\x8c\xc5\x81\x51\xdc\x65\xc9\x38\x2f\xac\x84\\n\xba\x29\x04\x23\x92\xec\x21\xae\x1d\xef\x25\x4c\x92\xe8\x21\x9e\\n\xb2\x07\xe8\x40\xbc\x02\xb6\x4a\xd5\x5d\x2a\x6c\xec\xaa\x0d\x0a\\n\x5d\x2b\x05\x56\x24\xca\xbc\x45\xee\x24\x87\x02\xc4\xa0\xce\x9b\\n\x92\xb1\xa8\xac\x71\x49\x0f\x91\x8a\xcb\xa1\xdf\x86\x99\x22\x4c\\n\xa9\x2a\xfa\x4a\x0f\xe1\x33\x1c\xa6\xa6\x40\xbd\xa9\x42\x51\xa1\\n\xc9\x6e\x76\x90\x02\xcd\xd8\x4c\x4e\xd6\xcc\xd8\x1d\x4e\xd6\xf9\\n\x98\xc9\x82\xde\x29\xda\x45\x59\x68\x92\x66\x39\xbb\x95\xa3\x2d\\n\xa6\xa1\x42\x78\x8b\xd0\xdd\xad\x8a\x61\xae\xc1\x5f\x35\x84\x43\\n\x6f\x1e\xa2\x55\xd7\xe3\x1c\x45\x75\x74\x74\x98\x3b\xac\x66\x45\\n\x8d\x50\x0c\xcb\xb2\x14\x6d\xa1\x2c\x16\x12\xd5\x20\xb5\x4e\x59\\n\xe7\x93\xa4\xac\xcd\x4f\x07\xc9\xc4\xf1\x43\x4d\x50\xa5\xb8\x2e\\n\x29\xb2\xc9\x78\xe7\x43\x4a\x42\xf7\x10\x44\x91\x29\xab\x0c\xf5\\n\x2b\x16\x1f\x06\xc9\xda\xd0\xd8\xa1\x51\xa4\x92\x7c\x9c\x62\xcc\\n\x34\x55\x48\x24\x0a\xc3\x9a\x78\x42\x8d\xa6\x9a\x26\x0a\x14\x8c\\n\xc2\x18\x94\x75\x0d\xe9\x98\x82\xba\x78\xab\xa2\x2b\x5a\xab\x32\\n\x06\x72\xd8\x3d\x26\x18\xb5\x36\x10\x18\xbf\xbd\xb1\x58\x41\xa5\\n\xa6\x57\xb6\xeb\xe3\x2b\xb5\x60\x67\x1c\x52\x0d\x50\x53\x12\xaa\\n\x00\x2b\xdb\x51\x57\xe6\x17\x0a\xa5\x4b\xe1\x70\xe1\x48\x86\x67\\n\xcc\xb6\xc3\xa4\x34\x86\xcc\xf0\xa4\x65\xde\x11\x9d\x1b\xf5\x95\\n\xab\x50\x21\xaf\x2b\x6a\x50\x51\xa2\xde\xf4\x2a\xab\xcf\x8c\x91\\n\xa9\xa2\x22\xb5\xaa\x4c\x0b\x03\xbc\x20\xc9\x86\x71\x91\x9b\xca\\n\x15\x15\x8a\x07\xfd\xe8\xf2\x22\xad\x9d\xa4\x9d\xa4\x85\x0d\x32\\n\x2e\xce\x66\xe3\x18\x07\x49\xdb\x38\x9a\xce\x0a\x92\xae\x99\x13\\n\x23\xa0\x88\x52\xb8\xb3\x50\x0c\x3b\x67\x63\xb3\x63\x64\xd5\xcc\\n\x8d\x81\x32\x48\xe4\x75\x7e\x42\x51\xb2\xeb\x66\xc5\x11\x05\x2e\\n\xac\xa8\x31\x5e\xf7\x4a\x31\x3e\x02\xa9\xb8\x1c\x71\x53\x23\xc6\\n\xac\x9a\xc3\xeb\x8a\xab\x50\xa2\x8a\x8a\x9a\x05\xbd\x56\x37\x55\\n\xc8\x3c\xba\x9d\x81\x00\x57\x23\x6b\x3a\x2f\x0b\xb0\xc6\xef\x45\\n\x06\xb3\x24\x89\x1c\xef\xb4\x59\x1c\x0e\x81\x25\x45\xd6\x1a\x22\\n\x6d\x30\x14\x26\x43\x22\xea\x82\x95\x71\x8a\x0e\x31\xc4\x42\x56\\n\x0c\xa7\x9a\x3e\x5a\x9e\x17\xda\xaf\x08\x09\x23\x5f\x90\x2f\xbd\\n\xb5\x88\x8a\x80\xc2\x8f\x34\x0b\x3a\x2c\x76\x07\xef\x70\x92\x4e\\n\x87\xc8\x90\x0c\xe3\x74\x91\xbc\xe0\x0c\x93\x2e\x9a\x15\xed\x21\\n\xc6\x42\x3b\x69\x57\x06\x94\x15\x2c\x0f\x54\xa7\x4a\x68\xe7\xe3\\n\xa3\x59\x75\x8c\xbe\x88\x08\x66\xb7\x3a\xc2\x76\x14\x86\xb4\x85\\n\x5c\xe8\xc6\x40\x27\xe9\x12\x59\x96\x0c\xb3\xa2\xcd\x16\x62\xac\\n\x4e\x36\x44\x67\x10\x05\xc2\xe4\xa1\xaa\x25\x0d\x2d\xbd\x4e\xef\\n\xa8\xf5\x9f\xda\x93\x1a\xe1\xaa\xd1\xd6\x8c\x23\x2a\xa5\xf6\xa8\\n\x38\xaf\x6a\xd0\xc8\x40\x0f\x91\x49\x41\x22\x4f\x60\x68\x52\x99\\n\xcc\xf1\x82\xb1\xbb\x79\x85\xd4\x32\x15\xdd\xd4\x28\xeb\xd8\x32\\n\x29\x7f\x3a\x27\x36\x04\x79\xf2\xb1\x19\x1d\xad\x50\x1e\x2f\xbd\\n\xb2\x6a\x8d\x1d\x44\x53\xc2\x7a\x07\xaf\x42\x5f\x04\x8d\xf4\xc4\\n\x72\xbf\x90\x30\x6f\xc4\xa9\xf4\x90\xff\x07\x53\xa1\xf1\xed\xb7\\n\x36\x11\x13\xcb\xab\x5b\x9c\x88\xec\xdd\xe5\xff\x9c\x88\x11\x80\\n\xd0\xca\xcb\x11\x28\x7a\xa9\x8c\x30\x63\x98\xd8\xdc\xa5\xad\xa3\\n\xb3\x2b\x93\xb1\xf9\xd9\xe8\x36\xfe\xa2\x8c\x4c\x46\x6d\xe2\x53\\n\x53\xc4\xb8\xa9\x3c\x5b\x6e\xfd\x26\x63\x19\x44\x13\x29\x9f\xd3\\n\x42\xa3\x42\x31\xc6\x7d\x48\x9a\xed\xce\x95\x36\x8f\x2f\x6d\x1e\\n\x47\x3a\xe2\x5a\x2e\x4b\xba\xd7\x32\x24\xc9\x31\x67\xa9\x8c\xff\\n\xd1\xf4\x5e\xde\x88\x8e\x7c\xd0\xeb\xb0\xdb\xad\x76\x37\x95\x6b\\n\xce\x55\xd4\x4b\x49\x18\x6d\xf2\x4b\x68\x4f\xd3\x52\x23\x62\x1d\\n\xd2\xe4\x3a\x0a\x0a\x9b\xc7\x12\x36\xe7\x09\xd3\x53\x95\x75\x38\\n\x4b\x9f\xfc\xa8\xa1\xa3\x1f\x3a\x75\x52\xc3\xc7\xce\x42\x0b\xe6\\n\xf6\x17\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\\n\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\\n\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\\n\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\\n\x10\x0c\xc1\x10\x0c\xc1\x90\xdb\x0c\x29\x1a\xf9\x90\x13\xca\xa2\\n\x87\xe8\x20\xca\xbc\xe7\x88\xeb\xc6\xb7\xa2\x26\xa1\xba\x21\x00\\n\x40\xd7\x43\x00\xac\x7d\x1e\x80\xdf\xff\x41\xcf\xab\x00\x24\x68\\n\x00\x06\x56\x00\xc0\x6d\x07\x60\x8e\xf2\x7a\xcb\x89\x2a\x00\x26\\n\xd5\xd6\xf8\x7d\xc1\xe4\x85\x6d\x67\xeb\x96\x4c\xf6\x95\x4c\x8b\\n\xf7\x6e\x7a\x77\xf7\xd3\x2d\xbb\xdf\xe8\xdb\x5b\x51\xb9\x7e\x63\\n\xc3\xe3\xbf\x5d\xbe\x3b\xb8\x69\x0a\x73\x70\x7b\xd5\x86\x43\xdd\\n\xa7\x16\x56\x3e\xfa\xcc\x94\xfd\x89\x2f\x56\x45\x22\x0f\x94\x32\\n\x9f\x98\xe7\x4e\x1e\xec\x9b\x5e\xcf\x4d\xf5\x7d\xd6\x7e\x66\x86\\n\x63\xf6\xea\xa4\x7c\xed\xd5\x8d\x73\xde\x01\x2f\xd0\x77\xcd\xfb\\n\xeb\xd7\xad\x49\x50\x7e\xe5\x8f\xaf\xa8\xb6\xbe\xc1\xa3\x0b\xca\\n\x4b\x1d\x9b\x97\x84\x76\xbc\xb4\x7e\xd5\xe7\x0b\xfa\x5f\xfb\xe8\\n\x87\xe3\x0f\x9e\xbe\xb0\xaf\x64\xb1\xfb\xa4\x6d\xf3\xae\xc0\xc9\\n\xe6\x8d\x67\x85\x53\xe7\x7d\x75\x9b\x9a\x5a\xbe\x0c\x54\x55\x7f\\n\xbc\xfb\xfd\x73\x25\x7b\xee\x99\xdd\xe6\xdc\xb9\xc8\x77\x75\x6b\\n\xff\x9a\xde\x87\xfd\x47\xa8\x4b\x1b\x8e\xfc\xf2\xed\x8d\x60\xdb\\n\x0c\x10\xff\xe0\xc3\xef\xd7\x4d\x3f\xf3\xe4\x60\x50\xed\x39\x57\\n\x4c\x9c\x7d\x4b\xbd\xd9\x49\x9f\x3f\x75\x60\x60\x26\xf8\x74\x2a\\n\xd8\xdc\x76\xac\xa7\xdf\xd7\xf1\xe6\x13\x8b\xde\x5e\xfa\xca\xdc\\n\xd2\x2d\x03\x7f\x26\x0f\x2e\x4f\xdc\x4c\x4c\xf6\xca\xa7\x2f\x5d\\n\x32\x5f\xd6\xe6\x06\x1f\xb9\xf7\xda\x24\xd0\xfd\xde\xc2\x96\x63\\n\xdd\x75\xf7\xf7\x1c\x5d\xe3\xe5\xf4\x5d\x17\x7b\xaf\x6c\x3d\x7c\\n\xe8\xe5\xa5\x3f\x49\xea\xcf\xb5\x7f\xbb\xee\xe3\x6a\xe3\x0b\x06\\n\xd4\x9e\xef\x60\x74\xd9\xb2\x6d\x4e\xb0\x76\x67\xcd\x7e\xad\x91\\n\x2e\x6e\x2e\xd9\x38\x75\xef\xbc\xe2\x3d\xdf\x6c\xd9\x77\xa2\x64\\n\xde\x8d\xe7\x04\xe2\xc8\x45\xdf\xb3\x73\x7e\x5c\xbd\xba\xec\x0e\\n\x70\xd8\xd3\x93\xec\xfb\xfa\x40\xb9\xf1\xa5\x6d\x4d\x65\xad\xbf\\n\xbb\x7c\xc5\xba\x7f\x01\xff\x51\xbf\x8f\\n\x00\x00\x04\x47\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x68\x00\x00\x00\x68\x08\x02\x00\x00\x00\x92\x7e\x22\xf6\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x17\x12\x00\x00\x17\x12\\n\x01\x67\x9f\xd2\x52\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x41\x64\x6f\x62\x65\x20\x49\x6d\x61\x67\\n\x65\x52\x65\x61\x64\x79\x71\xc9\x65\x3c\x00\x00\x03\xd4\x49\x44\\n\x41\x54\x78\xda\xec\x9c\xbf\x6e\xd3\x50\x18\xc5\x13\x04\x59\xcc\\n\x50\x33\xd0\x01\x67\x88\x2b\xd1\x0e\xb4\x03\x20\xd1\x44\x20\x50\\n\x93\x48\x55\xfb\x04\x08\xde\x0a\x21\xf1\x00\x20\x1e\xa2\xa5\x22\\n\x54\xa2\x1d\x9a\x0c\x09\x12\x49\xa5\x3a\x43\xba\x24\x43\xdd\x21\\n\x5e\x32\x71\xe2\x0f\xae\x42\x33\x34\x4d\x6d\x5f\xf7\xf6\x1c\x59\\n\x57\x56\x1b\xdf\xc4\x3f\x7f\x7f\xed\x2b\x67\x4b\xa5\x97\x99\x54\\n\xea\xed\xbb\xf7\x18\xbf\x7e\xf9\x9c\xce\x9f\x77\x27\x43\x11\x1c\\n\xc1\x11\x1c\xc1\x51\x04\x47\x70\x04\x47\x70\x04\x47\x11\x1c\xc1\\n\x11\x1c\xc1\x11\x1c\x45\x70\x04\x47\x70\x04\x47\x11\x1c\xc1\x11\\n\x1c\xc1\x11\x1c\x45\x70\x04\x47\x70\x04\x47\x70\x14\xc1\x11\x1c\\n\xc1\x11\x1c\xf5\x57\x77\x53\xf5\x6b\x1e\x2e\x8e\xb5\x60\xdb\xb9\\n\x7b\x39\xf9\x4b\xb9\x52\xc5\x38\x18\xf4\xfd\x33\x1f\xe3\x68\x34\\n\x22\xb8\xff\x78\xb9\xee\xd2\x23\xc7\xc9\xe5\x72\xd3\xff\x52\x23\\n\x74\x7a\xda\xeb\xb4\xdb\x83\x7e\xff\xb6\x83\xb3\xac\xfb\xeb\xc5\\n\xa2\xe2\x12\x04\xc1\x69\xaf\xe7\xfb\x7e\x10\x0c\xc5\xd6\xbe\xed\\n\xee\xe0\x33\xb6\x6d\xe3\x33\x18\x1d\x27\x8f\x0d\xe0\x5a\xad\xa6\\n\x5e\x7c\x3a\xc1\x2d\xaf\xac\x3c\x7d\xf6\x5c\xf6\xbb\x9e\xd7\x69\\n\xff\x06\xb2\x0b\x9f\x09\xe9\xf4\xbb\xff\x28\xe3\x90\x82\xeb\x02\\n\x62\x79\xb1\x0a\xd3\x6b\xd4\x8f\x6e\x1d\xb8\xf5\x62\x09\x08\x04\\n\xcd\xe1\xc1\x01\x4c\xec\xd2\x43\xf0\x19\x90\xfa\xd5\x6a\x02\x37\\n\x8e\x05\x44\x10\xdc\xdb\xdd\xd1\x12\xf8\xf4\x64\xd5\xcd\xad\x6d\\n\xa1\x06\x10\x70\xc6\x59\xa8\x29\x01\xd3\xe1\xc1\xcf\xfd\x5a\x0d\\n\x3b\x70\xde\x8d\x4a\x75\x3a\x32\x9a\x09\x0e\xb6\x86\x13\xc6\x69\\n\x03\x19\xdc\x6d\xbe\x49\x90\x25\xc4\xd6\x74\xb1\x4b\x1a\x9c\x04\\n\x29\xec\xec\xff\xa8\x5d\x33\xba\x23\x20\x2a\x76\x2a\x56\x9a\x09\\n\x0e\xd1\x5d\xce\x10\x1e\x1a\x49\x4e\x04\x3b\x5c\x00\xec\x48\xc6\\n\x30\x16\x1c\x2a\x0f\xc9\x06\x73\x7b\xe8\xb4\xd4\x6c\x88\x00\x66\\n\x82\x83\x45\x88\x51\x20\x87\x46\x3b\x33\xf2\x2c\x1c\xd6\xb2\xac\\n\x82\xbb\x64\x20\x38\x37\x3c\x2b\xd4\x6b\x57\xca\xa1\x33\xe6\xd9\\n\xe3\x4e\x5b\x02\xa8\x81\xe0\xd0\x51\x61\x44\x95\x1b\xc7\xe4\xe2\\n\xad\xc8\x12\x08\xa3\x46\x81\x43\x9f\x84\x8a\x01\x1d\xd5\x74\x6f\\n\x10\x95\xd1\xa1\x40\x19\x7f\x51\xde\x31\x0a\x9c\xfd\xc0\x1e\x17\\n\x5f\xbd\x5e\x7c\x5f\x21\x69\x3a\xb1\xdc\x9a\x10\xb8\x05\xdb\x96\\n\xea\x21\xbe\xaf\x90\xc9\x4d\x73\x55\xb9\xbf\x16\x79\x5a\x98\xd4\\n\x79\x08\xce\x0e\xaf\x50\x02\xca\x7e\xf8\xf8\x29\x43\xdd\x94\x26\\n\xdf\x00\x65\x93\x79\x99\x41\xb9\x52\x45\xd8\x46\x57\x3f\x7b\xa7\\n\x35\xc7\xcb\x0c\x92\x7c\xff\x41\xd2\xbd\x6a\xac\x9d\x49\x18\x46\\n\x03\xa3\x5c\x75\x30\xe8\xc7\x1d\xb9\xe5\xaa\x04\xc3\xa1\x51\xe0\\n\xfc\x33\x3f\xee\x22\x6b\x31\x9c\x5c\xae\x90\x81\x16\x17\x9f\xb7\\n\x4a\x4b\x17\x6b\x8d\xad\x01\x9c\x6a\x89\x62\xea\xc3\x0b\xee\x52\\n\xac\x2d\x9d\xce\xe4\x20\x7d\x78\xc1\x75\xe3\xb8\xcd\xbd\xba\xb6\\n\x16\xdf\x1d\x04\xcd\xe0\x50\x88\x60\x03\xb5\xc8\x6f\x73\x83\x9a\\n\x65\x59\x30\xea\xae\xe7\x99\x59\x00\xb7\x5a\x4d\x31\x3a\xc7\xc9\\n\x47\x76\xfb\xc0\xb6\x1f\x2f\x8f\xdd\xbf\x51\xaf\x27\xf9\x9c\x30\\n\x51\x70\xea\x36\xf7\x8b\x62\x31\x92\xd2\x04\xf6\xfb\xea\xf5\x1b\\n\x8c\x98\xb9\xeb\x9d\x98\xdc\x72\x35\xea\x47\x88\xdf\x38\xd5\x8d\\n\x4a\xf5\x9a\xec\x64\x12\x38\x29\x72\x82\x3c\xb2\x31\xbc\x57\xdd\\n\xdb\xdd\x51\xec\xe6\xae\xec\x00\x7d\x73\x6b\x5b\x9e\xcf\xee\xd7\\n\xbe\x27\xff\x30\x5f\x03\x38\x9c\xa4\x62\x87\x1e\x16\xb9\xe2\xaa\\n\x79\x16\xd9\x40\xd9\x9a\x4c\x95\xfc\x59\xe8\x59\x3b\x22\xec\xd4\\n\x12\x10\x8c\xc7\x9d\x36\xc2\xdf\xa5\x86\x83\x7a\x4d\x72\xa8\x44\\n\x4c\x78\xa8\xae\x15\x73\xda\x16\xdd\xc8\x12\x10\xcf\x3b\x59\x2f\\n\x96\x00\xe2\xc9\xea\x1a\x36\x14\xc9\xc0\x01\x0b\x3a\x9f\x30\x22\\n\xb8\x33\xfa\x0d\x74\x54\x6a\x01\x1d\x8e\x45\x0e\x4d\x38\x1b\x5c\\n\x50\x36\x0d\xef\xc8\x84\x1d\xc1\xee\x66\xc9\x15\xf0\x4d\x54\xb9\\n\xa8\xd7\xb4\x2f\xcd\x4c\xc5\x8a\x4c\xd8\x0e\x36\x98\x95\x93\x77\\n\xc4\xbe\x26\x21\x02\x56\x30\x1c\xa2\xdb\x95\x35\x87\x99\x74\x28\\n\xcb\xb7\xb2\xde\x98\xac\x6a\x86\x08\x8e\xe0\x08\x8e\xe0\x08\x8e\\n\x22\x38\x82\x23\x38\x82\x23\x38\x8a\xe0\x08\x8e\xe0\x08\x8e\xe0\\n\x28\x82\x23\x38\x82\x23\x38\x8a\xe0\x08\x8e\xe0\x08\x8e\xe0\x28\\n\x82\x23\x38\x82\x23\x38\x82\xa3\x08\x8e\xe0\x08\xce\x44\xfd\x11\\n\x60\x00\x68\xf7\xc4\x43\xcb\xdf\x5c\x48\x00\x00\x00\x00\x49\x45\\n\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x20\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x68\x00\x00\x00\x68\x08\x02\x00\x00\x00\x92\x7e\x22\xf6\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x17\x12\x00\x00\x17\x12\\n\x01\x67\x9f\xd2\x52\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x41\x64\x6f\x62\x65\x20\x49\x6d\x61\x67\\n\x65\x52\x65\x61\x64\x79\x71\xc9\x65\x3c\x00\x00\x01\xad\x49\x44\\n\x41\x54\x78\xda\xec\xda\xb1\x4e\xc2\x50\x18\x80\x51\x35\xda\x05\\n\x07\xba\xc0\x2c\xae\xc0\xa0\x4e\xc4\x4d\x7d\x08\xa3\x8f\xa7\xf1\\n\x21\x80\x37\x50\x07\x70\x05\x67\x5c\x58\x60\xc1\xc5\x1b\xba\x89\\n\x92\xa2\x15\x5b\x38\x9f\xc6\xa1\x98\x18\x4e\xaf\xde\xdb\xf8\xef\\n\xb6\x5a\xe7\x3b\x5a\xbd\x3d\x04\xe0\xc0\x81\x03\x27\x70\xe0\xc0\\n\x81\x03\x27\x70\xe0\xc0\x81\x03\x27\x70\xe0\xc0\x81\x13\x38\x70\\n\xe0\xc0\x81\x13\x38\x70\x39\x6a\x3f\xcd\x37\x95\x4a\x87\xe1\x63\\n\x4b\x44\xde\x67\xb3\xf1\x78\x9c\x0d\x5c\xed\xb8\x56\x6f\x34\xb7\\n\x04\xee\x6d\x34\xea\x76\xda\xd9\xc0\x25\x4d\x43\x93\xc9\xe2\xf5\\n\x4a\xb5\x9a\xfc\xbc\x42\xb8\x94\xe3\x38\x8a\xa2\xb0\xa6\xc2\xca\\n\xfa\xf4\xd2\x41\x14\xc5\x71\x9c\xe5\xaf\x6a\xd2\xeb\x70\xd0\xef\\n\xf5\x16\xaf\x5f\xdf\xdc\x86\xaf\x69\xee\x52\x1e\xba\xb8\xbc\x0a\\n\x77\xfa\xf9\xe9\x71\xf1\x4e\x87\xeb\xe1\x55\x9b\x83\x5d\x15\x1c\\n\x38\x81\x03\x97\xc7\x27\x87\xa4\xa3\xda\x71\xa5\x52\xdd\x8c\xb7\\n\x7d\x72\x7a\xf6\xe5\x39\xee\x4f\xe0\x4a\xf3\x36\x03\x2e\xfd\x41\\n\x37\x93\x03\x70\x68\x50\x74\xb2\x70\xf4\xfd\x6e\x65\x05\xcd\xb0\\n\x12\xb3\x87\x0b\x0f\x5c\x45\x79\xae\x5a\x52\x9a\x07\x78\x9b\x83\\n\x5d\x15\x1c\x38\x70\x02\x07\x0e\x1c\x38\x81\x03\x07\x0e\x1c\x38\\n\x81\x03\x07\x0e\x1c\x38\x81\x03\x07\x0e\x9c\xc0\xfd\xbe\x15\xfe\\n\x21\x5d\x6f\x34\x97\x8c\x50\x3f\xdc\xdf\x15\xe2\x0d\x27\xa3\xac\\n\x56\x5c\x11\x56\xdc\x4b\xbf\xb7\x64\x78\xba\x58\x75\x3b\x6d\xc3\\n\xd3\x36\x07\x70\xe0\x04\x0e\x5c\xf1\x8e\x23\xcb\x87\xa7\xd3\x6f\\n\xe4\xff\x5b\x79\x3e\xfd\x9b\xa3\xe1\xe9\x4c\x8e\xe3\x6b\x6b\x4d\\n\xc3\xd3\xc3\xc1\x70\x54\xfc\xe9\xdf\x94\x2d\xae\xc4\x9f\xc3\x4d\\n\xa7\x93\xf0\xe9\xef\x9a\xcd\x01\x1c\x38\x70\xe0\x04\x0e\x1c\x38\\n\x70\xe0\x04\x0e\x1c\x38\x70\x02\x07\x0e\x1c\x38\x70\x02\x07\x0e\\n\x1c\x38\x70\x02\x07\x2e\xaf\x7d\x08\x30\x00\x26\x91\x65\xae\x52\\n\xba\xd7\xec\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n"

598 
	=qt_resource_name
 = "\\n\x00\x06\\n\x07\x03\x7d\xc3\\n\x00\x69\\n\x00\x6d\x00\x61\x00\x67\x00\x65\x00\x73\\n\x00\x0a\\n\x04\x4f\xb0\xa7\\n\x00\x52\\n\x00\x4f\x00\x49\x00\x5f\x00\x4f\x00\x52\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x09\\n\x04\xa3\xf1\x47\\n\x00\x4c\\n\x00\x69\x00\x6e\x00\x65\x00\x50\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0c\\n\x0a\x25\xc3\x87\\n\x00\x4c\\n\x00\x69\x00\x6e\x00\x65\x00\x50\x00\x5f\x00\x4f\x00\x52\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0b\\n\x08\xd0\x7a\x07\\n\x00\x43\\n\x00\x72\x00\x6f\x00\x73\x00\x73\x00\x4f\x00\x52\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0c\\n\x04\x56\x23\x67\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x09\\n\x06\xa6\xc2\x67\\n\x00\x43\\n\x00\x72\x00\x6f\x00\x73\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x07\\n\x07\x3c\x57\xe7\\n\x00\x52\\n\x00\x4f\x00\x49\x00\x2e\x00\x70\x00\x6e\x00\x67\\n"

633 
	=qt_resource_struct
 = "\\n\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\\n\x00\x00\x00\x00\x00\x02\x00\x00\x00\x07\x00\x00\x00\x02\\n\x00\x00\x00\x12\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\\n\x00\x00\x00\x7e\x00\x01\x00\x00\x00\x01\x00\x00\x17\x0a\\n\x00\x00\x00\x2c\x00\x00\x00\x00\x00\x01\x00\x00\x02\x77\\n\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x01\x00\x00\x1d\x19\\n\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x01\x00\x00\x21\x64\\n\x00\x00\x00\x62\x00\x00\x00\x00\x00\x01\x00\x00\x12\x57\\n\x00\x00\x00\x44\x00\x00\x00\x00\x00\x01\x00\x00\x0a\xb5\\n"

645 def 
	$qInitResources
 ( ) :

646 
QtCore
 . 
	`qRegisterResourceData
 ( 0x01 , 
qt_resource_struct
 , 
qt_resource_name
 , 
qt_resource_data
 ) 
	}

648 def 
	$qCleanupResources
 ( ) :

649 
QtCore
 . 
	`qUnregisterResourceData
 ( 0x01 , 
qt_resource_struct
 , 
qt_resource_name
 , 
qt_resource_data
 ) 
	}

651 
	`qInitResources
 ( )


	@./CCNT_test_unit.py

1 import 
	~CCNT_test

2 import 
	~numpy

3 import 
	~sys

4 import 
	~os

5 
	=CWD
 = 
os
 . 
	`getcwd
 ( )

6 
sys
 . 
path
 . 
	`append
 ( 
CWD
 + '/proto_Code' )

7 import 
	~os.path

8 import 
	~sim_data

9 import 
	~pylab

13 def 
	$test_scanSize
 ( 
TF
 , 
pF
 , 
pS
 , 
samp
 , 
CH
 , 
resizeDim
 ) :

19 
	=temp
 = 1

20 for 
i
 in 
resizeDim
 :

21 
	=temp
 = 
i
 * 
temp

23 assert 
TF
 * 
temp
 == 
pF
 * 
pS
 * 
samp
 * 
CH

24 return 
temp
 
	}

26 def 
	$put_inP
 ( 
storedArray
 , 
inputarray
 , 
xindex
 = None , 
sub_xindex
 = None , 
yindex
 = None , 
samp_index
 = None , 
sub_samp_index
 = None , 
TF_state
 = None , 
resizeDim
 = None ) :

32 if ( 
TF_state
 == 0 ) :

34 
	=storedArray
 [ : , 
yindex
 [ 0 ] , : , : ] = 
inputarray

36 if ( 
TF_state
 == 1 ) :

38 
	=storedArray
 [ 
sub_xindex
 : 
sub_xindex
 + 
resizeDim
 [ 0 ] , 
yindex
 , : , : ] = 
inputarray

40 elif ( 
TF_state
 == 2 ) :

42 
	=storedArray
 [ 
xindex
 , 
yindex
 , : , : ] = 
inputarray

44 elif ( 
TF_state
 == 3 ) :

46 
	=storedArray
 [ 
xindex
 , 
yindex
 , 
sub_samp_index
 : 
sub_samp_index
 + 
resizeDim
 [ - 2 ] , : ] = 
inputarray
 
	}

49 def 
	$put_in_Display
 ( 
storedArray
 , 
inputarray
 , 
xindex
 = None , 
sub_xindex
 = None , 
yindex
 = None , 
samp_index
 = None , 
sub_samp_index
 = None , 
TF_state
 = None , 
resizeDim
 = None ) :

55 if ( 
TF_state
 == 0 ) :

57 
	=storedArray
 [ : , 
yindex
 [ 0 ] , : ] = 
inputarray

59 if ( 
TF_state
 == 1 ) :

61 
	=storedArray
 [ 
sub_xindex
 : 
sub_xindex
 + 
resizeDim
 [ 0 ] , 
yindex
 , : ] = 
inputarray

63 elif ( 
TF_state
 == 2 ) :

65 
	=storedArray
 [ 
xindex
 , 
yindex
 , : ] = 
inputarray

67 elif ( 
TF_state
 == 3 ) :

69 
	=storedArray
 [ 
xindex
 , 
yindex
 , : ] = 
inputarray
 
	}

77 
	=mk
 = 
sim_data
 . 
make_pk

79 
	=TF_I
 = 
CCNT_test
 . 
TF_index

82 def 
	$runTest
 ( ) :

85 
	=pF
 = 100

86 
	=pS
 = 10

87 
	=samp
 = 2

88 
	=CH
 = 2

93 
	=TF
 , 
	=TF_state
 , 
	=pF
 , 
	=pS
 , 
	=samp
 , 
	=CCNT
 , 
	=resizeDim
 = 
CCNT_test
 . 
	`set_CCNT
 ( 
pF
 = 
pF
 , 
pS
 = 
pS
 , 
CH
 = 
CH
 , 
samp
 = 
samp
 )

97 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
pF
 , 
pS
 , 
samp
 , 
CH
 ] , 
numpy
 . 
int32
 )

98 print "storedARRay" , 
storedArray
 . 
shape

99 print "resizeDIM" , 
resizeDim

100 print "CCNT" , 
CCNT

104 for 
i
 in 
	`range
 ( 
TF
 ) :

106 
	=test_packet
 = 
	`mk
 ( 
CCNT
 , 
samp
 , 
CH
 , 
TF_state
 = 
TF_state
 )

109 
	`test_scanSize
 ( 
TF
 , 
pF
 , 
pS
 , 
samp
 , 
CH
 , 
resizeDim
 )

112 
	=test_data
 = 
sim_data
 . 
	`test_reshape
 ( 
test_packet
 , 
CCNT
 , 
samp
 , 
CH
 , 
TF_state
 = 
TF_state
 )

115 
	=xindex
 , 
	=sub_xindex
 , 
	=yindex
 , 
	=samp_index
 , 
	=sub_samp_index
 = 
	`TF_I
 ( 
TF
 , 
TF_state
 , 
pF
 = 
pF
 , 
pS
 = 
pS
 , 
samp
 = 
samp
 , 
CCNT
 = 
CCNT
 , 
header
 = ( 
i
 + 1 ) , 
resizeDim
 = 
resizeDim
 )

120 
	`put_inP
 ( 
storedArray
 , ( ( 
test_data
 + 1 ) * 
yindex
 ) , 
xindex
 , 
sub_xindex
 , 
yindex
 , 
samp_index
 , 
sub_samp_index
 , 
TF_state
 )

121 for 
k
 in 
	`range
 ( 
CH
 ) :

123 print 
storedArray
 [ : , : , : , 
k
 ] . 
	`mean
 ( )

124 
pylab
 . 
	`imshow
 ( 
storedArray
 [ : , : , 0 , 
k
 ] )

125 
pylab
 . 
	`colorbar
 ( )

126 
pylab
 . 
	`show
 ( )

129 print "YUSS" 
	}

131 if 
__name__
 == "__main__" :

133 
	`runTest
 ( )


	@./Mighty_qt_designer.py

2 from 
	~__future__
 import 
with_statement

3 import 
	~sys

4 import 
	~os

5 
	=CWD
 = 
os
 . 
	`getcwd
 ( )

6 
	=PWD
 = 
os
 . 
pardir

7 
sys
 . 
path
 . 
	`append
 ( 
CWD
 + '/proto_Code' )

8 
sys
 . 
path
 . 
	`append
 ( 
CWD
 )

9 
sys
 . 
path
 . 
	`append
 ( 
PWD
 )

12 import 
	~os.path

14 from 
	~src
 import 
pyqtgraph
 as 
pg

15 import 
	~numpy

16 import 
	~scipy

17 import 
	~scipy.ndimage

18 import 
	~h5py

19 import 
	~Mfigure

20 import 
	~math

21 import 
	~pylab

24 import 
	~time

26 import 
	~EbicDataManager

28 import 
	~scanUpdate
 , 
	~edm

29 import 
	~thread
 , 
	~Queue

30 import 
	~config

31 import 
	~scanobject

32 import 
	~Mfigure

34 import 
	~numpy

35 import 
	~tracker

37 from 
	~scipy
 import 
mgrid

38 from 
	~time
 import 
strftime

39 from 
	~Mexport
 import 
Exporter

40 import 
	~socket

41 import 
	~pyQtWindow

42 from 
	~src
 import 
pyqtgraph
 as 
pg

43 import 
	~SetV

45 
	=IP
 = "10.0.1.8"

46 
	=PORT
 = 9930

55 import 
	~numpy
 as 
np

59 import 
	~sys

62 from 
	~PyQt4
 import 
QtCore

64 from 
	~PyQt4
 import 
QtGui

67 from 
	~qtdesigner
 import 
Ui_MplMainWindow

70 import 
	~profileUI

72 import 
	~rCenSliceUI

76 class 
	cDesignerMainWindow
 ( 
QtGui
 . 
QMainWindow
 , 
Ui_MplMainWindow
 ) :

78 def 
	$__init__
 ( 
self
 , 
parent
 = None ) :

80 
	`super
 ( 
DesignerMainWindow
 , 
self
 ) . 
	`__init__
 ( 
parent
 )

82 
self
 . 
	`setupUi
 ( 
self
 )

83 
self
 . 
	=startpoint
 = None

84 
self
 . 
	=endpoint
 = None

85 
self
 . 
	=sliceData
 = None

86 
self
 . 
	=channelMask
 = 0b000000

87 
self
 . 
	`setStep
 ( 0 )

88 
self
 . 
	`setDelay
 ( )

89 
self
 . 
	=CH
 = 0

90 
self
 . 
	`setSamplesPerPoint
 ( 1 )

91 
self
 . 
	=channel
 = [ 0 ]

92 
self
 . 
	=scanMag
 = None

93 
self
 . 
	=Dx
 = None

94 
self
 . 
	=Dy
 = None

95 
self
 . 
	=pointsV
 = None

96 
self
 . 
	=pointsH
 = None

97 
self
 . 
	=progress
 = [ 0.0 ]

100 
self
 . 
ColorMap
 . 
	`addItems
 ( 
pylab
 . 
cm
 . 
_cmapnames
 )

101 
self
 . 
	=Oversampling
 = [ 0 , 2 , 4 , 8 , 16 , 32 , 64 ]

102 
self
 . 
	=OS
 = 0

104 
self
 . 
	=cal
 = 
config
 . 
	`getCalibration
 ( )

105 
self
 . 
	=vMagScale
 = 
self
 . 
cal
 [ 'vMagScale' ]

106 
self
 . 
	=hMagScale
 = 
self
 . 
cal
 [ 'hMagScale' ]

107 print 
self
 . 
vMagScale
 , 
self
 . 
hMagScale

108 
self
 . 
	=vMin
 = 
self
 . 
cal
 [ 'vMin' ]

109 
self
 . 
	=hMin
 = 
self
 . 
cal
 [ 'hMin' ]

110 
self
 . 
	=hMax
 = 
self
 . 
cal
 [ 'hMax' ]

111 
self
 . 
	=vMax
 = 
self
 . 
cal
 [ 'hMax' ]

112 
self
 . 
	=hSpread
 = 
self
 . 
vMax
 - 
self
 . 
vMin

113 
self
 . 
	=vSpread
 = 
self
 . 
hMax
 - 
self
 . 
hMin

114 
self
 . 
	=cmap
 = 
pylab
 . 
cm
 . 
Greys_r

116 
self
 . 
	=channelUnits
 = [ '' , '' , '' , '' , '' , '' ]

117 
self
 . 
	=channelGain
 = [ '' , '' , '' , '' , '' , '' ]

118 
self
 . 
	=channelLabel
 = [ '' , '' , '' , '' , '' , '' ]

120 
self
 . 
	=mag
 = None

121 
self
 . 
	=accel
 = None

122 
self
 . 
	=beam
 = None

123 
self
 . 
	=ui_tracker
 = 
tracker
 . 
	`GuiTracker
 ( 
self
 )

124 
self
 . 
	=scanTracker
 = 
tracker
 . 
	`ScanTracker
 ( 
self
 )

125 
self
 . 
	=scans
 = 
self
 . 
scanTracker
 . 
scans

127 
self
 . 
	=scan
 = None

129 
self
 . 
	=iv_tracker
 = 
tracker
 . 
	`IVTracker
 ( 
self
 )

131 
self
 . 
	=view
 = 
pyQtWindow
 . 
	`CustomViewBox
 ( 
lockAspect
 = True , 
invertY
 = False , 
invertX
 = False )

132 
self
 . 
IView
 . 
	`setCentralItem
 ( 
self
 . 
view
 )

136 
self
 . 
	=Xhair
 = 
pyQtWindow
 . 
	`CrossHairs
 ( 
self
 . 
view
 , 1.0 )

137 
self
 . 
	=pyROI
 = 
pyQtWindow
 . 
	`ROI_Rec
 ( 
self
 . 
view
 , 1.0 )

138 
self
 . 
	=pyLine
 = 
pyQtWindow
 . 
	`LineSeg
 ( 
self
 . 
view
 , 1.0 )

139 
self
 . 
	=img
 = 
pg
 . 
	`ImageItem
 ( )

140 
self
 . 
view
 . 
	`addItem
 ( 
self
 . 
img
 )

141 
self
 . 
	=scale
 = 1e-6

145 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
mplactionOpen
 , 
QtCore
 . 
	`SIGNAL
 ( 'triggered()' ) , 
self
 . 
select_file
 )

146 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
mplactionQuit
 , 
QtCore
 . 
	`SIGNAL
 ( 'triggered()' ) , 
QtGui
 . 
qApp
 , 
QtCore
 . 
	`SLOT
 ( "quit()" ) )

147 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
getBounds_pushButton
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
ui_tracker
 . 
getBounds
 )

148 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SaveButton
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
save
 )

149 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
Channel
 , 
QtCore
 . 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
setChannel
 )

150 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
analysisCh
 , 
QtCore
 . 
	`SIGNAL
 ( "currentChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
activeChannel
 )

151 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
OScomboBox
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_OS
 )

156 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
enCh1
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
setMask
 )

157 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
enCh2
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
setMask
 )

158 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
enCh3
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
setMask
 )

159 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
enCh4
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
setMask
 )

160 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
enCh5
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
setMask
 )

161 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
enCh6
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
setMask
 )

164 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ScanSize
 , 
QtCore
 . 
	`SIGNAL
 ( "activated(int)" ) , 
self
 . 
setStep
 )

167 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SamplesPerPoint
 , 
QtCore
 . 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
setSamplesPerPoint
 )

170 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
Delay
 , 
QtCore
 . 
	`SIGNAL
 ( "textChanged(QString)" ) , 
self
 . 
setDelay
 )

171 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
Mag
 , 
QtCore
 . 
	`SIGNAL
 ( "textChanged(QString)" ) , 
self
 . 
setMag
 )

172 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
dxMicrons
 , 
QtCore
 . 
	`SIGNAL
 ( "textChanged(QString)" ) , 
self
 . 
setDx
 )

176 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
Scan
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
startScan
 )

177 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SetAux1
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
setAux1
 )

178 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SetAux2
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
setAux2
 )

181 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
updateROI
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
update_scan_ROI
 )

182 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SaveScan
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
saveScanObject
 )

183 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
calBounds
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
getCalBounds
 )

184 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
imageBounds
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
getImageBounds
 )

185 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
writeCalibration
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
calibration
 )

186 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
CalScan
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
runCalScan
 )

188 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
Sweep
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
takeIV
 )

189 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SaveSweep
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
saveTransport
 )

190 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
TestProfile
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
test_profile_line
 )

191 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotScansCombo
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_active_scan
 )

192 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SwapAxes
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
swap_axes
 )

193 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
FlipLR
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
flip_lr
 )

194 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
FlipUD
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
flip_ud
 )

197 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ShowSlice
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
startRCSlice
 )

205 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
AddPlotScan
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
add_image
 )

206 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
RemovePlot
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
remove_from_plot
 )

207 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ColorMap
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
change_cmap
 )

208 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
AddSubPlot
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
add_subplot
 )

209 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SubPlotComobo
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_sub_index
 )

210 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
AxisCombo
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_axis_index
 )

211 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
AddPlotProfile
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
add_line
 )

212 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
AddAxis
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
add_ax
 )

213 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ColorBar
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
add_colorbar
 )

214 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotScansComboCH
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_plot_scan_ch
 )

215 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotProfileComboCH
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_profile_ch
 )

216 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotScansSpinAlpha
 , 
QtCore
 . 
	`SIGNAL
 ( "valueChanged(double)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_plot_scan_alpha
 )

217 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotProfileAlpha
 , 
QtCore
 . 
	`SIGNAL
 ( "valueChanged(double)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_profile_alpha
 )

218 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotProfileCombo
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_profile_index
 )

219 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SliderVmin
 , 
QtCore
 . 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
update_clim
 )

220 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
SliderVmax
 , 
QtCore
 . 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
update_clim
 )

221 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
reverse
 , 
QtCore
 . 
	`SIGNAL
 ( "stateChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
reverse_cmap
 )

227 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
TransportcomboBox
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
iv_tracker
 . 
set_active_iv
 )

228 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
PlotTrans
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
iv_tracker
 . 
plot_active_IV
 )

229 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ExportTransPort
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
iv_tracker
 . 
export_active_IV
 )

233 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ExportScan
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
export_scan
 )

234 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ExportProfile_2
 , 
QtCore
 . 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
export_profile
 )

237 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ActivePlotsCombo
 , 
QtCore
 . 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
scanTracker
 . 
figTracker
 . 
set_active_plots_index
 )

241 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
CrossHair
 , 
QtCore
 . 
	`SIGNAL
 ( "toggled(bool)" ) , 
self
 . 
setXhair
 )

242 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
Line
 , 
QtCore
 . 
	`SIGNAL
 ( "toggled(bool)" ) , 
self
 . 
setLine
 )

243 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
ROI
 , 
QtCore
 . 
	`SIGNAL
 ( "toggled(bool)" ) , 
self
 . 
setROI
 ) 
	}

245 def 
	$update_OS
 ( 
self
 , 
value
 ) :

246 
self
 . 
	=OS
 = 
	`int
 ( 
self
 . 
Oversampling
 [ 
	`int
 ( 
value
 ) ] )

247 print "Oversampling :" , 
self
 . 
OS
 
	}

251 def 
	$setXhair
 ( 
self
 ) :

252 print 
self
 . 
CrossHair
 . 
	`isChecked
 ( )

253 if 
self
 . 
CrossHair
 . 
	`isChecked
 ( ) :

254 
self
 . 
Xhair
 . 
	`show
 ( )

256 
self
 . 
Xhair
 . 
	`hide
 ( )

257 print ( "hiiii" ) 
	}

260 def 
	$setROI
 ( 
self
 ) :

261 if 
self
 . 
ROI
 . 
	`isChecked
 ( ) :

262 
self
 . 
pyROI
 . 
	`show
 ( )

264 
self
 . 
pyROI
 . 
	`hide
 ( ) 
	}

266 def 
	$setLine
 ( 
self
 ) :

267 print 
self
 . 
Line
 . 
	`isChecked
 ( ) , 'hiiiii'

268 if 
self
 . 
Line
 . 
	`isChecked
 ( ) :

269 
self
 . 
pyLine
 . 
	`show
 ( )

271 
self
 . 
pyLine
 . 
	`hide
 ( ) 
	}

276 def 
	$select_file
 ( 
self
 ) :

279 
	=file
 = 
QtGui
 . 
QFileDialog
 . 
	`getOpenFileName
 ( )

282 if 
file
 :

283 
self
 . 
	=filename
 = 
	`str
 ( 
file
 )

284 
self
 . 
	`openScan
 ( ) 
	}

286 def 
	$openScan
 ( 
self
 ) :

287 if 
self
 . 
filename
 . 
	`endswith
 ( '.npz' ) :

288 
self
 . 
	=analysisScan
 = 
numpy
 . 
	`load
 ( 
self
 . 
filename
 )

289 
self
 . 
	`loadScan
 ( )

291 elif 
self
 . 
filename
 . 
	`endswith
 ( '.scan' ) :

292 
self
 . 
scans
 . 
	`append
 ( 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( 
self
 . 
filename
 ) )

293 
	=tempname
 = 
self
 . 
filename
 [ 
self
 . 
filename
 . 
	`rfind
 ( '/' ) : ]

294 if 
self
 . 
scans
 [ - 1 ] . 
name
 == 'test' :

295 
self
 . 
scans
 [ - 1 ] . 
	=name
 = 
tempname

296 
self
 . 
ScanCombo
 . 
	`addItem
 ( 
tempname
 )

297 
self
 . 
PlotScansCombo
 . 
	`addItem
 ( 
tempname
 )

298 
self
 . 
scanTracker
 . 
	`display_scan
 ( 
	`len
 ( 
self
 . 
scans
 ) - 1 )

299 
self
 . 
	`update_plots_info
 ( )

300 
self
 . 
	=startpoint
 = None

301 
self
 . 
	=endpoint
 = None

302 elif 
self
 . 
filename
 . 
	`endswith
 ( '.iv' ) :

303 
	=tempname
 = 
self
 . 
filename
 [ 
self
 . 
filename
 . 
	`rfind
 ( '/' ) : ]

304 
self
 . 
iv_tracker
 . 
	`add_iv
 ( 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( 
self
 . 
filename
 ) , 
name
 = 
tempname
 )

305 print 'ends with .iv' 
	}

309 def 
	$update_plots_info
 ( 
self
 ) :

310 
self
 . 
	`update_view_Ch_index
 ( 
self
 . 
scanTracker
 . 
activeScan
 , 
self
 . 
PlotScansComboCH
 )

311 
self
 . 
	`update_view_Ch_index
 ( 
self
 . 
scanTracker
 . 
activeScan
 , 
self
 . 
PlotProfileComboCH
 )

312 
	=prof
 = 
	`len
 ( 
self
 . 
scanTracker
 . 
activeScan
 . 
profiles
 )

313 
self
 . 
PlotProfileCombo
 . 
	`clear
 ( )

314 if 
prof
 != 0 :

315 for 
i
 in 
	`range
 ( 0 , 
prof
 ) :

316 
self
 . 
PlotProfileCombo
 . 
	`addItem
 ( 
self
 . 
scanTracker
 . 
activeScan
 . 
profiles
 [ 
i
 ] . 
name
 ) 
	}

318 def 
	$update_view_Ch_index
 ( 
self
 , 
scan
 , 
combo
 ) :

319 
combo
 . 
	`clear
 ( )

320 for 
i
 in 
	`range
 ( 0 , 
scan
 . 
channelCount
 ) :

321 
combo
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) ) 
	}

324 def 
	$update_active_scan
 ( 
self
 , 
value
 ) :

325 
self
 . 
scanTracker
 . 
	`display_scan
 ( 
value
 )

326 
self
 . 
	`update_plots_info
 ( ) 
	}

328 def 
	$swap_axes
 ( 
self
 ) :

329 
scanobject
 . 
scanObjectUtils
 . 
	`swap_scan_axes
 ( 
self
 . 
scanTracker
 . 
activeScan
 )

330 
self
 . 
scanTracker
 . 
activeScan
 . 
	=figures
 = None

331 
self
 . 
scanTracker
 . 
	`display_scan
 ( ) 
	}

333 def 
	$flip_lr
 ( 
self
 ) :

334 
scanobject
 . 
scanObjectUtils
 . 
	`flip_scan_lr
 ( 
self
 . 
scanTracker
 . 
activeScan
 )

335 
self
 . 
scanTracker
 . 
activeScan
 . 
	=figures
 = None

337 
self
 . 
scanTracker
 . 
	`display_scan
 ( ) 
	}

339 def 
	$flip_ud
 ( 
self
 ) :

340 
scanobject
 . 
scanObjectUtils
 . 
	`flip_scan_ud
 ( 
self
 . 
scanTracker
 . 
activeScan
 )

341 
self
 . 
scanTracker
 . 
activeScan
 . 
	=figures
 = None

343 
self
 . 
scanTracker
 . 
	`display_scan
 ( ) 
	}

347 def 
	$export_scan
 ( 
self
 ) :

348 
	=scan
 = 
self
 . 
scanTracker
 . 
activeScan

349 
	=ch_index
 = 
self
 . 
PlotScansComboCH
 . 
	`currentIndex
 ( )

350 
	=display_scan
 = 
scan
 . 
DisplayArray
 [ : , : , 
ch_index
 ]

351 
	=export
 = 
	`Exporter
 ( )

352 
	=header
 = 
export
 . 
	`make_header
 ( 
scan
 , 
ch_index
 )

353 
	=name
 = '../data/' + 
scan
 . 
name
 + 'scan_ch' + 
	`str
 ( 
ch_index
 )

354 
export
 . 
	`export_csv
 ( 
name
 = 
name
 , 
header
 = 
header
 , 
data
 = 
display_scan
 ) 
	}

356 def 
	$export_profile
 ( 
self
 ) :

357 
	=scan_name
 = 
self
 . 
scanTracker
 . 
activeScan
 . 
name

358 
	=profile_index
 = 
self
 . 
PlotProfileCombo
 . 
	`currentIndex
 ( )

359 
	=profile
 = 
self
 . 
scanTracker
 . 
activeScan
 . 
profiles
 [ 
profile_index
 ]

360 
	=ch_index
 = 
self
 . 
PlotProfileComboCH
 . 
	`currentIndex
 ( )

361 
	=data
 = [ 
profile
 . 
profileDataAvg
 [ : , 
ch_index
 ] , 
profile
 . 
Xposition
 ]

362 
	=export
 = 
	`Exporter
 ( )

363 
	=header
 = 
export
 . 
	`make_header
 ( 
profile
 , 
ch_index
 )

364 
	=name
 = '../data/' + 
scan_name
 + 
profile
 . 
name
 + 'scan_ch' + 
	`str
 ( 
ch_index
 )

365 
export
 . 
	`export_csv
 ( 
name
 = 
name
 , 
header
 = 
header
 , 
data
 = 
data
 ) 
	}

388 def 
	$getCalBounds
 ( 
self
 ) :

392 
self
 . 
	=startH
 , 
self
 . 
	=startV
 , 
self
 . 
	=endH
 , 
self
 . 
	=endV
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
viewLim
 . 
bounds

393 
self
 . 
calBoundsDislpay
 . 
	`setText
 ( '[' + '{0:0.2f}' . 
	`format
 ( 
self
 . 
startH
 ) + ',' + '{0:0.2f}' . 
	`format
 ( 
self
 . 
startV
 ) + ']['

394 + '{0:0.2f}' . 
	`format
 ( 
self
 . 
endH
 ) + ',' + '{0:0.2f}' . 
	`format
 ( 
self
 . 
endV
 ) + ']' ) 
	}

396 def 
	$getImageBounds
 ( 
self
 ) :

401 
self
 . 
	=minH
 , 
self
 . 
	=minV
 , 
self
 . 
	=maxH
 , 
self
 . 
	=maxV
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
viewLim
 . 
bounds

402 
self
 . 
imageBoundDisplay
 . 
	`setText
 ( '[' + '{0:0.2f}' . 
	`format
 ( 
self
 . 
minH
 ) + ',' + '{0:0.2f}' . 
	`format
 ( 
self
 . 
minV
 ) + ']['

403 + '{0:0.2f}' . 
	`format
 ( 
self
 . 
maxH
 ) + ',' + '{0:0.2f}' . 
	`format
 ( 
self
 . 
maxV
 ) + ']' ) 
	}

406 def 
	$calibration
 ( 
self
 ) :

408 
	=testMag
 = 
	`float
 ( 
	`str
 ( 
self
 . 
Mag
 . 
	`text
 ( ) ) )

411 
	=vMin
 = 
	`int
 ( 
self
 . 
vMin
 + 
self
 . 
minV
 * 
self
 . 
stepSize
 )

413 
	=vMax
 = 
	`int
 ( 
self
 . 
vMin
 + 
self
 . 
maxV
 * 
self
 . 
stepSize
 )

414 
	=hMin
 = 
	`int
 ( 
self
 . 
hMin
 + 
self
 . 
minH
 * 
self
 . 
stepSize
 )

415 
	=hMax
 = 
	`int
 ( 
self
 . 
hMin
 + 
self
 . 
minH
 * 
self
 . 
stepSize
 )

417 
	=distanceH
 = 
	`float
 ( 
	`str
 ( 
self
 . 
hDistance
 . 
	`text
 ( ) ) )

418 
	=distanceV
 = 
	`float
 ( 
	`str
 ( 
self
 . 
vDistance
 . 
	`text
 ( ) ) )

419 print 
distanceV

420 print 
distanceH

422 
	=pointsH
 = 
self
 . 
endH
 - 
self
 . 
startH

423 
	=pointsV
 = 
self
 . 
endV
 - 
self
 . 
startV

425 
self
 . 
	=cal
 = 
config
 . 
	`setCalibration
 ( 
testmag
 = 
testMag
 , 
testStepSizeH
 = 
self
 . 
stepSize
 , 
testStepSizeV
 = 
self
 . 
stepSize

426 , 
knownDistanceH
 = 
distanceH
 , 
knownDistanceV
 = 
distanceV
 , 
pointsH
 = 
pointsH

427 , 
pointsV
 = 
pointsV
 )

430 
self
 . 
	=vExtent
 = 
self
 . 
cal
 [ 'vMagScale' ]

431 
self
 . 
	=hExtent
 = 
self
 . 
cal
 [ 'hMagScale' ]

432 
self
 . 
	=vMin
 = 
self
 . 
cal
 [ 'vMin' ]

433 
self
 . 
	=hMin
 = 
self
 . 
cal
 [ 'hMin' ]

434 
self
 . 
	=hMax
 = 
self
 . 
cal
 [ 'hMax' ]

435 
self
 . 
	=vMax
 = 
self
 . 
cal
 [ 'hMax' ] 
	}

438 def 
	$runCalScan
 ( 
self
 ) :

443 
self
 . 
	=extent
 = ( 0 , 
self
 . 
xpoints
 , 0 , 
self
 . 
ypoints
 )

444 
self
 . 
	=hMin
 = - 0x7fff

445 
self
 . 
	=vMin
 = - 0x7fff

446 
	=spread
 = 
self
 . 
stepSize
 * 
self
 . 
xpoints

448 
self
 . 
	`takeChannelUnits
 ( )

449 
	=units
 = 
self
 . 
channelUnits

451 
self
 . 
	`takeChannelLabels
 ( )

452 
	=labels
 = 
self
 . 
channelLabel

454 
self
 . 
	`takeChannelGain
 ( )

455 
	=gain
 = 
self
 . 
channelGain

457 
self
 . 
	=mag
 = 
	`str
 ( 
self
 . 
Mag
 . 
	`text
 ( ) )

458 
	=mag
 = 
self
 . 
mag

460 
self
 . 
	=scanState
 = 
scanobject
 . 
Scan
 . 
	`setup_scan_state
 ( 
stepH
 = 
self
 . 
stepSize
 , 
stepV
 = 
self
 . 
stepSizeV

461 , 
pointsH
 = 
self
 . 
xpoints
 , 
pointsV
 = 
self
 . 
ypoints

462 , 
spread
 = [ 
spread
 , 
spread
 ] , 
offsets
 = [ 0 , 0 ] , 
channelMask
 = 
self
 . 
channelMask

463 , 
delay
 = 
self
 . 
delay
 , 
units
 = 
units
 , 
labels
 = 
labels
 , 
gain
 = 
gain

464 , 
samples
 = 
self
 . 
samplesPerPoint
 , 
bounds
 = [ 
self
 . 
hMin
 , 
self
 . 
vMin
 ]

465 , 
mag
 = 
self
 . 
scanMag
 )

466 
self
 . 
	=scanObject
 = 
scanobject
 . 
	`Scan
 ( 
scanstate
 = 
self
 . 
scanState
 )

468 
self
 . 
	=displayArray
 = [ None ]

469 
self
 . 
	=progress
 = [ None ]

470 
self
 . 
	=scanFlag
 = [ False ]

471 
self
 . 
	=scanData
 = [ None ]

472 print 
self
 . 
scanState
 . 
	`setupTuple
 ( )

474 
self
 . 
	=q
 = 
Queue
 . 
	`Queue
 ( )

476 
self
 . 
	=sockQ
 = 
edm
 . 
	`socket_to_queue
 ( 
self
 . 
q
 )

478 
self
 . 
sockQ
 . 
	`start
 ( )

481 
self
 . 
	=edm
 = 
edm
 . 
	`Edm
 ( 
self
 . 
displayArray
 , 
self
 . 
scanFlag
 , 
self
 . 
progress
 , 
self
 . 
scanData
 ,

482 
self
 . 
scanState
 , 
self
 . 
scanObject
 , 
OS
 = 
self
 . 
OS
 , 
sockQ
 = 
self
 . 
sockQ
 , 
q
 = 
self
 . 
q
 )

483 
self
 . 
edm
 . 
	`start
 ( )

485 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

486 
sock
 . 
	`connect
 ( ( 
IP
 , 
PORT
 ) )

488 
sock
 . 
	`send
 ( 
self
 . 
edm
 . 
sdm
 . 
res
 )

489 
sock
 . 
	`close
 ( )

491 
self
 . 
	=scan
 = 
scanUpdate
 . 
	`ScanUpdate
 ( 
self
 . 
mpl
 , 
self
 . 
IView
 , 
self
 . 
displayArray
 , 
self
 . 
channel
 , 
self
 . 
scanFlag
 , 
self
 . 
scanObject
 . 
displayExtent
 )

492 
self
 . 
scan
 . 
	`start
 ( ) """\n	#Reference for calibration scan\n        self.displayArray=[None]\n        self.progress = [None]\n        self.scanFlag = [False]\n        self.scanData = [None]\n        print self.scanState.setupTuple()\n        \n        #(self, displayArray, scanFlag, progress, scanData, scanConfig)    \n        self.edm = edm.Edm(self.displayArray, self.scanFlag, self.progress, self.scanData, self.scanState, self.scanObject, OS = self.OS) #ScanObject\n        #self.edm = edm.Edm([None], [False], [None], [None], scanConfig)\n        self.edm.start()\n\n	#TODO SEND COMMAND to start Scan\n	#needs to be configured then it should go here\n  	sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, 0)\n  	sock.connect((IP, PORT))\n\n  	sock.send(self.edm.sdm.res)\n  	sock.close()\n\n        #(self, mpl, displayArray, channel, scanFlag)\n        self.scan = scanUpdate.ScanUpdate(self.mpl, self.displayArray,self.channel, self.scanFlag, self.scanObject.displayExtent)\n        self.scan.start()\n\n\n\n	"""

520 
	}

526 def 
	$setThreshold
 ( 
self
 , 
value
 ) :

527 
self
 . 
	=thresholdValue
 = 
	`int
 ( 
value
 ) 
	}

531 def 
	$test_profile_line
 ( 
self
 ) :

535 
self
 . 
	=tempDialog
 = 
profileUI
 . 
	`ProfileUI
 ( 
scan
 = 
self
 . 
scanTracker
 . 
activeScan
 , 
callback
 = 
self
 . 
update_plots_info
 )

536 
self
 . 
tempDialog
 . 
	`show
 ( )

537 
self
 . 
tempDialog
 . 
widget
 . 
canvas
 . 
	`oneSubPlot
 ( )

538 
self
 . 
	=activeLine
 = 
Mfigure
 . 
	`ProfileLine
 ( 
canvas
 = 
self
 . 
scanTracker
 . 
figTracker
 . 
activeCh
 . 
canvas

539 , 
ax
 = 
self
 . 
scanTracker
 . 
figTracker
 . 
activeCh
 . 
canvas
 . 
ax
 , 
callback
 = 
self
 . 
temp_profile
 ) 
	}

541 def 
	$temp_profile
 ( 
self
 ) :

545 
self
 . 
	=temp_Profile
 = None

546 
self
 . 
tempDialog
 . 
widget
 . 
canvas
 . 
ax
 . 
	`clear
 ( )

547 
	=temp_Profile
 = 
scanobject
 . 
	`Profile
 ( None , 
self
 . 
activeLine
 . 
startpoint
 . 
	`get_offsets
 ( ) [ 0 ]

548 , 
self
 . 
activeLine
 . 
endpoint
 . 
	`get_offsets
 ( ) [ 0 ] , 
self
 . 
scanTracker
 . 
activeScan
 )

549 
self
 . 
tempDialog
 . 
	`set_tempprofile
 ( 
temp_Profile
 )

550 
self
 . 
tempDialog
 . 
	`plot_profile
 ( ) 
	}

555 def 
	$startRCSlice
 ( 
self
 ) :

556 
self
 . 
	=tempSlice
 = 
rCenSliceUI
 . 
	`ReCenterSliceUI
 ( 
scan
 = 
self
 . 
scanTracker
 . 
activeScan
 , 
callback
 = None , 
mainUI
 = 
self
 )

557 
self
 . 
tempSlice
 . 
	`show
 ( )

558 
self
 . 
tempSlice
 . 
widget
 . 
canvas
 . 
	`oneSubPlot
 ( ) 
	}

569 def 
	$setChannel
 ( 
self
 , 
value
 ) :

570 
self
 . 
	=channel
 [ 0 ] = 
	`int
 ( 
value
 )

571 print "channel :" , 
self
 . 
channel
 
	}

581 def 
	$setMask
 ( 
self
 ) :

582 
self
 . 
	=channelMask
 = ( 
	`int
 ( 
self
 . 
enCh1
 . 
	`isChecked
 ( ) ) << 0 | 
	`int
 ( 
self
 . 
enCh2
 . 
	`isChecked
 ( ) ) << 1

583 | 
	`int
 ( 
self
 . 
enCh3
 . 
	`isChecked
 ( ) ) << 2 | 
	`int
 ( 
self
 . 
enCh4
 . 
	`isChecked
 ( ) ) << 3

584 | 
	`int
 ( 
self
 . 
enCh5
 . 
	`isChecked
 ( ) ) << 4 | 
	`int
 ( 
self
 . 
enCh6
 . 
	`isChecked
 ( ) ) << 5 )

586 print ( 
	`str
 ( 
	`bin
 ( 
self
 . 
channelMask
 ) ) ) 
	}

592 def 
	$setStep
 ( 
self
 , 
value
 , 
stepV
 = 255 , 
stepH
 = 255 ) :

593 
	=stepIndex
 = 8 + 
value

594 
self
 . 
	=stepSize
 = 2 ** 16 / 2 ** 
stepIndex
 - 1

595 
self
 . 
	=stepSizeV
 = 2 ** 16 / 2 ** 
stepIndex
 - 1

596 
self
 . 
	=xpoints
 = 2 ** 
stepIndex
 - 1

597 
self
 . 
	=ypoints
 = 2 ** 
stepIndex
 - 1

598 print ( 
self
 . 
xpoints
 )

599 print ( 
self
 . 
ypoints
 ) 
	}

602 def 
	$setSamplesPerPoint
 ( 
self
 , 
value
 ) :

603 
self
 . 
	=samplesPerPoint
 = 
	`int
 ( 
value
 )

604 print ( 
value
 ) 
	}

608 def 
	$setDelay
 ( 
self
 ) :

613 
self
 . 
	=delay
 = 
	`float
 ( 
	`str
 ( 
self
 . 
Delay
 . 
	`text
 ( ) ) )

614 print "delay is " , 
self
 . 
delay
 
	}

616 def 
	$setMag
 ( 
self
 ) :

620 if 
	`str
 ( 
self
 . 
Mag
 . 
	`text
 ( ) ) != '' :

621 
self
 . 
	=scanMag
 = 
	`float
 ( 
	`str
 ( 
self
 . 
Mag
 . 
	`text
 ( ) ) )

622 print "ScanMag = " , 
self
 . 
scanMag

624 if 
self
 . 
scanMag
 != None :

625 
self
 . 
	=scanScaleH
 = 
scanobject
 . 
Scan
 . 
	`scale
 ( 
self
 . 
hMagScale
 , 
self
 . 
scanMag
 )

626 
self
 . 
	=scanScaleV
 = 
scanobject
 . 
Scan
 . 
	`scale
 ( 
self
 . 
vMagScale
 , 
self
 . 
scanMag
 )

629 
self
 . 
	=extentH
 = 
self
 . 
hSpread
 * 
self
 . 
scanScaleH

630 
self
 . 
	=extentV
 = 
self
 . 
vSpread
 * 
self
 . 
scanScaleV

631 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`set_xbound
 ( 
lower
 = 0 , 
upper
 = 
self
 . 
extentH
 )

632 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`set_ybound
 ( 
lower
 = 0 , 
upper
 = 
self
 . 
extentV
 )

633 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`set_aspect
 ( 'equal' )

634 
self
 . 
mpl
 . 
canvas
 . 
	`draw
 ( )

635 
self
 . 
	`setDx
 ( ) 
	}

640 def 
	$setDx
 ( 
self
 ) :

644 if 
	`str
 ( 
self
 . 
dxMicrons
 . 
	`text
 ( ) ) != '' :

645 
self
 . 
	=Dx
 = 
	`float
 ( 
	`str
 ( 
self
 . 
dxMicrons
 . 
	`text
 ( ) ) )

646 
self
 . 
	=Dy
 = 
self
 . 
Dx

647 
self
 . 
	=scale
 = 
self
 . 
Dx
 * 1e-6

648 print "Scale " , 
self
 . 
scale

649 if 
self
 . 
scanMag
 != None :

650 
self
 . 
	=stepH
 = 
scanobject
 . 
Scan
 . 
	`step_from_distance
 ( 
self
 . 
Dx
 , 
self
 . 
scanScaleH
 )

651 
self
 . 
	=stepV
 = 
scanobject
 . 
Scan
 . 
	`step_from_distance
 ( 
self
 . 
Dy
 , 
self
 . 
scanScaleV
 )

652 print "stepH = " , 
self
 . 
stepH

653 
	=xdelta
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
viewLim
 . 
width

654 
self
 . 
	=extentH
 = 
scanobject
 . 
Scan
 . 
	`scale_extent
 ( 
	`abs
 ( 
xdelta
 ) , 
self
 . 
scanScaleH
 )

655 
self
 . 
	=pointsH
 , 
self
 . 
	=spreadH
 = 
scanobject
 . 
Scan
 . 
	`scan_points
 ( 
extent
 = 
self
 . 
extentH
 , 
step
 = 
self
 . 
stepH
 )

656 print "pointsH = " , 
self
 . 
pointsH
 , "spreadH" , 
self
 . 
spreadH

657 print "stepV = " , 
self
 . 
stepV

658 
	=ydelta
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
viewLim
 . 
height

659 
self
 . 
	=extentV
 = 
scanobject
 . 
Scan
 . 
	`scale_extent
 ( 
	`abs
 ( 
ydelta
 ) , 
self
 . 
scanScaleV
 )

660 
self
 . 
	=pointsV
 , 
self
 . 
	=spreadV
 = 
scanobject
 . 
Scan
 . 
	`scan_points
 ( 
extent
 = 
self
 . 
extentV
 , 
step
 = 
self
 . 
stepV
 )

661 print "pointsV = " , 
self
 . 
pointsV
 , "spreadV = " , 
self
 . 
spreadV

662 
self
 . 
	`get_offset
 ( )

663 
self
 . 
	`setROIdim
 ( ) 
	}

666 def 
	$setROIdim
 ( 
self
 ) :

667 if 
self
 . 
pointsH
 != None and 
self
 . 
pointsV
 != None :

668 
self
 . 
ROIdim
 . 
	`setText
 ( '[' + 
	`str
 ( 
self
 . 
pointsH
 ) + ',' + 
	`str
 ( 
self
 . 
pointsV
 ) + ']' ) 
	}

672 def 
	$setDy
 ( 
self
 ) :

676 if 
	`str
 ( 
self
 . 
dyMicrons
 . 
	`text
 ( ) ) != '' :

677 
self
 . 
	=Dy
 = 
	`float
 ( 
	`str
 ( 
self
 . 
dyMicrons
 . 
	`text
 ( ) ) )

678 if 
self
 . 
scanMag
 != None :

679 
self
 . 
	=stepV
 = 
scanobject
 . 
Scan
 . 
	`step_from_distance
 ( 
self
 . 
Dy
 , 
self
 . 
scanScaleV
 )

680 print "stepV = " , 
self
 . 
stepV

681 
	=ydelta
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
viewLim
 . 
height

682 
self
 . 
	=extentV
 = 
scanobject
 . 
Scan
 . 
	`scale_extent
 ( 
	`abs
 ( 
ydelta
 ) , 
self
 . 
scanScaleV
 )

683 
self
 . 
	=pointsV
 , 
self
 . 
	=spreadV
 = 
scanobject
 . 
Scan
 . 
	`scan_points
 ( 
extent
 = 
self
 . 
extentV
 , 
step
 = 
self
 . 
stepV
 )

684 print "pointsV = " , 
self
 . 
pointsV
 , "spreadV = " , 
self
 . 
spreadV

685 
self
 . 
	`get_offset
 ( )

686 
self
 . 
	`setROIdim
 ( ) 
	}

690 def 
	$get_offset
 ( 
self
 ) :

691 
	=offsets
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
viewLim
 . 
	`_get_p0
 ( )

692 
self
 . 
	=offsets
 = 
scanobject
 . 
scanObjectUtils
 . 
	`scale_size
 ( 
offsets
 , 
numpy
 . 
	`array
 ( [ 
self
 . 
scanScaleH
 , 
self
 . 
scanScaleV
 ] ) )

693 print "DAC offsets are:" , 
self
 . 
offsets

694 return 
self
 . 
offsets
 
	}

697 def 
	$update_scan_ROI
 ( 
self
 ) :

699 
self
 . 
	`setDx
 ( ) 
	}

702 def 
	$setAux1
 ( 
self
 ) :

704 
	=Aux1
 = 
self
 . 
Aux1Spin
 . 
	`value
 ( )

705 
	=vstep
 = 20.0 / 0xffff

706 
	=V
 = 
numpy
 . 
	`int16
 ( 
Aux1
 / 
vstep
 )

708 
SetV
 . 
	`SendV
 ( 
V1
 = 
V
 , 
CTRL
 = 0b01 )

709 
self
 . 
Aux1Value
 . 
	`setText
 ( 
	`str
 ( 
self
 . 
Aux1Spin
 . 
	`value
 ( ) ) ) 
	}

711 def 
	$setAux2
 ( 
self
 ) :

712 
	=Aux2
 = 
self
 . 
Aux2Spin
 . 
	`value
 ( )

713 
	=vstep
 = 20.0 / 0xffff

714 
	=V
 = 
numpy
 . 
	`int16
 ( 
Aux2
 / 
vstep
 )

716 
SetV
 . 
	`SendV
 ( 
V2
 = 
V
 , 
CTRL
 = 0b10 )

717 
self
 . 
Aux2Value
 . 
	`setText
 ( 
	`str
 ( 
self
 . 
Aux2Spin
 . 
	`value
 ( ) ) ) 
	}

720 def 
	$startScan
 ( 
self
 ) :

722 if 
self
 . 
scan
 != None :

723 
self
 . 
scan
 . 
	`terminate
 ( )

725 
self
 . 
	=scanBounds
 = ( 
	`tuple
 ( 
self
 . 
offsets
 ) , ( 
self
 . 
offsets
 [ 0 ] + 
self
 . 
spreadH
 , 
self
 . 
offsets
 [ 1 ] + 
self
 . 
spreadV
 ) )

727 
self
 . 
	`takeChannelUnits
 ( )

728 
	=units
 = 
self
 . 
channelUnits

730 
self
 . 
	`takeChannelLabels
 ( )

731 
	=labels
 = 
self
 . 
channelLabel

733 
self
 . 
	`takeChannelGain
 ( )

734 
	=gain
 = 
self
 . 
channelGain

736 
self
 . 
	=mag
 = 
	`str
 ( 
self
 . 
Mag
 . 
	`text
 ( ) )

737 
	=mag
 = 
self
 . 
mag

739 
self
 . 
	=beam
 = 
	`str
 ( 
self
 . 
BeamCurrent
 . 
	`text
 ( ) )

740 
	=beam
 = 
self
 . 
beam

742 
self
 . 
	=accel
 = 
	`str
 ( 
self
 . 
KV
 . 
	`text
 ( ) )

743 
	=accel
 = 
self
 . 
accel

745 
	=Notes
 = 
	`unicode
 ( 
self
 . 
Notes
 . 
	`toPlainText
 ( ) )

747 
	=SEMstate
 = 
	`dict
 ( [ ( 'beam' , 
beam
 ) , ( 'accel' , 
accel
 ) ] )

749 
	=channel
 = 
self
 . 
channelMask

751 
self
 . 
	=scanInfo
 = [ 
units
 , 
labels
 , 
gain
 , 
mag
 , 
accel
 , 
beam
 , 
channel
 ]

753 
self
 . 
	=scanState
 = 
scanobject
 . 
Scan
 . 
	`setup_scan_state
 ( 
stepH
 = 
self
 . 
stepH
 ,

754 
stepV
 = 
self
 . 
stepV
 , 
pointsH
 = 
self
 . 
pointsH
 , 
pointsV
 = 
self
 . 
pointsV
 ,

755 
spread
 = [ 
self
 . 
spreadH
 , 
self
 . 
spreadV
 ] , 
offsets
 = 
self
 . 
offsets
 , 
channelMask
 = 
self
 . 
channelMask

756 , 
units
 = 
units
 , 
labels
 = 
labels
 , 
gain
 = 
gain
 , 
delay
 = 
self
 . 
delay

757 , 
samples
 = 
self
 . 
samplesPerPoint
 , 
bounds
 = [ 
self
 . 
hMin
 , 
self
 . 
vMin
 ] , 
mag
 = 
self
 . 
scanMag
 )

760 
self
 . 
	=scanObject
 = 
scanobject
 . 
	`Scan
 ( 
bounds
 = 
self
 . 
scanBounds
 , 
scanstate
 = 
self
 . 
scanState
 ,

761 
cal
 = 
self
 . 
cal
 , 
name
 = 'test' , 
SEMstate
 = 
SEMstate
 , 
Notes
 = 
Notes
 )

764 
self
 . 
	=displayArray
 = [ None ]

765 
self
 . 
	=progress
 = [ 0.0 ]

766 
self
 . 
	=scanFlag
 = [ False ]

767 
self
 . 
	=scanData
 = [ None ]

768 print 
self
 . 
scanState
 . 
	`setupTuple
 ( )

770 
self
 . 
	=q
 = 
Queue
 . 
	`Queue
 ( )

772 
self
 . 
	=sockQ
 = 
edm
 . 
	`socket_to_queue
 ( 
self
 . 
q
 )

774 
self
 . 
sockQ
 . 
	`start
 ( )

777 
self
 . 
	=edm
 = 
edm
 . 
	`Edm
 ( 
self
 . 
displayArray
 , 
self
 . 
scanFlag
 , 
self
 . 
progress
 , 
self
 . 
scanData
 ,

778 
self
 . 
scanState
 , 
self
 . 
scanObject
 , 
OS
 = 
self
 . 
OS
 , 
sockQ
 = 
self
 . 
sockQ
 , 
q
 = 
self
 . 
q
 )

780 
self
 . 
edm
 . 
	`start
 ( )

783 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

785 
sock
 . 
	`connect
 ( ( 
IP
 , 
PORT
 ) )

787 
sock
 . 
	`send
 ( 
self
 . 
edm
 . 
sdm
 . 
res
 )

788 
sock
 . 
	`close
 ( )

791 
self
 . 
	=scan
 = 
scanUpdate
 . 
	`ScanUpdate
 ( 
self
 , 
self
 . 
mpl
 , 
self
 . 
img
 , 
self
 . 
displayArray
 , 
self
 . 
channel
 , 
self
 . 
scanFlag
 , 
self
 . 
scanObject
 . 
displayExtent
 )

794 
QtCore
 . 
QObject
 . 
	`connect
 ( 
self
 . 
scan
 , 
QtCore
 . 
	`SIGNAL
 ( "update()" ) , 
self
 . 
update_progress
 )

795 
self
 . 
scan
 . 
	`start
 ( ) 
	}

803 def 
	$update_progress
 ( 
self
 ) :

804 
self
 . 
progressBar_3
 . 
	`setValue
 ( 
self
 . 
progress
 [ 0 ] ) 
	}

806 def 
	$takeIV
 ( 
self
 ) :

810 
	=Start
 = 
self
 . 
Aux1SpinMin
 . 
	`value
 ( )

811 
	=delay
 = 
	`float
 ( 
	`str
 ( 
self
 . 
delayAux1
 . 
	`text
 ( ) ) )

812 
	=End
 = 
self
 . 
Aux1SpinMax
 . 
	`value
 ( )

813 
	=step
 = 
self
 . 
Aux1SpinStep
 . 
	`value
 ( )

814 
	=gain
 = 
	`float
 ( 
	`str
 ( 
self
 . 
TransGain
 . 
	`text
 ( ) ) )

815 
	=channel
 = ( 1 << 
self
 . 
TransChannel
 . 
	`value
 ( ) )

816 print "IV channel is:" , 
channel

817 
self
 . 
	=transport
 = 
scanobject
 . 
	`Transport
 ( 
Start
 = 
Start
 , 
delay
 = 
delay
 , 
End
 = 
End
 , 
step
 = 
step
 , 
channelMask
 = 
channel
 , 
gain
 = 
gain
 )

818 
self
 . 
	=scanFlag
 = [ False ]

819 
self
 . 
	=edm
 = 
edm
 . 
	`Edm
 ( 
scanFlag
 = 
self
 . 
scanFlag
 , 
Transport
 = 
self
 . 
transport
 )

820 
self
 . 
edm
 . 
	`start
 ( )

821 
self
 . 
	=tranScan
 = 
scanUpdate
 . 
	`TransUpdate
 ( 
self
 . 
mpl_2
 , 
self
 . 
scanFlag
 , 
self
 . 
transport
 )

822 
self
 . 
tranScan
 . 
	`start
 ( ) 
	}

826 def 
	$takeChannelUnits
 ( 
self
 ) :

828 
self
 . 
	=channelUnits
 [ 0 ] = 
	`str
 ( 
self
 . 
unitsCh1
 . 
	`text
 ( ) )

829 
self
 . 
	=channelUnits
 [ 1 ] = 
	`str
 ( 
self
 . 
unitsCh2
 . 
	`text
 ( ) )

830 
self
 . 
	=channelUnits
 [ 2 ] = 
	`str
 ( 
self
 . 
unitsCh3
 . 
	`text
 ( ) )

831 
self
 . 
	=channelUnits
 [ 3 ] = 
	`str
 ( 
self
 . 
unitsCh4
 . 
	`text
 ( ) )

832 
self
 . 
	=channelUnits
 [ 4 ] = 
	`str
 ( 
self
 . 
unitsCh5
 . 
	`text
 ( ) )

833 
self
 . 
	=channelUnits
 [ 5 ] = 
	`str
 ( 
self
 . 
unitsCh6
 . 
	`text
 ( ) ) 
	}

836 def 
	$takeChannelGain
 ( 
self
 ) :

838 
self
 . 
	=channelGain
 [ 0 ] = 
	`str
 ( 
self
 . 
gainCh1
 . 
	`text
 ( ) )

839 
self
 . 
	=channelGain
 [ 1 ] = 
	`str
 ( 
self
 . 
gainCh2
 . 
	`text
 ( ) )

840 
self
 . 
	=channelGain
 [ 2 ] = 
	`str
 ( 
self
 . 
gainCh3
 . 
	`text
 ( ) )

841 
self
 . 
	=channelGain
 [ 3 ] = 
	`str
 ( 
self
 . 
gainCh4
 . 
	`text
 ( ) )

842 
self
 . 
	=channelGain
 [ 4 ] = 
	`str
 ( 
self
 . 
gainCh5
 . 
	`text
 ( ) )

843 
self
 . 
	=channelGain
 [ 5 ] = 
	`str
 ( 
self
 . 
gainCh6
 . 
	`text
 ( ) ) 
	}

846 def 
	$takeChannelLabels
 ( 
self
 ) :

848 
self
 . 
	=channelLabel
 [ 0 ] = 
	`str
 ( 
self
 . 
labelCh1
 . 
	`text
 ( ) )

849 
self
 . 
	=channelLabel
 [ 1 ] = 
	`str
 ( 
self
 . 
labelCh2
 . 
	`text
 ( ) )

850 
self
 . 
	=channelLabel
 [ 2 ] = 
	`str
 ( 
self
 . 
labelCh3
 . 
	`text
 ( ) )

851 
self
 . 
	=channelLabel
 [ 3 ] = 
	`str
 ( 
self
 . 
labelCh4
 . 
	`text
 ( ) )

852 
self
 . 
	=channelLabel
 [ 4 ] = 
	`str
 ( 
self
 . 
labelCh5
 . 
	`text
 ( ) )

853 
self
 . 
	=channelLabel
 [ 5 ] = 
	`str
 ( 
self
 . 
labelCh6
 . 
	`text
 ( ) ) 
	}

858 def 
	$saveScan
 ( 
self
 ) :

861 
numpy
 . 
	`savez
 ( '../data/' + ( 
	`str
 ( 
self
 . 
saveName
 . 
	`text
 ( ) ) + '_Scan_' + '.npz' ) , 
displayArray
 = 
self
 . 
displayArray
 [ 0 ] , 
scanData
 = 
self
 . 
scanData
 [ 0 ] ,

862 
units
 = 
self
 . 
scanInfo
 [ 0 ] , 
labels
 = 
self
 . 
scanInfo
 [ 1 ] , 
gain
 = 
self
 . 
scanInfo
 [ 2 ] , 
mag
 = 
self
 . 
scanInfo
 [ 3 ] , 
accel
 = 
self
 . 
scanInfo
 [ 4 ] ,

863 
beam
 = 
self
 . 
scanInfo
 [ 5 ] , 
channel
 = 
self
 . 
scanInfo
 [ 6 ] , 
vExtent
 = 
self
 . 
vExtent
 , 
hExtent
 = 
self
 . 
hExtent
 , 
vMin
 = 
self
 . 
vMin
 ,

864 
hMin
 = 
self
 . 
hMax
 , 
vMax
 = 
self
 . 
vMax
 ) 
	}

866 def 
	$saveScanObject
 ( 
self
 ) :

867 
scanobject
 . 
scanObjectUtils
 . 
	`pickle_scanobject
 ( 
self
 . 
scanObject
 , '../data/' + 
	`str
 ( 
self
 . 
saveName
 . 
	`text
 ( ) ) + '.scan' ) 
	}

870 def 
	$saveTransport
 ( 
self
 ) :

871 
scanobject
 . 
scanObjectUtils
 . 
	`pickle_scanobject
 ( 
self
 . 
transport
 , '../data/' + 
	`str
 ( 
self
 . 
SweepName
 . 
	`text
 ( ) ) + '.iv' ) 
	}

876 
	=app
 = 
QtGui
 . 
	`QApplication
 ( 
sys
 . 
argv
 )

878 
	=poo
 = 
	`DesignerMainWindow
 ( )

880 
poo
 . 
	`show
 ( )

883 
sys
 . 
	`exit
 ( 
app
 . 
	`exec_
 ( ) )


	@./profileUI.py

2 from 
	~__future__
 import 
with_statement

4 import 
	~numpy

5 import 
	~scipy

6 import 
	~scipy.ndimage

7 import 
	~h5py

8 import 
	~Mfigure

9 import 
	~math

10 import 
	~pylab

11 import 
	~lineProfile

13 import 
	~time

15 import 
	~EbicDataManager

17 import 
	~scanUpdate
 , 
	~edm

18 import 
	~thread
 , 
	~Queue

19 import 
	~config

20 import 
	~scanobject

23 import 
	~numpy

25 from 
	~scipy
 import 
mgrid

26 from 
	~time
 import 
strftime

38 import 
	~numpy
 as 
np

42 import 
	~sys

45 from 
	~PyQt4.QtCore
 import *

47 from 
	~PyQt4.QtGui
 import *

50 from 
	~qtdesigner
 import 
Ui_MplMainWindow

52 from 
	~profileDialog
 import 
Ui_profiler

54 class 
	cProfileUI
 ( 
QDialog
 , 
Ui_profiler
 ) :

56 def 
	$__init__
 ( 
self
 , 
parent
 = None , 
scan
 = None , 
callback
 = None ) :

57 
Ui_profiler
 . 
	`__init__
 ( 
self
 )

58 
QDialog
 . 
	`__init__
 ( 
self
 )

62 
self
 . 
	`setupUi
 ( 
self
 )

63 
self
 . 
	=activeprofile
 = None

64 
self
 . 
	=activeCh
 = 0

65 
self
 . 
	=scan
 = 
scan

66 
self
 . 
	=callback
 = 
callback

67 
self
 . 
ParentName
 . 
	`setText
 ( 
self
 . 
scan
 . 
name
 )

70 
QObject
 . 
	`connect
 ( 
self
 . 
addprofile
 , 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
temp_profile_append_to_scan
 )

71 
QObject
 . 
	`connect
 ( 
self
 . 
viewCH_comboBox
 , 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_activeCH
 )

74 
self
 . 
	`update_view_Ch_index
 ( ) 
	}

76 def 
	$update_view_Ch_index
 ( 
self
 ) :

77 for 
i
 in 
	`range
 ( 0 , 
self
 . 
scan
 . 
channelCount
 ) :

78 
self
 . 
viewCH_comboBox
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) ) 
	}

80 def 
	$plot_profile
 ( 
self
 ) :

81 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
	`plot
 ( 
self
 . 
temp_profile
 . 
Xposition
 , 
self
 . 
temp_profile
 . 
profileDataAvg
 [ : , 
self
 . 
activeCh
 ] )

82 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
	`grid
 ( )

83 
self
 . 
widget
 . 
canvas
 . 
	`draw
 ( ) 
	}

85 def 
	$set_tempprofile
 ( 
self
 , 
temp_profile
 ) :

86 
self
 . 
	=temp_profile
 = 
temp_profile
 
	}

89 def 
	$temp_profile_append_to_scan
 ( 
self
 ) :

90 
self
 . 
temp_profile
 . 
	=name
 = 
	`str
 ( 
self
 . 
ProfileName
 . 
	`text
 ( ) )

91 
self
 . 
scan
 . 
profiles
 . 
	`append
 ( 
self
 . 
temp_profile
 )

92 if 
self
 . 
callback
 != None :

93 
self
 . 
	`callback
 ( ) 
	}

95 def 
	$update_activeCH
 ( 
self
 , 
value
 ) :

96 
self
 . 
	=activeCh
 = 
value

97 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
	`clear
 ( )

98 
self
 . 
	`plot_profile
 ( ) 
	}


	@./scanUpdate.py

1 import 
	~sys
 , 
	~time

2 import 
	~threading

3 import 
	~pylab

5 import 
	~sys

6 import 
	~os

7 
	=CWD
 = 
os
 . 
	`getcwd
 ( )

8 
sys
 . 
path
 . 
	`append
 ( 
CWD
 + '/proto_Code' )

9 
sys
 . 
path
 . 
	`append
 ( 
CWD
 )

10 import 
	~os.path

13 from 
	~src
 import 
pyqtgraph
 as 
pg

15 import 
	~pyQtWindow

16 import 
	~numpy

18 from 
	~PyQt4
 import 
QtCore
 , 
QtGui

20 class 
	cScanUpdate
 ( 
QtCore
 . 
QThread
 ) :

22 def 
	$__init__
 ( 
self
 , 
parent
 , 
mpl
 , 
img
 , 
displayArray
 , 
channel
 , 
scanFlag
 , 
extent
 ) :

23 
QtCore
 . 
QThread
 . 
	`__init__
 ( 
self
 , 
parent
 )

24 
self
 . 
	=mpl
 = 
mpl

25 
self
 . 
	=parent
 = 
parent

27 
self
 . 
	=extent
 = 
extent

28 
self
 . 
	=displayArray
 = 
displayArray

29 
self
 . 
	=channel
 = 
channel

30 
self
 . 
	=counter
 = 0

31 
self
 . 
	=scanFlag
 = 
scanFlag

32 
self
 . 
	=img
 = 
img
 
	}

40 def 
	$run
 ( 
self
 ) :

41 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`clear
 ( )

43 while 
self
 . 
displayArray
 [ 0 ] == None :

44 
time
 . 
	`sleep
 ( 0.2 )

47 
self
 . 
	=im
 = 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`imshow
 ( 
self
 . 
displayArray
 [ 0 ] [ : , : , 
self
 . 
channel
 [ 0 ] ] , 
cmap
 = 
pylab
 . 
cm
 . 
Greys_r
 , 
extent
 = 
self
 . 
extent

48 , 
origin
 = 'lower' , 
interpolation
 = 'nearest' , 
alpha
 = 1 , 
aspect
 = 'equal' )

49 
self
 . 
mpl
 . 
canvas
 . 
	`draw
 ( )

52 
time
 . 
	`sleep
 ( 0.5 )

54 
self
 . 
im
 . 
	`set_array
 ( 
self
 . 
displayArray
 [ 0 ] [ : , : , 
self
 . 
channel
 [ 0 ] ] )

56 
self
 . 
img
 . 
	`setImage
 ( 
numpy
 . 
	`swapaxes
 ( 
self
 . 
displayArray
 [ 0 ] [ : , : , 
self
 . 
channel
 [ 0 ] ] , 0 , 1 ) )

58 
self
 . 
im
 . 
	`autoscale
 ( )

59 
self
 . 
mpl
 . 
canvas
 . 
	`draw
 ( )

61 
self
 . 
	=counter
 = 
self
 . 
counter
 + 1

63 
self
 . 
	`emit
 ( 
QtCore
 . 
	`SIGNAL
 ( "update()" ) )

65 if 
self
 . 
scanFlag
 [ 0 ] == True :

68 
time
 . 
	`sleep
 ( 0.5 )

69 
self
 . 
im
 . 
	`set_array
 ( 
self
 . 
displayArray
 [ 0 ] [ : , : , 
self
 . 
channel
 [ 0 ] ] )

70 
self
 . 
img
 . 
	`setImage
 ( 
numpy
 . 
	`swapaxes
 ( 
self
 . 
displayArray
 [ 0 ] [ : , : , 
self
 . 
channel
 [ 0 ] ] , 0 , 1 ) )

71 
self
 . 
im
 . 
	`autoscale
 ( )

72 
self
 . 
mpl
 . 
canvas
 . 
	`draw
 ( )

73 
self
 . 
	`terminate
 ( ) 
	}

76 class 
	cTransUpdate
 ( 
threading
 . 
Thread
 ) :

78 def 
	$__init__
 ( 
self
 , 
mpl
 , 
scanFlag
 , 
Transport
 = None ) :

79 
self
 . 
	=mpl
 = 
mpl

80 
self
 . 
	=scanFlag
 = 
scanFlag

81 
self
 . 
	=transport
 = 
Transport

82 
threading
 . 
Thread
 . 
	`__init__
 ( 
self
 ) 
	}

84 def 
	$run
 ( 
self
 ) :

85 while 
self
 . 
scanFlag
 [ 0 ] != True :

86 while 
	`len
 ( 
self
 . 
transport
 . 
dataIstd
 ) == 0 :

87 
time
 . 
	`sleep
 ( 0.2 )

88 
time
 . 
	`sleep
 ( 1 )

89 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`clear
 ( )

90 
self
 . 
mpl
 . 
canvas
 . 
ax
 . 
	`errorbar
 ( 
self
 . 
transport
 . 
sentVoltage
 , 
self
 . 
transport
 . 
dataI
 , 
yerr
 = 
self
 . 
transport
 . 
dataIstd
 )

91 
self
 . 
mpl
 . 
canvas
 . 
	`draw
 ( ) 
	}


	@./CCNT_test.py

2 
	=pF
 = 3000

3 
	=CH
 = 8

4 
	=samp
 = 2

6 def 
	$set_CCNT
 ( 
pF
 = 3000 , 
pS
 = 3000 , 
CH
 = 8 , 
samp
 = 1 ) :

35 assert 
CH
 <= 8

36 assert 
samp
 >= 1

38 
	=TF_state
 = None

39 
	=TF
 = None

42 
	=pS_CCNT
 = 0

43 
	=pS_pF_resized_CCNT
 = 1

44 
	=pS_pF_CCNT
 = 2

45 
	=pS_pF_samp_CCNT
 = 3

47 
	=resizeDim
 = None

51 if ( 
CH
 * 
pF
 * 
samp
 <= 1020 ) :

52 
	=CCNT
 = 
pF
 * 
samp

53 
	=TF_state
 = 
pS_CCNT

54 
	=resizeDim
 = ( 
pF
 , 
samp
 , 
CH
 )

59 elif ( 
pF
 > 1020 / ( 
CH
 * 
samp
 ) ) :

61 for 
i
 in 
	`range
 ( 2 , 100 ) :

65 
	=sub_pF
 = ( 
pF
 / 
i
 )

70 if ( ( 
sub_pF
 * ( 
CH
 * 
samp
 ) <= 1020 ) and ( 
sub_pF
 > 0 ) ) :

71 print "i" , 
i

75 
	=pF
 = ( 
pF
 / 
sub_pF
 ) * 
sub_pF

77 
	=CCNT
 = 
samp
 * 
sub_pF

81 
	=TF_state
 = 
pS_pF_resized_CCNT

83 
	=resizeDim
 = ( 
sub_pF
 , 
samp
 , 
CH
 )

84 print "pF" , 
pF
 , "TF_state" , 
TF_state
 , "CCNT" , 
CCNT
 , "resizeDim" , 
resizeDim
 , "\n"

88 if ( 
i
 > 98 or 
sub_pF
 == 0 ) :

90 if ( 
CH
 * 
samp
 < 1020 ) :

91 
	=CCNT
 = 
samp

92 
	=TF_state
 = 
pS_pF_CCNT

93 
	=resizeDim
 = ( 
samp
 , 
CH
 )

98 
	=TF_state
 = 
pS_pF_samp_CCNT

99 for 
k
 in 
	`range
 ( 1 , 1000 ) :

100 
	=sub_samp
 = 
	`int
 ( 
samp
 / 
k
 )

102 if ( 
sub_samp
 * 
CH
 <= 1020 ) :

104 
	=CCNT
 = 
sub_samp

105 
	=samp
 = ( 
samp
 / 
sub_samp
 ) * 
sub_samp

107 
	=resizeDim
 = ( 
CCNT
 , 
CH
 )

108 print "samp" , 
samp
 , "CCNT" , 
CCNT
 , "k" , 
k

110 if ( 
sub_samp
 == 0 ) :

111 
	=CCNT
 = 1

112 
	=resizeDim
 = ( 
CCNT
 , 
CH
 )

116 print "Ch and Sample" , 
CH
 , 
samp

117 
	=pF
 = 
pF

118 print "CCNT" , 
CCNT

119 print "pF" , 
pF

120 print "i" , 
i

129 print " TF State" , 
TF_state

130 if ( 
TF_state
 == 
pS_CCNT
 ) :

131 
	=TF
 = 
pS

133 elif ( 
TF_state
 == 
pS_pF_resized_CCNT
 ) :

134 
	=TF
 = 
pS
 * ( 
pF
 / 
resizeDim
 [ 0 ] )

136 elif ( 
TF_state
 == 
pS_pF_CCNT
 ) :

137 
	=TF
 = 
pS
 * 
pF

139 elif ( 
TF_state
 == 
pS_pF_samp_CCNT
 ) :

140 
	=TF
 = 
pS
 * 
pF
 * ( 
samp
 / 
CCNT
 )

144 assert 
TF
 != None

145 assert 
TF
 < 2 ** 32

146 print "TF" , 
TF

148 return ( 
TF
 , 
TF_state
 , 
pF
 , 
pS
 , 
samp
 , 
CCNT
 , 
resizeDim
 ) 
	}

151 def 
	$TF_index
 ( 
TF
 = None , 
TF_state
 = None , 
pF
 = None , 
pS
 = None , 
samp
 = None , 
CCNT
 = None , 
header
 = None , 
resizeDim
 = None ) :

161 
	=yindex
 = None

162 
	=xindex
 = None

163 
	=sub_xindex
 = None

165 
	=samp_index
 = None

166 
	=sub_samp_index
 = None

171 if ( 
TF_state
 < 1 ) :

172 
	=yindex_dem
 = 1

173 
	=xindex_dem
 = 1

175 
	=yindex
 = ( 
header
 - 1 ) / 
yindex_dem

183 if ( 
TF_state
 == 1 ) :

185 
	=yindex_dem
 = 
pF
 / 
resizeDim
 [ 0 ]

186 
	=xindex_dem
 = 1

188 
	=yindex
 = 
	`int
 ( ( 
header
 - 1 ) / 
yindex_dem
 )

190 
	=xindex
 = ( 
header
 - 
yindex
 * 
yindex_dem
 - 1 )

191 
	=sub_xindex
 = 
xindex
 * 
resizeDim
 [ 0 ]

193 elif ( 
TF_state
 == 2 ) :

194 
	=yindex_dem
 = 
pF

195 
	=xindex_dem
 = 1

197 
	=yindex
 = 
	`int
 ( ( 
header
 - 1 ) / 
yindex_dem
 )

199 
	=xindex
 = ( 
header
 - 
yindex
 * 
yindex_dem
 - 1 )

202 elif ( 
TF_state
 == 3 ) :

203 
	=yindex_dem
 = ( ( 
pF
 * 
samp
 ) / 
CCNT
 )

204 
	=xindex_dem
 = ( 
samp
 / 
CCNT
 )

206 
	=yindex
 = 
	`int
 ( ( 
header
 - 1 ) / 
yindex_dem
 )

208 
	=xindex
 = 
	`int
 ( ( 
header
 - 
yindex
 * 
yindex_dem
 - 1 ) / 
xindex_dem
 )

210 
	=samp_index
 = 
header
 - 
yindex
 * 
yindex_dem
 - 
xindex
 * 
xindex_dem
 - 1

211 
	=sub_samp_index
 = 
samp_index
 * 
resizeDim
 [ - 2 ]

216 return 
xindex
 , 
sub_xindex
 , 
yindex
 , 
samp_index
 , 
sub_samp_index
 
	}
 """\n\n\n        sub_data_array = numpy.reshape(Z, ((CCNT/samp),CH,samp), order = 'C')\n\n        print "data", count , " len", len(data), "xindex" , xindex, "yindex", yindex ,\n             "data shape", sub_data_array.shape, "header" , header[0], "Z", Z[1]\n\n        #print sub_data_array\n        sub_xindex = xindex*sub_data_array.shape[0]\n        print sub_xindex \n        storedArray[sub_xindex[0] : sub_xindex[0] + sub_data_array.shape[0], yindex[0], :,:] = sub_data_array\n\n"""


	@./HIST.py

9 import 
	~numpy
 as 
np

10 import 
	~sys

11 import 
	~os

12 
os
 . 
	`chdir
 ( ".." )

13 
	=CWD
 = 
os
 . 
	`getcwd
 ( )

14 
	=PWD
 = 
os
 . 
pardir

15 
sys
 . 
path
 . 
	`append
 ( 
CWD
 + '/proto_Code' )

16 
sys
 . 
path
 . 
	`append
 ( 
PWD
 )

18 import 
	~os.path

22 from 
	~src.pyqtgraph.Qt
 import 
QtGui
 , 
QtCore

23 import 
	~src.pyqtgraph
 as 
pg

25 
	=app
 = 
QtGui
 . 
	`QApplication
 ( [ ] )

26 
	=mw
 = 
QtGui
 . 
	`QMainWindow
 ( )

27 
mw
 . 
	`setWindowTitle
 ( 'pyqtgraph example: ViewBox' )

28 
mw
 . 
	`show
 ( )

29 
mw
 . 
	`resize
 ( 800 , 600 )

31 
	=gv
 = 
pg
 . 
	`GraphicsView
 ( )

32 
mw
 . 
	`setCentralWidget
 ( 
gv
 )

33 
	=l
 = 
QtGui
 . 
	`QGraphicsGridLayout
 ( )

34 
l
 . 
	`setHorizontalSpacing
 ( 0 )

35 
l
 . 
	`setVerticalSpacing
 ( 0 )

38 
	=scale
 = 1

48 
win
 . 
	`setWindowTitle
 ( 'pyqtgraph example: Histogram LUT' )

50 
	=cw
 = 
QtGui
 . 
	`QWidget
 ( )

51 
win
 . 
	`setCentralWidget
 ( 
cw
 )

53 
	=l
 = 
QtGui
 . 
	`QGridLayout
 ( )

54 
cw
 . 
	`setLayout
 ( 
l
 )

55 
l
 . 
	`setSpacing
 ( 0 )

57 
	=v
 = 
pg
 . 
	`GraphicsView
 ( )

58 
	=vb
 = 
pg
 . 
	`ViewBox
 ( )

59 
vb
 . 
	`setAspectLocked
 ( )

60 
v
 . 
	`setCentralItem
 ( 
vb
 )

61 
l
 . 
	`addWidget
 ( 
v
 , 0 , 0 )

63 
	=w
 = 
pg
 . 
	`HistogramLUTWidget
 ( )

64 
l
 . 
	`addWidget
 ( 
w
 , 0 , 1 )

66 
	=data
 = 
pg
 . 
	`gaussianFilter
 ( 
np
 . 
random
 . 
	`normal
 ( 
size
 = ( 256 , 256 ) ) , ( 20 , 20 ) )

67 for 
i
 in 
	`range
 ( 32 ) :

68 for 
j
 in 
	`range
 ( 32 ) :

69 
	=data
 [ 
i
 * 8 , 
j
 * 8 ] += .1

70 
	=img
 = 
pg
 . 
	`ImageItem
 ( 
data
 )

74 
vb
 . 
	`addItem
 ( 
img
 )

75 
vb
 . 
	`autoRange
 ( )

77 
w
 . 
	`setImageItem
 ( 
img
 )

81 if 
__name__
 == '__main__' :

82 import 
	~sys

83 if ( 
sys
 . 
flags
 . 
interactive
 != 1 ) or not 
	`hasattr
 ( 
QtCore
 , 'PYQT_VERSION' ) :

84 
QtGui
 . 
QApplication
 . 
	`instance
 ( ) . 
	`exec_
 ( )


	@./SetV.py

2 import 
	~socket

3 import 
	~time

4 import 
	~struct

5 import 
	~numpy

6 import 
	~sys

9 
	=IP
 = "10.0.1.8"

10 
	=PORT
 = 5009

14 def 
	$constructPayload
 ( 
V1
 = 15000 , 
V2
 = - 15000 , 
CTRL
 = 0b11 ) :

16 
	=V1
 = 
numpy
 . 
	`int16
 ( 
V1
 )

17 
	=V2
 = 
numpy
 . 
	`int16
 ( 
V2
 )

18 
	=CTRL
 = 
numpy
 . 
	`int16
 ( 
CTRL
 )

20 
	=res
 = "%8x" % 0x10f1

21 
	=res
 += "%8x" % 
V1

22 
	=res
 += "%8x" % 
V2

23 
	=res
 += "%8x" % 
CTRL

25 return 
res
 
	}

28 def 
	$SendV
 ( 
V1
 = 20000 , 
V2
 = - 20000 , 
CTRL
 = 0b11 ) :

29 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

30 
sock
 . 
	`connect
 ( ( 
IP
 , 9930 ) )

32 
	=payload
 = 
	`constructPayload
 ( 
V1
 , 
V2
 , 
CTRL
 )

33 print 
payload

34 
sock
 . 
	`send
 ( 
payload
 )

35 
sock
 . 
	`close
 ( ) 
	}

38 if 
__name__
 == "__main__" :

40 
	`SendV
 ( )


	@./reCenterSliceUI.py

2 from 
	~__future__
 import 
with_statement

4 import 
	~numpy

5 import 
	~scipy

6 import 
	~scipy.ndimage

7 import 
	~h5py

8 import 
	~Mfigure

9 import 
	~math

10 import 
	~pylab

11 import 
	~lineProfile

12 import 
	~EbicCommandManager

13 import 
	~time

14 import 
	~EbicPythonCommandsAuto

15 import 
	~EbicDataManager

16 import 
	~WriteToHdf5

17 import 
	~scanUpdate
 , 
	~edm

18 import 
	~thread
 , 
	~Queue

19 import 
	~config

20 import 
	~scanobject

23 import 
	~numpy

25 from 
	~scipy
 import 
mgrid

26 from 
	~time
 import 
strftime

38 import 
	~numpy
 as 
np

42 import 
	~sys

45 from 
	~PyQt4.QtCore
 import *

47 from 
	~PyQt4.QtGui
 import *

50 from 
	~qtdesigner
 import 
Ui_MplMainWindow

52 from 
	~reCenterSlice
 import 
Ui_Dialog

54 class 
	cReCenterSliceUI
 ( 
QDialog
 , 
Ui_Dialog
 ) :

56 def 
	$__init__
 ( 
self
 , 
parent
 = None , 
scan
 = None , 
callback
 = None ) :

57 
Ui_Dialog
 . 
	`__init__
 ( 
self
 )

58 
QDialog
 . 
	`__init__
 ( 
self
 )

62 
self
 . 
	`setupUi
 ( 
self
 )

63 
self
 . 
	=activeSlice
 = None

64 
self
 . 
	=activeCh
 = 0

65 
self
 . 
	=scan
 = 
scan

66 
self
 . 
	=callback
 = 
callback

67 
self
 . 
ParentName
 . 
	`setText
 ( 
self
 . 
scan
 . 
name
 )

68 
self
 . 
	`update_view_Ch_index
 ( )

69 
self
 . 
	`update_ref_Ch_index
 ( )

71 
self
 . 
	=refCH
 = 0

72 
self
 . 
	=margin
 = 20

73 
self
 . 
	=axis
 = 1

79 
QObject
 . 
	`connect
 ( 
self
 . 
addSlice
 , 
	`SIGNAL
 ( "clicked()" ) , 
self
 . 
temp_slice_append_to_scan
 )

80 
QObject
 . 
	`connect
 ( 
self
 . 
viewCH_comboBox
 , 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_activeCH
 )

81 
QObject
 . 
	`connect
 ( 
self
 . 
set_margin
 , 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
update_Margin
 )

82 
QObject
 . 
	`connect
 ( 
self
 . 
referenceCH
 , 
	`SIGNAL
 ( "currentIndexChanged(int)" ) , 
self
 . 
update_ReferenceCH
 )

83 
QObject
 . 
	`connect
 ( 
self
 . 
sobelAxis
 , 
	`SIGNAL
 ( "valueChanged(int)" ) , 
self
 . 
update_Axis
 )

86 
self
 . 
	`set_tempSlice
 ( ) 
	}

89 def 
	$update_view_Ch_index
 ( 
self
 ) :

90 for 
i
 in 
	`range
 ( 0 , 
self
 . 
scan
 . 
channelCount
 ) :

91 
self
 . 
viewCH_comboBox
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) ) 
	}

93 def 
	$update_ref_Ch_index
 ( 
self
 ) :

94 for 
i
 in 
	`range
 ( 0 , 
self
 . 
scan
 . 
channelCount
 ) :

95 
self
 . 
referenceCH
 . 
	`addItem
 ( 
	`str
 ( 
i
 ) ) 
	}

99 def 
	$show_image
 ( 
self
 ) :

100 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
	`clear
 ( )

101 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
	`imshow
 ( 
self
 . 
tempSlice
 . 
DisplayArray
 [ : , : , 
self
 . 
activeCh
 ] )

102 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
yaxis
 . 
	`set_tick_params
 ( 
direction
 = 'out' )

103 
self
 . 
widget
 . 
canvas
 . 
ax
 . 
xaxis
 . 
	`set_visible
 ( False )

105 
self
 . 
widget
 . 
canvas
 . 
	`draw
 ( ) 
	}

107 def 
	$set_tempSlice
 ( 
self
 ) :

111 
self
 . 
	=tempSlice
 = 
scanobject
 . 
	`reCenterSlice
 ( 
self
 . 
scan
 , 
name
 = 
	`str
 ( 
self
 . 
SliceName
 . 
	`text
 ( ) ) )

112 
self
 . 
tempSlice
 . 
	`reCenter
 ( 
bounds
 = None , 
SEChannel
 = 
self
 . 
refCH
 , 
margin
 = 
self
 . 
margin
 , 
sobelAxis
 = 
self
 . 
axis
 )

113 
self
 . 
	`show_image
 ( ) 
	}

116 def 
	$temp_slice_append_to_scan
 ( 
self
 ) :

117 
self
 . 
tempSlice
 . 
	=name
 = 
	`str
 ( 
self
 . 
SliceName
 . 
	`text
 ( ) )

118 
self
 . 
scan
 . 
slices
 . 
	`append
 ( 
self
 . 
tempSlice
 )

119 if 
self
 . 
callback
 != None :

120 
self
 . 
	`callback
 ( ) 
	}

122 def 
	$update_activeCH
 ( 
self
 , 
value
 ) :

123 
self
 . 
	=activeCh
 = 
value

124 
self
 . 
	`show_image
 ( ) 
	}

126 def 
	$update_ReferenceCH
 ( 
self
 , 
value
 ) :

127 
self
 . 
	=refCH
 = 
value

128 
self
 . 
	`set_tempSlice
 ( ) 
	}

130 def 
	$update_Margin
 ( 
self
 , 
value
 ) :

131 
self
 . 
	=margin
 = 
value

132 
self
 . 
	`set_tempSlice
 ( ) 
	}

134 def 
	$update_Axis
 ( 
self
 , 
value
 ) :

135 
self
 . 
	=axis
 = 
value

136 
self
 . 
	`set_tempSlice
 ( ) 
	}


	@./Sun_getDL.py

1 import 
	~numpy
 as 
np

2 import 
	~scipy

3 import 
	~numpy.ma

4 import 
	~sys

5 
sys
 . 
path
 . 
	`append
 ( '/home/mightydev2/Mighty_EBIC_Python/src/' )

6 import 
	~os.path

7 import 
	~scanobject

8 import 
	~matplotlib.pyplot
 as 
plt

9 from 
	~scipy
 import 
stats

12 
	=directory
 = 
os
 . 
	`getcwd
 ( )

15 
	=Scan
 = 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( "../data/7_14_SP10kvionMx8.scan" )

16 
	=pro
 = 
Scan
 . 
profiles
 [ 0 ]

18 
	=EB
 = - 1 * 
pro
 . 
profileData
 [ : , : , 1 ]

20 print 
EB
 . 
	`max
 ( )

22 
	=EB
 = 
EB
 / 
EB
 . 
	`max
 ( )

23 
	=X
 = 
pro
 . 
Xposition
 [ 120 : 220 ]

24 
	=Xp
 = 
pro
 . 
Xposition
 [ 320 : 600 ]

25 
	=Xp2
 = 
pro
 . 
Xposition
 [ 600 : 791 ]

26 
	=EB_lp
 = 
np
 . 
	`log
 ( 
EB
 [ 320 : 600 , 0 ] )

27 
	=EB_l
 = 
np
 . 
	`log
 ( 
EB
 [ 120 : 220 , 0 ] )

28 
	=EB_lp2
 = 
np
 . 
	`log
 ( 
EB
 [ 600 : 791 , 0 ] )

30 
	=slope_p
 , 
	=intercept_p
 , 
	=r_value_p
 , 
	=p_value_p
 , 
	=std_err_p
 = 
stats
 . 
	`linregress
 ( 
Xp
 , 
EB_lp
 )

31 
	=predict_yp
 = 
intercept_p
 + 
slope_p
 * 
Xp

33 
	=slope_p2
 , 
	=intercept_p2
 , 
	=r_value_p2
 , 
	=p_value_p2
 , 
	=std_err_p2
 = 
stats
 . 
	`linregress
 ( 
Xp2
 , 
EB_lp2
 )

34 
	=predict_yp2
 = 
intercept_p2
 + 
slope_p2
 * 
Xp2

37 
	=slope_n
 , 
	=intercept_n
 , 
	=r_value_n
 , 
	=p_value_n
 , 
	=std_err_n
 = 
stats
 . 
	`linregress
 ( 
X
 , 
EB_l
 )

38 
	=predict_y
 = 
intercept_n
 + 
slope_n
 * 
X

40 
	=F
 = 
np
 . 
	`exp
 ( ( 
X
 - 
X
 [ - 1 ] ) / ( 1 / 
slope_n
 ) )

41 
	=LF
 = ( 
np
 . 
	`log
 ( 
F
 ) )

44 print "1/slope n" , "{:.2f}" . 
	`format
 ( 
np
 . 
	`abs
 ( 1 / 
slope_n
 ) ) , "1/slope_p" , "{:.2f}" . 
	`format
 ( 
np
 . 
	`abs
 ( 1 / 
slope_p
 ) )

46 print 
slope_n
 , 
slope_p

48 print 
pro
 . 
Xposition
 . 
shape

50 
plt
 . 
	`axes
 ( 
axisbg
 = 'w' )

51 
plt
 . 
	`rc
 ( 'axes' , 
fc
 = 'w' )

53 
	=LEB
 = 
np
 . 
	`abs
 ( - 1.0 * 
np
 . 
	`log
 ( 
EB
 [ : , 0 ] ) )

55 
plt
 . 
	`plot
 ( 
pro
 . 
Xposition
 , 
LEB
 , 'b.' , 
markersize
 = 3 , )

63 
plt
 . 
	`xlabel
 ( "Microns" )

64 
plt
 . 
	`ylabel
 ( "Log of EBIC profile" )

66 
plt
 . 
	`tight_layout
 ( 
pad
 = 0.4 , 
w_pad
 = 0.5 , 
h_pad
 = 1.0 )

67 
plt
 . 
	`savefig
 ( "10kvDLSun.pdf" , 
format
 = 'pdf' )

68 
plt
 . 
	`show
 ( ) """\n\n#plot EBIC image\n\nplt.plot(pro.Xposition, pro.profileData[:,:,1], 'b.', markersize = 3)\nplt.ticklabel_format(style = 'sci', scilimits = (0,0), axis = 'y')\nplt.ylabel("EBIC Current")\nplt.xlabel("Microns")\nplt.tight_layout(pad=0.4, w_pad=0.5, h_pad=1.0)\n#plt.xlim(0,20)\nplt.savefig("10kvEBprofileSun.pdf", format = 'pdf') # can also save as a tif see docstring\nplt.show()\n\n\n    # get the array from the channel\nEB = Scan.DisplayArray[:,:,1]    \n    #Mask zeros values\nEB_nZ= numpy.ma.masked_equal(EB, 0.0)\nplt.imshow(EB_nZ, extent = Scan.extent, origin = 'lower',\\n    cmap = 'gist_yarg_r', vmax = 2.3*EB_nZ.max(), vmin = EB_nZ.min() )\n#plt.tight_layout()\nplt.plot([pro.startpoint[0], pro.endpoint[0]], [pro.startpoint[1], pro.endpoint[1]])\nplt.tight_layout()\nplt.colorbar(format = '%.2e')\nplt.savefig("10kvEBSunP.pdf", format = 'pdf', dpi = 600) # can also save as a tif see docstring\nplt.show()\n\nSE = Scan.DisplayArray[:,:,0]    \nplt.imshow(SE, extent = Scan.extent, origin = 'lower',cmap = 'gist_yarg_r')\nplt.plot([pro.startpoint[0], pro.endpoint[0]], [pro.startpoint[1], pro.endpoint[1]])\nplt.tight_layout()\nplt.savefig("10kvSESunP.pdf", format = 'pdf', dpi = 600) # can also save as a tif see docstring\nplt.show()\n\n"""


	@./profileDialog.py

10 from 
	~PyQt4
 import 
QtCore
 , 
QtGui

13 
	=_fromUtf8
 = 
QtCore
 . 
QString
 . 
fromUtf8

14 except 
AttributeError
 :

15 
	=_fromUtf8
 = lambda 
s
 : 
s

17 class 
	cUi_profiler
 ( 
object
 ) :

18 def 
	$setupUi
 ( 
self
 , 
profiler
 ) :

19 
profiler
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "profiler" ) )

20 
profiler
 . 
	`setEnabled
 ( True )

21 
profiler
 . 
	`resize
 ( 508 , 454 )

22 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

23 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

24 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

25 
sizePolicy
 . 
	`setHeightForWidth
 ( 
profiler
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

26 
profiler
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

27 
profiler
 . 
	`setModal
 ( False )

28 
self
 . 
	=widget
 = 
	`MplWidget
 ( 
profiler
 )

29 
self
 . 
widget
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 8 , 8 , 486 , 323 ) )

30 
	=sizePolicy
 = 
QtGui
 . 
	`QSizePolicy
 ( 
QtGui
 . 
QSizePolicy
 . 
Expanding
 , 
QtGui
 . 
QSizePolicy
 . 
Expanding
 )

31 
sizePolicy
 . 
	`setHorizontalStretch
 ( 0 )

32 
sizePolicy
 . 
	`setVerticalStretch
 ( 0 )

33 
sizePolicy
 . 
	`setHeightForWidth
 ( 
self
 . 
widget
 . 
	`sizePolicy
 ( ) . 
	`hasHeightForWidth
 ( ) )

34 
self
 . 
widget
 . 
	`setSizePolicy
 ( 
sizePolicy
 )

35 
self
 . 
widget
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "widget" ) )

36 
self
 . 
	=label
 = 
QtGui
 . 
	`QLabel
 ( 
profiler
 )

37 
self
 . 
label
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 398 , 388 , 82 , 17 ) )

38 
self
 . 
label
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label" ) )

39 
self
 . 
	=addprofile
 = 
QtGui
 . 
	`QPushButton
 ( 
profiler
 )

40 
self
 . 
addprofile
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 395 , 406 , 91 , 27 ) )

41 
self
 . 
addprofile
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "addprofile" ) )

42 
self
 . 
	=ProfileName
 = 
QtGui
 . 
	`QLineEdit
 ( 
profiler
 )

43 
self
 . 
ProfileName
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 3 , 357 , 357 , 27 ) )

44 
self
 . 
ProfileName
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ProfileName" ) )

45 
self
 . 
	=label_2
 = 
QtGui
 . 
	`QLabel
 ( 
profiler
 )

46 
self
 . 
label_2
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 4 , 337 , 83 , 17 ) )

47 
self
 . 
label_2
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_2" ) )

48 
self
 . 
	=label_3
 = 
QtGui
 . 
	`QLabel
 ( 
profiler
 )

49 
self
 . 
label_3
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 4 , 404 , 62 , 17 ) )

50 
self
 . 
label_3
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_3" ) )

51 
self
 . 
	=label_4
 = 
QtGui
 . 
	`QLabel
 ( 
profiler
 )

52 
self
 . 
label_4
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 87 , 378 , 131 , 17 ) )

53 
self
 . 
label_4
 . 
	`setText
 ( 
	`_fromUtf8
 ( "" ) )

54 
self
 . 
label_4
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_4" ) )

55 
self
 . 
	=viewCH_comboBox
 = 
QtGui
 . 
	`QComboBox
 ( 
profiler
 )

56 
self
 . 
viewCH_comboBox
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 396 , 353 , 89 , 31 ) )

57 
self
 . 
viewCH_comboBox
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "viewCH_comboBox" ) )

58 
self
 . 
	=label_5
 = 
QtGui
 . 
	`QLabel
 ( 
profiler
 )

59 
self
 . 
label_5
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 398 , 334 , 90 , 17 ) )

60 
self
 . 
label_5
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "label_5" ) )

61 
self
 . 
	=ParentName
 = 
QtGui
 . 
	`QLabel
 ( 
profiler
 )

62 
self
 . 
ParentName
 . 
	`setGeometry
 ( 
QtCore
 . 
	`QRect
 ( 77 , 405 , 281 , 17 ) )

63 
self
 . 
ParentName
 . 
	`setObjectName
 ( 
	`_fromUtf8
 ( "ParentName" ) )

65 
self
 . 
	`retranslateUi
 ( 
profiler
 )

66 
QtCore
 . 
QMetaObject
 . 
	`connectSlotsByName
 ( 
profiler
 ) 
	}

68 def 
	$retranslateUi
 ( 
self
 , 
profiler
 ) :

69 
profiler
 . 
	`setWindowTitle
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "Dialog" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

70 
self
 . 
label
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "Add to Scan" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

71 
self
 . 
addprofile
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "Add" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

72 
self
 . 
ProfileName
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "None" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

73 
self
 . 
label_2
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "profileName" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

74 
self
 . 
label_3
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "Parent:" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

75 
self
 . 
label_5
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "view channel" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) )

76 
self
 . 
ParentName
 . 
	`setText
 ( 
QtGui
 . 
QApplication
 . 
	`translate
 ( "profiler" , "TextLabel" , None , 
QtGui
 . 
QApplication
 . 
UnicodeUTF8
 ) ) 
	}

78 from 
	~mplwidget
 import 
MplWidget


	@./ReadCH_test.py

2 import 
	~socket

3 import 
	~time

4 import 
	~struct

5 import 
	~numpy

6 import 
	~pylab

7 import 
	~sys

8 import 
	~CCNT_test

9 from 
	~CCNT_test_unit
 import *

10 import 
	~Queue

11 import 
	~threading

14 
	=IP
 = "10.0.1.8"

15 
	=PORT
 = 5009

18 
	=buf_size
 = 4096

23 
	=dt
 = 
numpy
 . 
	`dtype
 ( 'uint32' )

26 
	=q
 = 
Queue
 . 
	`Queue
 ( )

28 
	=TF_I
 = 
CCNT_test
 . 
TF_index

37 
	=samp
 = 
numpy
 . 
	`int16
 ( 200 )

38 
	=CH
 = 
numpy
 . 
	`int16
 ( 3 )

39 
	=Count
 = 
numpy
 . 
	`int16
 ( 400 )

51 
	=CCNT
 = 
CH
 * 
samp

53 
	=resizeDim
 = ( 
samp
 , 
CH
 )

54 
	=count
 = 0

56 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
Count
 , 
samp
 , 
CH
 ] , 
numpy
 . 
int32
 )

57 print "storedArray" , 
storedArray
 . 
shape

59 
	=header_max
 = 
Count

60 print 
header_max

63 def 
	$test_scanSize
 ( ) :

64 
	=temp
 = 1

65 for 
i
 in 
resizeDim
 :

66 
	=temp
 = 
i
 * 
temp

69 return 
temp
 
	}

71 def 
	$constructPayload
 ( ) :

73 
	=OS_0
 = 2

74 
	=OS_1
 = 3

75 
	=OS_2
 = 5

78 
	=OS0
 = 0b001

79 
	=OS1
 = 0b010

80 
	=OS2
 = 0b100

81 
	=OSI
 = 3

84 if 
OSI
 > 0 :

85 
	=OS_value
 = 
	`int
 ( 
numpy
 . 
	`log2
 ( 
OSI
 ) )

87 
	=OS_value
 = 
OSI

88 print "OS_valuen" , 
	`bin
 ( 
OS_value
 )

101 
	=samp
 = 
numpy
 . 
	`int16
 ( 100 )

102 
	=CH
 = 
numpy
 . 
	`int16
 ( 1 )

103 
	=DVAR
 = 
numpy
 . 
	`uint32
 ( 1000 )

104 
	=OS
 = 
numpy
 . 
	`uint16
 ( 2 )

107 
	=OS
 = ( ( 
OS_value
 & 
OS2
 ) >> 2 ) << 
OS_2
 | ( ( 
OS_value
 & 
OS1
 ) >> 1 ) << 
OS_1
 | ( 
OS_value
 & 
OS0
 ) << 
OS_0

108 print "OS" , 
OS

109 
	=XFER
 = 
CH
 << 16 | ( ( 
CH
 * 4 ) - 1 ) << 8

111 print "XFER" , 
XFER

114 print "CCNT" , 
CCNT

122 
	=res
 = "%8x" % 0xdead

123 
	=res
 += "%8x" % 
samp

124 
	=res
 += "%8x" % 
CH

125 
	=res
 += "%8x" % 
DVAR

126 
	=res
 += "%8x" % 
OS

127 
	=res
 += "%8x" % 
XFER

128 
	=res
 += "%8x" % 
CCNT

131 return 
res
 
	}

134 def 
	$loop
 ( ) :

135 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

136 
sock
 . 
	`connect
 ( ( 
IP
 , 9930 ) )

139 
	=payload
 = 
	`constructPayload
 ( )

140 print 
payload

141 
sock
 . 
	`send
 ( 
payload
 )

142 
sock
 . 
	`close
 ( ) 
	}

146 def 
	$RX_loop
 ( ) :

148 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

149 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

150 
	=datacount
 = 
CH
 * 
samp

151 print 
datacount

152 
	=count
 = 0

158 
	=data
 = 
sock
 . 
	`recv
 ( 
buf_size
 )

162 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

163 if 
header
 [ 0 ] > 
header_max
 :

168 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

170 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

173 
	=Z
 = 
Copy
 >> 14 
	}

187 def 
	$dump_loop
 ( 
dump
 , 
datacount
 ) :

189 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

190 
sock
 . 
	`settimeout
 ( 3 )

191 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

193 print "data count" , 
datacount

194 
	=count
 = 0

198 
	=Hmax
 = 0

202 
	=data
 = ( 
sock
 . 
	`recv
 ( 
buf_size
 ) )

203 
	=count
 = 
count
 + 1

204 except 
socket
 . 
error
 as 
msg
 :

205 
sock
 . 
	`close
 ( )

206 print "error" , 
msg

209 if not 
data
 :

212 
dump
 . 
	`append
 ( 
data
 )

213 
q
 . 
	`put
 ( 
data
 )

214 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

215 if 
header
 [ 0 ] == 
header_max
 :

216 print "header max" , 
header
 [ 0 ]

218 if 
header
 [ 0 ] > 
header_max
 :

219 
	=Hmax
 = 
Hmax
 + 1

221 print "data length" , 
	`len
 ( 
dump
 )

223 print "length of dump" , 
	`len
 ( 
dump
 )

224 print "queue maxsize" , 
q
 . 
	`qsize
 ( )

225 
sock
 . 
	`close
 ( )

228 return 
Hmax
 , 
count
 
	}

233 def 
	$sortToImage
 ( 
dump
 , 
datacount
 ) :

239 
	=header_dump
 = [ ]

240 
	=Hmax
 = 0

241 for 
i
 in 
	`range
 ( 
	`len
 ( 
dump
 ) ) :

243 
	=data
 = 
dump
 . 
	`pop
 ( - 1 )

244 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

245 
	=ping
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 8 )

246 
	=pong
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 12 )

248 
header_dump
 . 
	`append
 ( 
data
 )

250 if 
header
 [ 0 ] <= 
header_max
 :

254 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

256 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

260 
	=Z
 = 
Copy
 >> 14

274 
	=Hmax
 = 
Hmax
 + 1

276 print "Hmax" , 
Hmax

277 for 
k
 in 
	`range
 ( 
CH
 ) :

279 print 
storedArray
 [ : , : , : , 
k
 ] . 
	`mean
 ( )

280 
pylab
 . 
	`imshow
 ( 
numpy
 . 
	`average
 ( 
storedArray
 [ : , : , : , 
k
 ] , 
axis
 = 2 ) )

283 
pylab
 . 
	`colorbar
 ( )

284 
pylab
 . 
	`show
 ( ) 
	}

293 def 
	$get_data_from_q
 ( 
q
 , 
datacount
 ) :

299 
	=header_dump
 = [ ]

300 
	=Hmax
 = 0

303 
	=data
 = 
q
 . 
	`get
 ( )

304 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

305 
	=ping
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 8 )

306 
	=pong
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 12 )

308 
header_dump
 . 
	`append
 ( 
data
 )

310 if 
header
 [ 0 ] <= 
header_max
 :

314 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

316 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

320 
	=Z
 = 
Copy
 >> 14

330 print 
header
 , 
ping
 , 
pong
 , 
Z
 . 
	`max
 ( ) , 
Z
 . 
	`min
 ( ) , "\n"

335 
	=Hmax
 = 
Hmax
 + 1

337 if 
header
 [ 0 ] == 
header_max
 :

338 break 
	}

347 if 
__name__
 == "__main__" :

349 
	`loop
 ( )

351 
	=dump
 = [ ]

353 
	=datacount
 = 
CH
 * 
samp

354 
	=Producer
 = 
threading
 . 
	`Thread
 ( 
target
 = 
dump_loop
 , 
args
 = ( 
dump
 , 
datacount
 ) )

356 
	=Consumer
 = 
threading
 . 
	`Thread
 ( 
target
 = 
get_data_from_q
 , 
args
 = ( 
q
 , 
datacount
 ) )

357 
Consumer
 . 
	`start
 ( )

358 
Producer
 . 
	`start
 ( )

360 while 
Producer
 . 
	`is_alive
 ( ) :

361 
time
 . 
	`sleep
 ( 1 )

365 print "final length of dump" , 
	`len
 ( 
dump
 )


	@./__init__.py

1 import 
	~src
 as 
src


	@./lineProfile.py

1 import 
	~numpy

3 def 
	$getMaxMin
 ( 
inputArray
 , 
axisIndex
 , 
center
 , 
threshold
 , 
channel
 ) :

4 
	=axisindex
 = 
axisIndex

5 
	=posMax
 = 
numpy
 . 
	`argmax
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

6 
	=posMin
 = 
numpy
 . 
	`argmin
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

7 
	=valMax
 = 
numpy
 . 
	`amax
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

8 
	=valMin
 = 
numpy
 . 
	`amin
 ( 
inputArray
 [ : , : , 
channel
 ] , 
axis
 = 
axisindex
 )

10 
	=traceValue
 = [ ]

11 
	=tracePosition
 = [ ]

13 for 
n
 in 
	`range
 ( 0 , 
	`len
 ( 
posMax
 ) ) :

14 if ( 
	`abs
 ( 
valMin
 [ 
n
 ] ) >= 
	`abs
 ( 
valMax
 [ 
n
 ] ) ) and ( 
	`abs
 ( 
center
 - 
posMin
 [ 
n
 ] ) < 
threshold
 ) :

15 
traceValue
 . 
	`append
 ( 
valMin
 [ 
n
 ] )

16 
tracePosition
 . 
	`append
 ( 
posMin
 [ 
n
 ] )

17 elif ( 
	`abs
 ( 
valMax
 [ 
n
 ] ) >= 
	`abs
 ( 
valMin
 [ 
n
 ] ) ) and ( 
	`abs
 ( 
center
 - 
posMax
 [ 
n
 ] ) < 
threshold
 ) :

18 
traceValue
 . 
	`append
 ( 
valMax
 [ 
n
 ] )

19 
tracePosition
 . 
	`append
 ( 
posMax
 [ 
n
 ] )

21 
traceValue
 . 
	`append
 ( 
inputArray
 [ 
center
 ] [ 
n
 ] [ 0 ] )

22 
tracePosition
 . 
	`append
 ( 
center
 )

24 return 
traceValue
 , 
tracePosition
 , 
valMax
 , 
posMax
 , 
valMin
 , 
posMin
 
	}


	@./style_rc.py

10 from 
	~PyQt4
 import 
QtCore

12 
	=qt_resource_data
 = "\\n\x00\x00\x03\xac\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x29\x49\x44\\n\x41\x54\x58\x85\xed\x95\x4f\x68\x5c\x55\x14\xc6\x7f\xe7\x65\x88\\n\x64\xda\xc6\xbd\xa9\x94\x48\x57\xb6\x91\x3a\x28\xae\xd3\x4d\xc5\\n\x0a\x4d\x40\x66\x63\xda\x37\x2f\x25\xcd\x46\x07\xd1\x24\x8e\xae\\n\xb2\x50\xa8\x49\xdd\x64\x99\xc2\xbc\x19\xd3\x6e\x9e\x20\x53\xc1\\n\xe2\x9f\x85\x75\x1b\xfc\xd3\xa4\x15\x91\x52\x4a\x70\x4a\xd7\x25\\n\x33\x24\xcd\xe0\xfb\x5c\xbc\x37\x4d\x90\xbc\x37\x1d\xe9\xce\xf9\\n\x56\xf7\xcf\x77\xce\xfd\xee\x39\xe7\x9e\x0b\x3d\xf4\xf0\x7f\x87\\n\x75\x43\x0e\x82\xa0\x7f\xab\xd1\x18\x97\xd9\x98\x41\x0e\x18\x8a\\n\xb7\xea\x98\xfd\x2a\xa8\x65\xb3\xd9\x5a\x3e\x9f\xdf\x79\xea\x02\\n\xaa\xe5\xf2\x5b\x98\x2d\x00\xc3\x06\xb7\x04\x37\x64\x56\x07\x70\\n\xc2\x70\x08\xb3\x51\xc1\x08\x70\xd7\x60\xee\x9c\xe7\x7d\xf5\x54\\n\x04\x04\x41\xd0\xb7\xd5\x6c\x2e\x00\xef\x1b\x7c\x6b\x61\x58\x3a\\n\x7b\xfe\xfc\xda\x7e\x5c\xdf\xf7\x4f\x38\x70\x11\x38\x05\x2c\xde\\n\xdb\xd8\x28\xcd\xcf\xcf\x87\x69\xfe\x33\x9d\x04\xc4\x87\xbf\x27\\n\x69\xd6\x9d\x9c\xbc\x94\xc6\xf5\x3c\xef\x26\xf0\x7a\xd5\xf7\x67\\n\x81\x8b\xc3\x47\x8e\x00\xcc\xa5\xd9\xa4\x46\x20\x0e\xfb\x97\x66\\n\x36\x73\xae\x50\xf8\x1c\x60\x69\x69\xe9\x99\xc1\xc1\xc1\x69\x93\\n\xde\x26\x0a\x39\x26\xad\xcb\xec\xea\xc3\xcd\xcd\xe5\x62\xb1\xf8\\n\x08\xa0\x52\xa9\xcc\x99\xf4\x99\x03\xe3\x67\x3d\xaf\xd6\xb5\x80\\n\x20\x08\xfa\xb7\x9b\xcd\x3f\x24\xfd\xe9\x4e\x4e\xbe\x01\x70\xe5\\n\xf2\xe5\xc3\x61\x26\x73\x3d\xce\x75\x08\x38\x31\x3d\x1a\x9b\xad\\n\xf7\xb5\x5a\xa7\x27\xa6\xa6\xea\x00\x15\xdf\xff\xde\xcc\x86\x07\\n\xb2\xd9\x63\x49\x85\xe9\xec\xb7\x08\xb0\xd5\x68\x8c\x0b\x5e\x70\\n\xa4\x8f\xda\x37\x0f\x33\x99\xeb\x32\x3b\xbe\x8f\x6d\x7b\x3c\xf2\\n\x77\x26\xf3\x4d\x10\x04\xfd\x00\xe6\x38\x1f\x22\x1d\xdd\x6e\x36\\n\xcf\x24\x9d\x93\x28\x40\x66\x63\xc0\x5a\xbb\xe0\x9e\x3d\x74\xe8\\n\x82\x60\x04\x29\x39\x6d\xd1\xde\x4b\x5b\x8d\xc6\x05\x00\xd7\x75\\n\x7f\xc3\xec\x36\xd0\xbd\x00\x83\x9c\x49\x3f\xed\x59\x9a\x20\x0a\\n\x75\x3a\xa4\xd0\x22\x6e\x7b\xfe\xa3\xe0\x95\xae\x05\x60\xf6\x5c\\n\xfb\x9d\xc7\x38\x96\xca\xdf\xb5\x73\x14\x71\xdb\xb8\x8f\xd9\x50\\n\x12\x3d\xd5\xa1\xcc\xba\xea\x94\xfb\xea\x01\x43\x4a\x8c\x5c\xb2\\n\x00\xe9\x81\x49\x87\xf7\xac\xfc\xce\x13\xa6\x40\x70\xfb\xf1\x34\\n\xba\xfd\x83\xee\x05\x98\xfd\x8c\xd9\xe8\x9e\x95\x2b\xa9\xfc\x5d\\n\x3b\xc7\xe0\xea\xae\x1e\x9d\x04\x56\xbb\x16\x20\xa8\x21\x1d\xf7\\n\x7d\xff\x04\xc0\xc3\xcd\xcd\x65\xcc\xd6\x31\x53\xca\xe1\x02\x6e\\n\x0e\x1c\x3c\xb8\x0c\xb0\x52\x2e\xe7\x0c\x5e\x44\xfa\xba\x6b\x01\\n\xd9\x6c\xb6\x06\xdc\x8d\x7b\x3b\xc5\x62\xf1\x51\x5f\xab\x75\x1a\\n\xb8\x15\x53\x76\xd3\xd1\xce\xb1\xb4\x86\xe3\xbc\x99\xcf\xe7\x77\\n\x24\x59\x18\x7d\x5e\x77\xb6\x5b\xad\x6b\x5d\x0b\xc8\xe7\xf3\x3b\\n\x38\xce\x2c\x70\x2a\xee\xed\x4c\x4c\x4d\xd5\x07\xb2\xd9\x57\x91\\n\xde\x95\xb4\x0a\x34\x81\xa6\x60\xd5\xcc\xde\x19\x38\x70\xe0\x35\\n\xd7\x75\xef\x03\x54\x7d\xbf\x04\x9c\x94\xd9\xcc\xf4\xf4\x74\x2b\\n\xe9\x9c\x8e\x55\x5e\xf5\xfd\x05\xe0\x03\xa0\xe4\x7a\xde\x62\x27\\n\xbe\x24\xab\xfa\x7e\xc9\xcc\x3e\x01\x16\x5d\xcf\x2b\xa5\xf1\x3b\\n\x16\xd5\xbd\x8d\x8d\x92\xa4\x4b\xc0\x42\xd5\xf7\xbf\xab\x56\xab\\n\x2f\x27\x71\x57\xca\xe5\xdc\x17\x95\xca\x0f\x66\xf6\x29\xd1\x77\\n\xfc\x71\x27\xff\x4f\xfc\xce\x57\x7c\x7f\x2c\x34\x5b\x44\x3a\x1a\\n\xb7\xd7\x1b\x82\xbf\x62\x27\xcf\x23\x8d\x12\x35\xa0\x3b\x32\x9b\\n\x29\x14\x0a\x89\x85\xf7\x9f\x04\xc0\xe3\x1f\xf2\x8c\x60\x0c\xc8\\n\x61\x16\xf5\x09\xa9\x6e\xf0\x8b\xa4\xda\x76\xab\x75\x2d\x2d\xe7\\n\x3d\xf4\xd0\xc3\xbf\xf1\x0f\x78\xe5\x4e\xf2\x11\xe4\x69\x42\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x4a\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x14\x1a\x38\xc7\x37\xd0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xae\x49\x44\x41\x54\x78\xda\xed\x9b\x49\\n\x92\xc3\x20\x0c\x45\x23\x5d\xdc\xf6\xc9\xd3\xbb\xae\x54\x06\x26\\n\xe9\x7f\x09\x8c\xd6\x5d\x32\xef\x21\x68\x20\xf0\x78\xec\xd8\xb1\\n\xe3\xce\x21\xcc\x8f\x9d\xe7\xf9\x6c\xfc\x3b\x59\x42\x40\x2b\x70\\n\xa4\x10\xc9\x0a\xcd\x92\x21\xb3\x80\xa3\x44\xc8\x8c\xf0\x9e\x12\\n\x64\x46\x70\x4f\x11\x32\x3b\xbc\x55\x82\xcc\x0e\x6e\x15\x21\x2b\\n\xc1\x8f\x48\x90\xd5\xe0\x7b\x25\xe8\x5e\x0a\x2f\xd8\xfb\x3d\x55\\n\x20\x56\xf8\xe3\x38\xfe\x73\x5c\xd7\x45\x11\xf5\xfa\xcd\xda\x77\\n\x6b\x12\xd4\xbb\x61\xef\x8d\x43\xc3\x5b\x43\x11\xa5\x8f\x92\x30\\n\x92\xb7\xc6\xa0\xa8\x71\xef\x2d\xc1\x92\xaf\xc4\x62\x1e\x02\xa5\\n\xf1\xe7\x25\xa1\x94\xc7\x3a\xef\x88\x57\xef\xa3\x1a\xe9\x99\xf7\\n\xdb\x84\xe8\x36\x09\x22\x2a\x01\xd9\xf3\x90\xff\x02\x9e\x12\x18\\n\xf0\x5f\x87\x80\xc7\xa2\xc7\xda\x78\x24\xfc\xfb\x30\x80\x2c\x85\\n\x2d\x95\xc0\xea\x79\xf8\x5e\x60\x44\x02\x1b\x1e\xbe\x19\xea\x91\\n\x10\x01\xff\x31\x07\xa0\x36\x3d\x35\x38\x36\xfc\xeb\x3c\x40\xd9\\n\x0e\x8f\xce\x09\x8c\xcd\x15\xed\x3c\xa0\x17\x86\xb5\xb3\xa4\x1e\\n\x88\xb4\x42\xb1\xe0\xe9\x02\x5a\xe0\x98\xf0\x21\x02\x2c\xeb\x80\\n\xe9\x05\xb4\xc2\x31\x25\x68\x36\x78\xb6\x04\x8d\x86\x67\x9c\x27\\n\x84\x0a\x68\x81\x8f\x94\x00\xd9\x0d\x8e\xf6\x3c\x63\x51\x44\xd9\\n\x0d\x8e\xc2\x44\x54\x82\x66\x1a\xf3\x11\x12\x34\x13\x7c\x84\x04\\n\xb7\x43\x51\xc4\x18\xf6\xce\x07\x3d\x14\x45\x4c\x60\x8c\x4a\xd0\\n\xac\xf0\x2c\x09\x52\x28\x97\x67\x34\xbc\xe7\x77\x7e\xfd\x48\x1a\\n\x72\x26\x98\x21\x5f\x55\x80\xe5\xe6\x15\xaa\xb1\xa3\x79\x4b\x2c\\n\x9a\xbd\xe7\xd1\xf9\xcd\x17\x24\xb2\x47\xad\x92\xf7\x15\x99\x8e\\n\x64\xfb\x96\xd8\x8a\xb1\x2f\x4a\x0e\x24\xbf\xef\x55\xd9\xcc\x22\\n\x68\x97\xa5\x33\x4a\x08\xb9\x2e\x9f\x45\x82\xf5\xd1\xc4\x7e\x32\\n\x03\x68\xd8\x3d\x1f\x4d\x21\x65\x4c\xf5\x6c\xce\x43\x08\xf3\xe1\\n\xe4\x8e\xbb\xc7\x1f\xfe\x88\x5a\xe2\xcd\xef\x1c\x49\x00\x00\x00\\n\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xac\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x07\x00\x00\x00\x3f\x08\x06\x00\x00\x00\x2c\x7b\xd2\x13\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x2e\x14\xfa\xd6\xc4\xae\x00\x00\x00\x39\x49\x44\\n\x41\x54\x38\xcb\x63\x60\x20\x06\xc4\xc7\xc7\x33\xc4\xc7\xc7\xa3\\n\x88\x31\x61\x53\x84\x53\x12\xaf\xce\x91\x28\xc9\x82\xc4\xfe\x8f\\n\xc4\x66\x1c\x0d\xa1\x51\xc9\x51\xc9\x51\x49\x7c\x05\x06\xe3\x68\\n\x08\x91\x2a\x49\x3e\x00\x00\x88\x4b\x04\xd3\x39\x2e\x90\x3f\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xb6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x18\x00\x00\x00\x11\x08\x06\x00\x00\x00\xc7\x78\x6c\x30\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x2c\x0d\x1f\x43\xaa\xe1\x00\x00\x00\x36\x49\x44\x41\x54\x38\\n\xcb\x63\x60\x20\x01\x2c\x5a\xb4\xe8\xff\xa2\x45\x8b\xfe\x93\xa2\\n\x87\x89\x81\xc6\x60\xd4\x82\x11\x60\x01\x23\xa9\xc9\x74\xd0\xf9\\n\x80\x85\x1c\x4d\x71\x71\x71\x8c\xa3\xa9\x68\xd4\x82\x61\x64\x01\\n\x00\x31\xb5\x09\xec\x1f\x4b\xb4\x15\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x02\x42\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x17\x3b\x5f\x83\x74\x4d\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xa6\x49\x44\x41\x54\x78\xda\xed\x9b\xdb\\n\x0e\xc3\x20\x0c\x43\x9b\x68\xff\xdd\xf6\xcb\xb7\xb7\x69\x9a\x76\\n\x49\x4b\xec\x98\x42\x5e\x37\x51\x7c\x70\x28\x85\xb0\x2c\x33\x66\\n\xcc\x18\x39\x8c\xf9\xb0\x6d\xdb\xee\xc1\xff\xd9\x25\x00\x44\x05\\n\x57\x02\x31\x55\xd1\x2c\x18\xd6\x8b\x70\x14\x08\xeb\x51\x7c\x26\\n\x04\xeb\x51\x78\x26\x08\xeb\x5d\x7c\x2b\x04\xeb\x5d\x78\x2b\x08\\n\xbb\x92\xf8\x33\x10\xec\x6a\xe2\x8f\x42\xb8\x55\x76\x72\x5d\xd7\\n\x67\x27\xf7\x7d\x2f\x01\x6c\x55\xa3\xff\x2a\x1e\x05\x21\xe2\x02\\n\x53\x11\x5f\x05\xc1\x2b\x6d\x7f\xe6\x77\x6a\x0a\x64\x8f\xfe\x11\\n\x71\x99\x4e\xf8\xe5\x02\x53\x14\xcf\x84\xe0\xd5\xb6\xff\x25\x92\\n\x91\x0e\x86\x1e\xfd\xa8\x78\xc6\xc4\xf8\xc9\x05\xae\x32\xf2\x55\\n\x4e\x70\x25\xdb\x57\x40\x30\x84\xfd\x5b\xed\x8c\x4c\x87\xf7\x34\\n\x70\x85\x91\xaf\x74\x82\xab\x89\x67\x43\x70\x45\xf1\x4c\x08\x96\\n\x91\xff\xe8\x57\x58\x76\xfb\xaf\xf3\x80\x2b\x8e\x3c\xd3\x09\xae\\n\x2e\x1e\x0d\xc1\x7b\x10\x8f\x84\xe0\xcc\x4e\x2a\xb6\x4f\x5d\x07\\n\x28\xb6\xef\x6a\x39\xc9\x4e\x3b\x57\xcb\x49\xf6\x9c\xe3\xc8\x9c\\n\xcc\x82\x80\x9c\x70\x53\xe6\x00\x24\x04\xf4\xdb\x26\xf5\x6b\x30\\n\xbb\xb3\x08\xf1\xd0\xaf\xc1\x4c\x27\xb0\xd6\x19\xd4\x75\x40\x14\\n\x02\x73\x91\x05\xd9\x11\x6a\x81\xc0\x5e\x61\x42\x37\x45\x8f\x8a\\n\x41\x8b\xa7\x6f\x8a\x1e\x71\x42\xc5\xb7\x05\x1c\x40\x14\x42\x95\\n\xf8\xaf\x29\x90\x99\x06\x2d\xeb\x81\xcb\x9c\x0c\x9d\x11\xc3\xaa\\n\x17\xa0\x1e\x8e\x46\x9d\xc0\x3c\x22\xa7\x1f\x8f\xff\x13\xc7\xae\\n\x14\x29\x29\x90\xf8\xe6\x04\x84\xf8\x7f\x05\x12\x65\x25\x32\xef\\n\x10\x2a\xc4\x87\x01\x20\x21\xa0\x22\x5a\x25\xe6\xcb\xe0\x31\x0b\\n\x25\x4f\x34\x3e\x6e\xa9\xac\x32\x08\x5a\xb1\xb4\x22\x84\x92\x72\\n\x79\x15\x08\xad\x97\x26\xe6\x95\x19\x40\xc7\xc6\xbc\x34\x85\x84\\n\xd1\xd5\xb5\xb9\x0c\x20\xcc\x8b\x93\x33\x46\x8f\x07\x53\x21\x72\\n\xe7\x17\x36\x2b\x63\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\\n\x82\\n\x00\x00\x02\xd8\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x55\x49\x44\\n\x41\x54\x58\x85\xed\x95\x4d\x4f\x53\x51\x10\x86\x9f\xb9\x1a\x12\\n\xef\x4f\x10\x0d\xc1\xb0\x12\x4d\xb0\xf1\x0f\xc0\x06\xe3\x06\x48\\n\x4c\x77\xd0\x0f\x16\x6c\x8d\x01\x2c\xae\x58\x68\x82\x05\xff\xc2\\n\x3d\xad\xec\xae\x89\x16\x57\x7e\x2c\xc4\xad\xf1\x8b\x68\x62\x0c\\n\x21\xa4\xb1\x86\x3f\xd0\x86\x86\x26\x7d\x5d\xb4\x21\xc6\x70\x5b\\n\x2e\xb0\xb3\xef\x76\xe6\xcc\x3c\x67\xce\x99\x19\xe8\xa9\xa7\xff\\n\x5d\x16\xc7\x39\x0c\xc3\xbe\xfd\x6a\x75\x4a\x66\x93\x06\x09\xa0\\n\xbf\x6d\xaa\x60\xf6\x59\x50\xf2\x7d\xbf\x94\x4c\x26\x0f\xce\x1c\\n\xa0\x18\x04\x77\x30\xcb\x03\x83\x06\xdf\x04\x9b\x32\xab\x00\x78\\n\xcd\x66\x3f\x66\xa3\x82\xeb\xc0\x8e\xc1\xe2\x4c\x26\xf3\xfc\x4c\\n\x00\xc2\x30\x3c\xb7\x5f\xab\xe5\x81\x7b\x06\xaf\xac\xd9\xcc\x4d\\n\xcf\xce\x6e\x1d\xe5\xeb\x9c\x1b\xf1\x60\x05\x18\x07\x56\x77\xcb\\n\xe5\xdc\xf2\xf2\x72\xb3\x53\xfc\xf3\xdd\x00\xda\xc9\xef\x4a\x5a\\n\x48\x65\xb3\x6b\x9d\x7c\x33\x99\xcc\x57\xe0\x56\xd1\xb9\x05\x60\\n\x65\x70\x60\x00\x60\xb1\xd3\x99\x8e\x15\x68\x97\xfd\x99\x99\xcd\\n\xcf\xa4\xd3\x4f\xba\xc1\xfe\xad\x42\xa1\xb0\x68\xd2\x63\x0f\xa6\\n\xa6\x33\x99\x52\x6c\x80\x30\x0c\xfb\xea\xb5\xda\x0f\x49\x3f\x53\\n\xd9\xec\xed\x38\xc9\x0f\x21\x9c\x7b\x63\x66\x83\x17\x7c\x7f\x38\\n\xea\x63\x7a\x51\x87\xf7\xab\xd5\x29\xc1\x15\x4f\x5a\x3a\x49\x72\\n\x00\xf3\xbc\xfb\x48\x43\xf5\x5a\x6d\x22\xca\x27\x12\x40\x66\x93\\n\xc0\x56\xd4\x87\x3b\x8e\x52\xa9\xd4\x17\xcc\xbe\x03\xf1\x01\x0c\\n\x12\x26\xbd\x3f\x69\xf2\x43\x49\xef\x04\x37\xa3\xcc\xd1\x5d\x60\\n\x76\x51\x50\x39\x35\x00\xfc\xc6\xac\x3f\xca\x18\x59\x01\x00\x99\\n\xc5\x9a\x94\x47\xc9\xc0\x90\x22\x67\x41\x34\x80\xb4\x67\xd2\xa5\\n\xd3\x02\xa8\x75\xfb\xbd\x28\x7b\xa7\x27\xf8\x08\x8c\x9e\x1a\x40\\n\x1a\x33\xf8\x10\x65\x8f\xee\x02\x28\x21\x5d\x73\xce\x8d\x9c\x34\\n\xf9\x7a\x10\x24\x0c\xae\x22\xbd\x8c\x0d\xe0\xfb\x7e\x09\xd8\x69\\n\xcf\xf6\xd8\x92\x64\xcd\xd6\xf2\xda\xae\x37\x1a\x1b\xb1\x01\x92\\n\xc9\xe4\x01\x9e\xb7\x00\x8c\xb7\x67\x7b\x2c\x15\x9d\xcb\x01\x63\\n\x32\x9b\x9f\x9b\x9b\x6b\xc4\x06\x00\x48\xa5\x52\x2f\x80\x55\x60\\n\xe5\xb8\x10\x92\xac\x10\x04\x4b\x66\xf6\x10\xc8\xa7\xd3\xe9\xc8\\n\xf2\x77\x05\x00\xd8\x2d\x97\x73\x92\xd6\x80\x7c\xd1\xb9\xd7\xc5\\n\x62\xf1\x46\x94\xef\x7a\x10\x24\x9e\x16\x0a\x6f\xcd\xec\x11\xad\\n\x75\xfc\xa0\x5b\xfc\x63\xf7\xf9\xba\x73\x93\x4d\xb3\x55\xa4\xa1\\n\xf6\x78\xdd\x14\xfc\x6a\x07\xb9\x8c\x34\x0a\x0c\x03\xdb\x32\x9b\\n\xef\x76\xf3\xd8\x00\x70\xb8\x21\x27\x04\x93\x40\x02\xb3\xd6\x9c\\n\x90\x2a\x06\x9f\x24\x95\xea\x8d\xc6\x46\xa7\x37\xef\xa9\xa7\x9e\\n\xfe\xd5\x1f\x3e\xd4\xef\x44\x0d\xbc\xff\x65\x00\x00\x00\x00\x49\\n\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x9f\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x14\x1f\xf9\\n\x23\xd9\x0b\x00\x00\x00\x23\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x0d\xe6\x7c\x80\xb1\x18\x91\x05\x52\x04\xe0\x42\x08\x15\x29\x02\\n\x0c\x0c\x8c\xc8\x02\x08\x95\x68\x00\x00\xac\xac\x07\x90\x4e\x65\\n\x34\xac\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xd0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x4d\x49\x44\\n\x41\x54\x58\x85\xed\xd7\x4d\x4e\xc2\x40\x18\xc6\xf1\xff\x5b\x08\\n\x08\xea\x01\xd0\x2b\x88\x09\x5b\xcf\x21\xbb\xca\xd8\x1a\x49\xe0\\n\x3e\x62\x42\x42\x69\x49\x97\x78\x0c\xd7\x84\x70\x07\x71\xef\x07\\n\x02\x81\xd7\x85\xd4\x10\xc0\xdd\x10\x13\xed\xb3\x9b\xc9\x9b\x79\\n\x7e\x93\x6e\x3a\xf0\xdf\x23\x9b\x6b\xcf\x98\x6b\xa0\x01\x94\x81\\n\x03\x4b\x3d\x1f\xc0\x48\x44\x5a\x41\x18\x46\x80\xee\x02\x88\x67\\n\x4c\x08\xd4\x80\x29\x30\x00\x5e\x2d\x01\x8e\x80\x0a\x90\x07\xba\\n\xdd\x28\xba\x49\x10\xdf\x00\xcf\x18\x0f\x08\x04\x1e\xb3\x8b\x45\\n\xb5\x1d\xc7\x63\x4b\xe5\x00\xd4\x5d\xb7\x34\x77\x9c\x3e\x22\x17\\n\x02\x26\x88\xa2\x1e\x80\xb3\x36\xd3\x00\xa6\x4b\x91\x4b\xdb\xe5\\n\x00\xed\x38\x1e\x4b\x36\x5b\x05\x66\x2a\xd2\x4c\xf6\xd7\x01\x67\\n\xc0\x20\x0c\xc3\x67\xdb\xe5\x49\x82\x20\x78\x42\x64\x80\x6a\x79\\n\x17\xa0\x80\xea\xfb\xbe\xca\xbf\xb3\x5c\xbe\x01\xc5\x5d\x80\x5f\\n\x49\x0a\x48\x01\x29\x20\x05\xa4\x80\x14\x90\x02\x52\xc0\x3a\x60\\n\x82\x48\xf1\xc7\x49\x6b\x8d\xce\x21\x30\xd9\x02\x28\x8c\x80\x4a\\n\xdd\x75\x4b\xfb\xea\xae\xd5\x6a\xa7\xa8\x56\x80\xe1\x16\xc0\x11\\n\xb9\x07\xf2\xf3\x4c\xe6\xc1\xf7\xfd\x93\x7d\x94\x67\x44\xfa\x40\\n\x4e\x45\x5a\xc9\xfe\xe6\xc3\xa4\x03\x78\xc0\x6c\xf5\xf7\xfa\x62\\n\xa5\x5d\xe4\x78\x75\xf3\x9c\x42\x27\x8c\xa2\x5b\x36\x1f\x26\xc9\\n\xa8\x6f\xcc\x95\x8a\x34\x51\x3d\x07\x0a\x56\x00\x5f\xdf\x7c\x88\\n\xea\x5d\xb7\xd7\x8b\x2d\x9d\xf9\x47\xf2\x09\x3e\x70\x64\x41\x95\\n\x87\xdf\x69\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xc3\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdc\x0b\x07\x09\x2e\x37\xff\x44\xe8\xf0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x00\x27\x49\x44\x41\x54\x78\xda\xed\xc1\x01\\n\x0d\x00\x00\x00\xc2\xa0\xf7\x4f\x6d\x0e\x37\xa0\x00\x00\x00\x00\\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x77\x03\x40\x40\\n\x00\x01\xaf\x7a\x0e\xe8\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x01\xd0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x4d\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\xc3\x40\x14\x00\xe7\x45\x51\xc2\\n\xf7\x00\x81\x2b\x00\x52\xee\x42\xca\x8d\xed\x58\x14\x70\x1f\x42\\n\x65\x99\x8d\x29\xc3\x1d\x68\xa8\xa3\x28\x77\x20\xf4\x7c\x42\x3e\\n\xf2\xa3\x70\x8c\x8c\x4c\xb9\x16\x12\x78\x2a\x5b\x5a\x79\x66\x25\\n\x17\xef\xc1\x7f\x47\x8a\x2f\xaa\x2a\x36\x8e\xfd\x86\xc8\xa5\xc2\\n\x29\xb0\xe3\xc8\xf3\x21\x30\x03\x86\xc6\xf7\xad\x88\x68\x29\x40\\n\x55\x25\x89\xe3\x5b\x15\xe9\x03\x4b\x60\x82\xc8\xab\x13\xbd\xea\\n\x01\xd0\x05\xda\x88\xc4\x7d\xcf\x0b\xf3\x88\x66\x7e\xc6\xc6\xb1\\n\x2f\x99\xfc\xb1\xd1\x6c\xf6\x8c\x31\x73\x27\xf2\x2d\x49\x92\x74\\n\xd2\xcd\x66\x8c\x6a\x60\xad\x7d\x00\x46\x00\x8d\xfc\x40\x43\xe4\\n\x12\x58\xa6\x70\xee\x5a\x0e\x60\x8c\x99\x6f\xd2\xb4\x07\xac\x44\\n\xf5\xea\xcb\x9b\x3f\x28\x9c\x00\x93\x20\x08\x9e\x5d\xcb\x73\xc2\\n\x30\x7c\x02\x26\x64\xff\xd7\xf7\x00\x60\x17\x78\xaf\x4a\x5e\xe0\\n\x0d\xd8\xfb\x29\xe0\x57\xa8\x03\xea\x80\x3a\xa0\x0e\xa8\x03\xea\\n\x80\x3a\xa0\x0e\x28\x06\x2c\x28\x4c\x2a\x15\xb2\xbf\x75\x95\x02\\n\x66\x40\x37\x49\x92\x4e\x55\x66\x6b\xed\x31\xd9\x78\x3e\x2d\x05\\n\x08\xdc\x00\xed\x74\xbd\xbe\x8f\xa2\xe8\xa8\x12\x79\x9a\x8e\x81\\n\x96\xc0\xb0\xe0\xcd\x50\x55\x19\x59\x1b\xa1\x1a\x00\x2b\xb2\xc5\\n\xe4\xc5\x89\x5d\xf5\x90\xec\xe6\x2d\x85\xc8\xf3\xfd\x8b\x7c\x31\\n\x29\xaf\x66\xd6\x9a\xed\xdc\x7e\x46\x36\x29\xbb\x60\x01\x4c\x51\\n\xbd\xf6\x06\x83\x3b\x47\xdf\xfc\x23\x7c\x02\x90\xc4\x75\x30\xa3\\n\x38\xd1\xd4\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xef\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x51\x00\x00\x00\x3a\x08\x06\x00\x00\x00\xc8\xbc\xb5\xaf\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x2a\x32\xff\x7f\x20\x5a\x00\x00\x00\x6f\x49\x44\x41\x54\x78\\n\xda\xed\xd0\xb1\x0d\x00\x30\x08\x03\x41\xc8\xa0\x0c\xc7\xa2\x49\\n\xcf\x04\x28\xba\x2f\x5d\x59\x97\xb1\xb4\xee\xbe\x73\xab\xaa\xdc\\n\xf8\xf5\x84\x20\x42\x84\x28\x88\x10\x21\x42\x14\x44\x88\x10\x21\\n\x0a\x22\x44\x88\x10\x05\x11\x22\x44\x88\x82\x08\x11\x22\x44\x41\\n\x84\x08\x51\x10\x21\x42\x84\x28\x88\x10\x21\x42\x14\x44\x88\x10\\n\x21\x0a\x22\x44\x88\x10\x05\x11\x22\x44\x88\x82\x08\x11\x22\x44\\n\x41\x84\x08\x51\x10\x21\x42\xfc\xaa\x07\x12\x55\x04\x74\x56\x9e\\n\x9e\x54\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x56\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x14\x2d\x80\x7a\x92\xdf\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xba\x49\x44\x41\x54\x78\xda\xed\x9b\x5b\\n\x92\x02\x21\x0c\x45\x4d\x16\xa6\x1b\xd0\xd5\x8e\x1b\xd0\x8d\xe9\\n\x9f\x65\x39\xda\x3c\x92\x7b\x13\x68\xf2\x3d\x95\xe6\x1c\x1e\x43\\n\x10\x0e\x87\x15\x2b\x56\xec\x39\x84\xf9\xb1\xbf\xe3\xf1\x51\xf3\\n\x77\x97\xfb\x5d\xa6\x10\x50\x0b\x1c\x29\x44\xb2\x42\xb3\x64\xc8\\n\x28\xe0\x28\x11\x32\x22\xbc\xa7\x04\x19\x11\xdc\x53\x84\x8c\x0e\\n\x6f\x95\x20\xa3\x83\x5b\x45\xc8\x4c\xf0\x3d\x12\x64\x36\xf8\x56\\n\x09\xba\xb6\xc2\x13\xf6\x7e\xcb\x28\x10\x2b\xfc\xf9\x76\x7b\xe5\\n\xb8\x9e\x4e\x14\x51\xef\xdf\x2c\x7d\xb7\x24\x41\xbd\x1b\xf6\xd9\\n\x38\x34\xbc\x35\x14\x31\xf4\x51\x12\x7a\xf2\x96\x18\x14\x35\xef\\n\xbd\x25\x58\xf2\x6d\xb1\x98\xa7\xc0\xd6\xfc\xf3\x92\xb0\x95\xc7\\n\xba\xee\x88\x57\xef\xa3\x1a\xe9\x99\xf7\xdb\x82\xe8\xb6\x08\x22\\n\x46\x02\xb2\xe7\x21\xff\x05\x3c\x25\x30\xe0\xbf\x4e\x01\x8f\x4d\\n\x8f\xb5\xf1\x48\xf8\xcf\x69\x00\xd9\x0a\x5b\x46\x02\xab\xe7\xe1\\n\xb5\x40\x8f\x04\x36\x3c\xbc\x18\x6a\x91\x10\x01\xff\x6f\x0d\x40\\n\x15\x3d\x25\x38\x36\xfc\xfb\x3a\x40\x29\x87\x7b\xd7\x04\x46\x71\\n\x45\x3b\x0f\x68\x85\x61\x55\x96\xd4\x03\x91\x5a\x28\x16\x3c\x5d\\n\x40\x0d\x1c\x13\x3e\x44\x80\x65\x1f\x30\xbc\x80\x5a\x38\xa6\x04\\n\xcd\x06\xcf\x96\xa0\xd1\xf0\x8c\xf3\x84\x50\x01\x35\xf0\x91\x12\\n\x20\xd5\x60\x6f\xcf\x33\x36\x45\x94\x6a\xb0\x17\x26\x62\x24\x68\\n\xa6\x39\x1f\x21\x41\x33\xc1\x47\x48\x70\x3b\x14\x45\xcc\x61\xef\\n\x7c\xd0\x43\x51\xc4\x02\xc6\x18\x09\x9a\x15\x9e\x25\xe1\x67\x82\\n\xda\x69\xc0\xaa\xe7\xad\xdf\xf9\xf5\x23\x69\xc8\x99\x60\x86\x7c\\n\x45\x01\x96\x9b\x57\xa8\xc6\xf6\xe6\xdd\x62\xd1\xec\x3d\x8f\xce\\n\x6f\xbe\x20\x91\x3d\x4a\x23\x79\x5d\x91\xa9\x4d\xb6\x6e\x89\x4d\\n\x1a\xeb\xa2\x64\x6b\xf2\x5d\x5f\x95\xcd\x2c\x82\x76\x59\x3a\xa3\\n\x84\x90\xeb\xf2\x59\x24\x58\x1f\x4d\xac\x27\x33\xde\x0d\xdb\xed\\n\xa3\x29\xa4\x8c\xa1\x9e\xcd\x79\x08\x61\x3e\x9c\x5c\xb1\xf7\x78\\n\x02\x51\xa0\x5a\x91\x77\xd2\x02\x23\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x01\xec\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x69\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\xc3\x40\x10\x86\xbf\xb1\xa2\x84\\n\xe7\x01\x02\x57\x00\xa4\xdc\x85\x94\x8e\xed\x44\x14\x70\x1f\x42\\n\x65\x2d\x1b\x53\x86\x3b\xd0\x50\x47\x51\xee\x40\xe8\x79\x84\x3c\\n\xe4\xa1\x70\x8c\x8c\x2c\x25\x05\x36\x05\xf8\xaf\x76\xb5\x23\x7f\\n\x9f\xad\x95\x3c\x03\xff\x3d\x92\xdd\xa8\xaa\x58\x63\x7c\x47\xe4\\n\x52\xe1\x14\xd8\x29\x88\xf3\x21\x30\x01\xfa\xae\xef\x5b\x11\xd1\\n\x9c\x80\xaa\x4a\x64\xcc\xad\x8a\x74\x80\x39\x30\x42\xe4\xb5\x10\\n\xbc\xea\x01\xd0\x02\x1a\x88\x98\x8e\xe7\xf5\x52\x89\x5a\x5a\x63\\n\x8d\xf1\x25\x81\x3f\x3a\xb5\x5a\xdb\x75\xdd\x69\x21\xf0\x75\xa2\\n\x28\x6a\xc6\xab\xd5\x10\xd5\xc0\x5a\xfb\x00\x0c\x00\x9c\xb4\xc0\\n\x11\xb9\x04\xe6\x31\x9c\x17\x0d\x07\x70\x5d\x77\xba\x8a\xe3\x36\\n\xb0\x10\xd5\xab\x2f\x6e\xba\x50\x38\x01\x46\x41\x10\x3c\x17\x0d\\n\x4f\xd3\xeb\xf5\x9e\x80\x11\xc9\xfd\xfa\x2e\x00\xec\x02\xef\x65\\n\xc1\x33\x79\x03\xf6\xd2\x4d\x6d\x43\x21\x00\xd6\x18\xdd\x56\xb3\\n\x29\x5e\x10\xc8\xa6\x73\x67\xd3\xe1\x6f\xa4\x12\xa8\x04\x2a\x81\\n\x4a\xa0\x12\xa8\x04\x2a\x81\xad\xfd\xc0\xb6\xff\xf9\x4f\x93\xfd\\n\x02\x33\x32\x9d\x4a\x89\xd9\x5f\xb3\x72\x02\x13\xa0\x15\x45\x51\\n\xb3\x2c\xb2\xb5\xf6\x98\xa4\x3d\x1f\xe7\x04\x04\x6e\x80\x46\xbc\\n\x5c\xde\x87\x61\x78\x54\x0a\x3c\x8e\x87\x40\x5d\xa0\x9f\xe1\x26\\n\x51\x55\x19\x58\x1b\xa2\x1a\x00\x0b\x92\xc1\xe4\xa5\x10\xba\xea\\n\x21\xc9\x9b\xd7\x15\x42\xcf\xf7\x2f\xd2\xc1\x24\x3f\x9a\x59\xeb\\n\xae\xfb\xf6\x33\x92\x4e\xb9\x88\xcc\x80\x31\xaa\xd7\x5e\xb7\x7b\\n\x57\xd0\x33\xff\x48\x3e\x01\xac\x18\x7a\x56\x83\xd7\xe8\x6e\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1d\x00\xb0\\n\xd5\x35\xa3\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x06\xfe\x9f\x67\x60\x60\x42\x30\xa1\x1c\x08\x93\x81\x81\x09\xc1\\n\x64\x60\x60\x62\x60\x60\x34\x44\xe2\x20\x73\x19\x90\x8d\x40\x02\\n\x00\x64\x40\x09\x75\x86\xb3\xad\x9c\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\x96\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x02\x62\x4b\x47\x44\x00\xd3\xb5\x57\xa0\x5c\x00\x00\\n\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\\n\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x0b\x07\x0c\\n\x0d\x1b\x75\xfe\x31\x99\x00\x00\x00\x27\x49\x44\x41\x54\x08\xd7\\n\x65\x8c\xb1\x0d\x00\x00\x08\x83\xe0\xff\xa3\x75\x70\xb1\xca\xd4\\n\x90\x50\x78\x08\x55\x21\x14\xb6\x54\x70\xe6\x48\x8d\x87\xcc\x0f\\n\x0d\xe0\xf0\x08\x02\x34\xe2\x2b\xa7\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1c\x1f\x24\\n\xc6\x09\x17\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\xff\xcf\xc3\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x0e\\n\xa3\x21\x9c\xc3\x68\x88\x61\x1a\x0a\x00\x00\x6d\x84\x09\x75\x37\\n\x9e\xd9\x23\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa5\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x02\x04\x6d\\n\x98\x1b\x69\x00\x00\x00\x29\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\xff\xcf\xa3\x08\x18\x32\x32\x30\x20\x0b\x32\x1a\\n\x32\x30\x30\x42\x98\x10\x41\x46\x43\x14\x13\x50\xb5\xa3\x01\x00\\n\xd6\x10\x07\xd2\x2f\x48\xdf\x4a\x00\x00\x00\x00\x49\x45\x4e\x44\\n\xae\x42\x60\x82\\n\x00\x00\x00\xbb\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x3f\x00\x00\x00\x07\x08\x06\x00\x00\x00\xbf\x76\x95\x1f\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x09\x35\x2b\x55\xca\x52\x6a\x00\x00\x00\x3b\x49\x44\x41\x54\x38\\n\xcb\x63\x60\x18\x05\x23\x13\x30\x12\xa3\xa8\xbe\x7d\x2a\x25\x76\\n\xfc\xa7\x97\x3b\xd1\xc1\xaa\xa5\x73\x18\xae\x5f\x39\x8f\x53\x9e\\n\x69\x34\xe6\x09\x00\x4d\x1d\xc3\x21\x19\xf3\x0c\x0c\x0c\x78\x63\\n\x7e\x14\x8c\x54\x00\x00\x69\x64\x0b\x05\xfd\x6b\x58\xca\x00\x00\\n\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xe0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x51\x00\x00\x00\x3a\x08\x06\x00\x00\x00\xc8\xbc\xb5\xaf\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x29\x1c\x08\x84\x7e\x56\x00\x00\x00\x60\x49\x44\x41\x54\x78\\n\xda\xed\xd9\xb1\x0d\x00\x20\x08\x00\x41\x71\x50\x86\x63\x51\xed\\n\x8d\x85\x25\x89\x77\xa5\x15\xf9\x48\x45\x8c\xa6\xaa\x6a\x9d\x6f\\n\x99\x19\x1d\x67\x9d\x03\x11\x45\x14\x11\x11\x45\x14\x51\x44\x44\\n\x14\x51\x44\x11\x11\x51\x44\x11\x45\x44\x44\x11\x45\x14\x11\x11\\n\x45\x14\xf1\x5b\xd1\x75\xb0\xdb\xdd\xd9\x4f\xb4\xce\x88\x28\x22\\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcf\x36\xce\x69\x07\x1e\xe9\\n\x39\x55\x40\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\xf8\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x75\x49\x44\\n\x41\x54\x58\x85\xed\x96\xcd\x4e\x13\x51\x18\x86\x9f\xaf\x15\xd2\\n\x32\x78\x03\x56\x4d\x69\x58\x89\xa6\x3f\xf1\x06\x20\x26\x1a\x37\\n\x94\x84\xd9\xb6\x33\xc4\x0b\x30\x46\x10\x34\x51\x16\x2e\x48\xd1\\n\xb8\x72\x43\xb4\x74\xd8\x92\x98\xe2\xca\xb8\x11\x37\x2c\x8c\xda\\n\x36\x12\xc0\x10\x40\x03\x86\x0b\xc0\x54\xa3\x71\x3e\x17\xb4\xd1\\n\x44\xa6\x65\x0a\x3b\xfb\x6c\xbf\xf7\x9c\xf7\x49\xe6\xcc\x99\x81\\n\x36\x6d\xfe\x77\xc4\x4f\xd8\x34\xcd\xce\xee\x70\x78\x48\x44\xd2\\n\x40\x4a\x21\x02\x80\xea\x0e\x22\xef\x05\x8a\x7b\xd5\x6a\x71\x7e\\n\x7e\xfe\xc7\xb1\x0b\xd8\x99\xcc\xb0\x8a\xe4\x04\x7a\x80\x0f\xa2\\n\xba\xa8\x22\x3b\xb5\x71\x04\xe8\x07\x2e\x00\x1b\x2a\x32\x56\x28\\n\x14\x9e\x1d\x8b\x80\x69\x9a\xc1\x93\x86\x91\x53\xd5\x1b\x02\x2f\\n\x08\x06\xc7\xf3\xf9\x7c\xe5\xa0\xac\x65\x59\x09\x81\x29\x54\x2f\\n\xab\xea\x74\x34\x16\x1b\x9f\x9c\x9c\x74\x1b\xed\x7f\xa2\x99\x40\\n\xad\xfc\x3a\x30\x9a\x77\x9c\x07\x8d\xb2\x85\x42\xa1\x0c\x5c\x19\\n\xb1\xac\x51\x60\xea\xd3\xe6\x26\xc0\x58\xa3\x35\xc1\x46\x43\x3b\\n\x93\x19\x06\x1e\x09\x8c\xce\x3a\xce\xc3\x66\xb2\x75\x4a\xe5\xf2\\n\x52\x32\x91\xf8\x2e\x22\xf7\x12\xc9\x64\xa5\x5c\x2e\xaf\x79\x65\\n\x3d\x1f\x81\x69\x9a\x9d\xdd\x5d\x5d\xab\xc0\xc7\x59\xc7\xb9\x7a\\n\xd8\xf2\xbf\xb1\xb3\xd9\x97\x40\xcf\xd7\x6a\xb5\xcf\xeb\x60\x06\\n\xbc\x16\x77\x87\xc3\x43\x40\x4c\x82\xc1\x89\x56\xca\x01\x02\xaa\\n\xb7\x80\x5e\xc3\x30\x06\x3d\x33\x5e\x03\x11\x49\xa3\x5a\xf1\x3a\\n\x70\x87\xe1\xe9\xdc\x5c\x09\x58\x46\xd5\xbf\x00\x90\x42\xe4\x75\\n\xab\xe5\x75\x44\xf5\x95\xa8\x5e\xf4\x2d\xa0\x70\x4a\xfe\xbc\xe7\\n\x2d\xe3\xc2\x17\x44\x22\xbe\x05\x00\x54\xd5\xd7\x4d\x79\x60\x41\\n\x20\x20\xfb\x1e\xfe\x05\x76\x45\xf5\xf4\x51\x05\x54\x35\x82\xea\\n\x6e\x2b\x02\x6f\x55\xa4\xff\xa8\x02\xc0\x80\xc0\x1b\xdf\x02\x02\\n\x45\xe0\xbc\x65\x59\x89\x56\x9b\x6d\xdb\x4e\x01\xe7\x14\x9e\xfb\\n\x16\xd8\xab\x56\x8b\xc0\x86\xc0\x54\x8b\xfd\x22\xae\x9b\x03\xd6\\n\x3b\x42\xa1\x05\xaf\x90\xe7\x55\xbc\xb2\xb2\xf2\x2b\x15\x8f\x6f\\n\x03\x77\x52\xc9\x64\xb5\x54\x2e\x2f\xf9\x69\xb7\xb3\xd9\x09\xe0\\n\x9a\xc0\xc8\x93\x7c\x7e\xd5\xb7\x00\x40\xa9\x52\x59\x4b\xc4\xe3\\n\x06\x70\x37\x95\x4c\x7e\x3b\xa4\x84\xd4\xca\xef\x8b\xc8\x74\xde\\n\x71\x1e\x37\x0a\x37\xfd\x1a\x46\x63\xb1\xf1\xcf\x5b\x5b\xaa\xaa\\n\x39\x2b\x9b\xbd\x14\x54\x1d\xaf\xdd\x70\xff\x60\xdb\x76\x4a\x5c\\n\x37\xa7\x30\x20\x22\xb9\xb3\xd1\xe8\xed\xa6\xb6\xcd\x02\x75\x2c\\n\xcb\x4a\x8b\xea\x34\xd0\x0b\x2c\x03\x8b\xc0\x76\x6d\x7c\x86\xfd\\n\x1f\x92\x3e\x60\x5d\xe0\x66\xde\x71\x3c\x0f\x5e\x4b\x02\xb0\xff\\n\x85\x34\x0c\x63\x50\x5c\x37\x8d\x48\x0a\xa8\xdf\x13\x3b\x0a\xef\\n\x44\xb5\xd8\x11\x0a\x2d\xcc\xcc\xcc\xfc\xf4\xb3\x6f\x9b\x36\xff\\n\x37\xbf\x01\x4a\x37\xdd\xdd\x8c\xf1\x82\x6a\x00\x00\x00\x00\x49\\n\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xe4\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x36\x00\x00\x00\x0a\x08\x06\x00\x00\x00\xff\xfd\xad\x0b\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\x7f\x00\x87\x00\x95\xe6\xde\xa6\xaf\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x09\x2a\x2b\x98\x90\x5c\xf4\x00\x00\x00\x64\x49\x44\x41\x54\x48\\n\xc7\x63\xfc\xcf\x30\x3c\x01\x0b\xa5\x06\x34\xb4\x4f\x85\x87\xcd\\n\xaa\xa5\x73\x18\xae\x5d\x39\xcf\x48\x2b\x35\x14\x79\xcc\xd8\xc8\\n\x88\x24\x03\x7c\x89\xd0\x4f\x2d\x35\x84\xc0\xd9\x73\xe7\xe0\x6c\\n\x26\x86\x91\x92\x14\x91\x7d\x4d\x54\x52\x0c\x4d\x26\xa8\x9f\x5a\\n\x6a\x46\x93\xe2\x68\x52\x1c\x82\x49\x91\x91\xd2\x7a\x4c\x4b\xc7\\n\x10\xc5\x08\x6c\xc5\x34\xb5\xd4\xd0\xd5\x63\x83\x15\x00\x00\x7a\\n\x30\x4a\x09\x71\xea\x2d\x6e\x00\x00\x00\x00\x49\x45\x4e\x44\xae\\n\x42\x60\x82\\n\x00\x00\x00\x93\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x02\x62\x4b\x47\x44\x00\xd3\xb5\x57\xa0\x5c\x00\x00\\n\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\\n\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x0b\x07\x0c\\n\x0c\x2b\x4a\x3c\x30\x74\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\\n\x63\x60\x40\x05\xff\xff\xc3\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\\n\xc5\x70\x0e\x23\x23\x9c\xc3\xc8\x88\x61\x1a\x0a\x00\x00\x9e\x14\\n\x0a\x05\x2b\xca\xe5\x75\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x1b\x0e\x16\\n\x4d\x5b\x6f\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\x73\x3e\x20\x0b\xa4\x08\x30\x32\x30\x20\x0b\xa6\\n\x08\x30\x30\x30\x42\x98\x10\xc1\x14\x01\x14\x13\x50\xb5\xa3\x01\\n\x00\xc6\xb9\x07\x90\x5d\x66\x1f\x83\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\x81\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x10\x00\x00\x00\x10\x01\x03\x00\x00\x00\x25\x3d\x6d\x22\\n\x00\x00\x00\x06\x50\x4c\x54\x45\x00\x00\x00\xae\xae\xae\x77\x6b\\n\xd6\x2d\x00\x00\x00\x01\x74\x52\x4e\x53\x00\x40\xe6\xd8\x66\x00\\n\x00\x00\x29\x49\x44\x41\x54\x78\x5e\x05\xc0\xb1\x0d\x00\x20\x08\\n\x04\xc0\xc3\x58\xd8\xfe\x0a\xcc\xc2\x70\x8c\x6d\x28\x0e\x97\x47\\n\x68\x86\x55\x71\xda\x1d\x6f\x25\xba\xcd\xd8\xfd\x35\x0a\x04\x1b\\n\xd6\xd9\x1a\x92\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\\n\x00\x00\x00\xdc\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x10\x00\x00\x00\x40\x08\x06\x00\x00\x00\x13\x7d\xf7\x96\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x2d\x19\xaf\x4a\xeb\xd0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x00\x40\x49\x44\x41\x54\x58\xc3\xed\xce\x31\\n\x0a\x00\x20\x0c\x03\x40\xf5\xa3\x7d\x5b\x5f\xaa\x53\xc1\xc9\xc5\\n\x45\xe4\x32\x05\x1a\x8e\xb6\x76\x99\x5e\x25\x22\x66\xf5\xcc\xec\\n\xfb\xe8\x74\x1b\xb7\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\n\x00\x00\xf0\x36\xf0\x41\x16\x0b\x42\x08\x78\x15\x57\x44\xa2\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xe3\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x60\x49\x44\\n\x41\x54\x58\x85\xed\xd7\x3b\x4e\x42\x61\x10\x86\xe1\x77\x40\x45\\n\xbc\x2c\x00\xdd\x82\x98\x90\x00\x46\x05\x57\x21\xa5\x17\x62\x2c\\n\xb0\x43\x12\x5d\x83\x0d\xd8\x88\x15\xde\x62\x89\x7b\x30\x39\x60\\n\x14\x49\x4e\x08\x7b\x10\x7b\x2f\x08\x08\x63\xa1\x87\x40\xa0\x3c\\n\xc4\x44\xcf\xd7\xfd\x53\xfc\xdf\x53\xce\xc0\x7f\x8f\xf4\xbd\x54\\n\x25\x92\x79\xd8\x16\x95\x04\x82\x1f\x98\xb4\xa9\xe7\x03\xa5\x0a\\n\x92\x35\xf6\x43\x97\x88\xe8\x20\x40\x55\xd6\x8e\x4b\x17\xaa\x6c\\n\x02\x0d\x01\x53\xd1\x57\x3b\xda\x05\x99\x51\x08\x00\x1e\x90\x73\\n\x23\x19\xda\xb1\x10\x5d\x40\x24\x7d\x1f\x17\xe4\x0c\xb4\x88\x8c\\n\xc5\x8c\x64\xb0\x66\x47\xb9\x95\x68\xa6\xec\x43\xdb\x79\x60\x45\\n\x95\xad\x42\x6a\xe9\x0a\xc0\xd5\x55\xaa\x24\x80\x86\xfb\xd3\xb5\\n\x6e\x77\x39\x80\x91\x0c\xd6\x3a\xad\x56\x0c\x68\x8a\xb0\x67\xcd\\n\xbb\x00\x84\x05\x01\xf3\xf6\x20\xfc\x6c\x77\xb9\x95\xe2\x61\xe4\\n\x09\x30\x01\xff\x20\x00\xbc\x0a\xef\xa3\x2a\xef\xc9\x1b\x30\x35\\n\x0c\xf0\x2b\x71\x00\x0e\xc0\x01\x38\x00\x07\xe0\x00\x1c\x80\x03\\n\xe8\x05\xd4\xa5\x67\x53\x19\x61\xa6\x81\xfa\x10\x80\x56\x15\x02\\n\xd1\x4c\xd9\x37\xaa\xe6\xe5\xf4\xdd\x3c\x10\x10\xa8\x0c\x02\xd4\\n\x75\x0a\x78\xd0\xf6\xcd\xea\x51\x61\x6e\x14\xe5\xe3\xb8\xf3\xc0\\n\x44\x47\x34\x6b\xcd\xfb\x0e\x93\x68\xe6\x31\x07\x1a\x07\x9a\x80\\n\x09\xfa\x62\x4f\xbd\xcc\xf2\x7d\x98\x4c\x28\xe4\x0a\xc9\xf0\xee\\n\xc0\x61\x62\x21\x22\xe9\xd2\xc6\xcf\xde\xbe\x08\x78\xed\x01\x50\\n\x17\xa8\xa8\xca\x89\x91\x0a\x5f\xdb\xf4\xe7\x1f\xc9\x17\xa4\x29\\n\x70\x23\xfc\x8b\x13\x87\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x02\x56\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x15\x00\xdc\xbe\xff\xeb\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xba\x49\x44\x41\x54\x78\xda\xed\x9b\x5b\\n\x92\x02\x21\x0c\x45\x4d\xd6\x37\x2e\x48\x17\xa0\x0b\xd2\xfd\xe9\\n\x9f\x65\x39\xda\x3c\x92\x7b\x13\x68\xf2\x3d\x95\xe6\x1c\x1e\x43\\n\x10\x0e\x87\x15\x2b\x56\xec\x39\x84\xf9\xb1\xdb\xe9\xf4\xa8\xf9\\n\xbb\xe3\xf5\x2a\x53\x08\xa8\x05\x8e\x14\x22\x59\xa1\x59\x32\x64\\n\x14\x70\x94\x08\x19\x11\xde\x53\x82\x8c\x08\xee\x29\x42\x46\x87\\n\xb7\x4a\x90\xd1\xc1\xad\x22\x64\x26\xf8\x1e\x09\x32\x1b\x7c\xab\\n\x04\x5d\x5b\xe1\x09\x7b\xbf\x65\x14\x88\x15\xfe\xef\x72\x79\xe5\\n\xb8\x9f\xcf\x14\x51\xef\xdf\x2c\x7d\xb7\x24\x41\xbd\x1b\xf6\xd9\\n\x38\x34\xbc\x35\x14\x31\xf4\x51\x12\x7a\xf2\x96\x18\x14\x35\xef\\n\xbd\x25\x58\xf2\x6d\xb1\x98\xa7\xc0\xd6\xfc\xf3\x92\xb0\x95\xc7\\n\xba\xee\x88\x57\xef\xa3\x1a\xe9\x99\xf7\xdb\x82\xe8\xb6\x08\x22\\n\x46\x02\xb2\xe7\x21\xff\x05\x3c\x25\x30\xe0\xbf\x4e\x01\x8f\x4d\\n\x8f\xb5\xf1\x48\xf8\xcf\x69\x00\xd9\x0a\x5b\x46\x02\xab\xe7\xe1\\n\xb5\x40\x8f\x04\x36\x3c\xbc\x18\x6a\x91\x10\x01\xff\x6f\x0d\x40\\n\x15\x3d\x25\x38\x36\xfc\xfb\x3a\x40\x29\x87\x7b\xd7\x04\x46\x71\\n\x45\x3b\x0f\x68\x85\x61\x55\x96\xd4\x03\x91\x5a\x28\x16\x3c\x5d\\n\x40\x0d\x1c\x13\x3e\x44\x80\x65\x1f\x30\xbc\x80\x5a\x38\xa6\x04\\n\xcd\x06\xcf\x96\xa0\xd1\xf0\x8c\xf3\x84\x50\x01\x35\xf0\x91\x12\\n\x20\xd5\x60\x6f\xcf\x33\x36\x45\x94\x6a\xb0\x17\x26\x62\x24\x68\\n\xa6\x39\x1f\x21\x41\x33\xc1\x47\x48\x70\x3b\x14\x45\xcc\x61\xef\\n\x7c\xd0\x43\x51\xc4\x02\xc6\x18\x09\x9a\x15\x9e\x25\xe1\x67\x82\\n\xda\x69\xc0\xaa\xe7\xad\xdf\xf9\xf5\x23\x69\xc8\x99\x60\x86\x7c\\n\x45\x01\x96\x9b\x57\xa8\xc6\xf6\xe6\xdd\x62\xd1\xec\x3d\x8f\xce\\n\x6f\xbe\x20\x91\x3d\x4a\x23\x79\x5d\x91\xa9\x4d\xb6\x6e\x89\x4d\\n\x1a\xeb\xa2\x64\x6b\xf2\x5d\x5f\x95\xcd\x2c\x82\x76\x59\x3a\xa3\\n\x84\x90\xeb\xf2\x59\x24\x58\x1f\x4d\xac\x27\x33\xde\x0d\xdb\xed\\n\xa3\x29\xa4\x8c\xa1\x9e\xcd\x79\x08\x61\x3e\x9c\x5c\xb1\xf7\x78\\n\x02\x47\xb0\x5b\x07\x3a\x44\x3e\x01\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1f\x0d\xfc\\n\x52\x2b\x9c\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\x73\x3e\xc0\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x4e\\n\x8a\x00\x9c\x93\x22\x80\x61\x1a\x0a\x00\x00\x29\x95\x08\xaf\x88\\n\xac\xba\x34\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x03\xcc\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x49\x49\x44\\n\x41\x54\x58\x85\xed\x96\xcd\x6b\x5c\x55\x18\xc6\x7f\xcf\x9d\x99\\n\x98\xe9\x64\x16\xd2\x9d\xa9\x92\x0e\xa1\x0b\xd3\xd8\x76\xf0\x1f\\n\x68\x11\x14\x2b\x34\x81\xde\x55\xca\xcc\xbd\xa5\x54\x5c\x04\x44\\n\x6d\x3a\xd5\x4d\x16\x2e\xe2\x44\x57\xb3\x1b\xea\x78\xa7\x18\xb2\\n\x08\xc8\x54\xb0\x88\x1b\xeb\xc6\x85\x68\xf3\x55\x53\xa4\xb4\x55\\n\x9a\x52\x70\x25\x99\x30\xa5\x36\xb9\xaf\x8b\xf9\x68\xc1\xcc\x0c\\n\x53\xba\x6b\x9e\xdd\x39\xe7\x39\xef\xfb\xbb\xef\x7d\xef\x39\x17\\n\x76\xb5\xab\xe7\x5d\xea\xc5\xec\xba\x6e\xdf\x40\x3c\x3e\x2e\x69\\n\x0c\x48\x1b\x0c\x02\x60\xb6\x8e\x74\x4d\x50\xa9\xd6\x6a\x95\x85\\n\x85\x85\x7f\x9f\x39\x80\x9f\xc9\x9c\x34\x29\x2f\xd8\x0f\xac\xca\\n\xec\xaa\x49\xeb\x8d\xe5\x41\xe0\x28\x30\x0a\xdc\x32\x69\x2a\x08\\n\x82\x6f\x9e\x09\x80\xeb\xba\x91\x64\x22\x91\x37\xb3\x0f\x04\xdf\\n\x13\x89\xe4\x4a\xa5\xd2\xf2\x4e\x5e\xcf\xf3\x0e\x0b\x66\x30\x7b\\n\xd3\xcc\x66\x87\x52\xa9\xdc\xf4\xf4\x74\xd8\x29\x7e\xb4\x1b\x40\\n\x23\xf9\xfb\xc0\xb9\x52\xb9\xfc\x79\x27\x6f\x10\x04\x4b\xc0\x5b\\n\xa7\x3d\xef\x1c\x30\xf3\xe7\xed\xdb\x00\x53\x9d\xf6\x74\xac\x80\\n\x9f\xc9\x9c\x44\x5a\x10\x7c\x54\x2a\x97\xbf\x00\x98\x9c\x9c\x7c\\n\x61\x73\x63\xe3\x5d\x83\x09\xd5\x4b\x0e\x66\x2b\xe6\x38\x73\xc9\\n\x64\xb2\x58\x28\x14\x1e\x02\xf8\xd9\xec\x14\xf0\x99\x49\xe3\x41\\n\x10\x54\x7a\x06\x70\x5d\xb7\x6f\x60\xcf\x9e\x1b\xc0\x1f\x5f\x95\\n\xcb\x6f\x03\x9c\x99\x98\xd8\xb7\x1d\x8b\x5d\xc1\x6c\x14\x08\x01\\n\xa7\x61\x0f\x01\x47\xb0\xe2\x6c\x6d\x1d\xbf\x38\x37\xb7\xde\x80\\n\xf8\x01\xd8\xbf\x59\xab\x8d\xb4\x6b\x4c\x67\xa7\x49\x80\x81\x78\\n\x7c\x1c\x48\x29\x12\xb9\xd0\x7c\xf2\xed\x58\xec\x8a\x99\x1d\xdc\\n\x61\xaf\xd3\xa0\x18\x0d\xa3\xd1\xef\x5c\xd7\xed\x03\x70\xcc\xce\\n\x03\xc3\x89\x44\xe2\x44\xbb\x3c\x6d\x01\x24\x8d\x61\xb6\xdc\x6c\\n\xb8\x6a\xb5\x7a\x16\xb3\x51\x75\xa8\x9a\x40\x06\xaf\x0d\xc4\xe3\\n\x67\x01\xbe\xbc\x74\x69\x11\xb8\x8e\x59\xef\x00\x40\x1a\xe9\xa7\\n\xd6\xc8\xec\x14\xf5\x52\x77\x96\x14\x02\xa7\x5a\x43\xb3\x1f\x65\\n\xf6\x7a\xcf\x00\x06\x2f\xe9\xf1\x77\x8e\x60\xa4\x0b\x70\x13\xd4\\n\x91\x34\xd2\x1c\x86\x70\x0f\x69\xb0\x67\x80\x7a\x2c\xeb\xe9\xa4\\n\xdc\x31\x81\xe3\x88\x0e\x95\xeb\x04\x70\x5f\x66\xfb\x5a\x30\xf0\\n\x7b\xa7\x40\x2d\x49\x61\x08\xd7\x5b\xfb\xcc\x06\x31\xbb\xff\x34\\n\x00\xbf\x9a\x74\xf4\x89\xc0\x5f\x77\xf1\x37\x33\x3a\x32\x9b\x7b\\n\x62\xe6\x98\xe0\x97\x9e\x01\x04\x15\xe0\xa0\xe7\x79\x87\x01\x92\\n\xc9\x64\x51\xb0\x62\x60\x6d\x73\x83\x21\x2d\x6d\x3e\x78\x50\x04\\n\xf0\x7d\x3f\x0d\xbc\x6a\xf0\x6d\xcf\x00\xd5\x5a\xad\x02\xdc\x12\\n\xcc\x00\x14\x0a\x85\x87\xce\xd6\xd6\x71\x07\x56\x1b\x96\xc7\xaf\\n\xa3\xde\xf9\x48\x5a\xde\x0e\xc3\x77\x1a\x87\x8e\x14\x86\x79\xe0\\n\x66\xac\xbf\xff\x72\xbb\x3c\x91\x76\x0b\x6b\x6b\x6b\xdb\xe9\x43\\n\x87\xee\x02\x9f\xa4\x8f\x1c\xa9\x2d\x2e\x2d\xfd\x7c\x6d\x75\x75\\n\x63\xf8\xc0\x81\x52\x5f\x34\xfa\xb7\x49\x7b\x05\x2f\x02\x8f\x0c\\n\x16\x1d\x98\xd9\xac\xd5\xde\x9b\x9f\x9f\xff\x07\xc0\xcf\x66\x2f\\n\x00\x67\x04\xa7\x2f\x96\x4a\x37\xda\xe5\xe9\xda\xe5\x5e\x26\x93\\n\x97\xf4\xa1\xa4\x5c\x29\x08\x66\xbb\xf9\x01\xf9\xd9\x6c\x0e\xf8\\n\x54\xd2\x6c\x29\x08\x72\x9d\xcc\x5d\x6f\xc3\xa1\x54\x2a\xf7\xd7\\n\x9d\x3b\x66\x66\x79\x2f\x9b\x7d\x23\x62\x96\x6b\x9c\x70\xff\x93\\n\xef\xfb\x69\x85\x61\xde\xe0\x98\xa4\xfc\x2b\x43\x43\x1f\x77\xa5\\n\xed\x66\x68\xca\xf3\xbc\x31\x99\xcd\x02\xc3\xd4\x3f\xb3\xab\xc0\\n\xdd\xc6\xf2\xcb\xd4\x7f\x48\x46\x80\x9b\x8d\xdb\xb3\x6d\xe3\x3d\\n\x15\x00\xd4\x6f\xc8\x44\x22\x71\x42\x61\x38\x86\x94\x06\x9a\xe7\\n\xc4\xba\xc1\x6f\x32\xab\xc4\xfa\xfb\x2f\x17\x8b\xc5\x47\xbd\xc4\\n\xdd\xd5\xae\x9e\x6f\xfd\x07\xb0\xd0\x3c\xea\x1c\xa0\xa5\x5f\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x15\x3b\xdc\\n\x3b\x0c\x9b\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\x73\x3e\x20\x0b\xa4\x08\x30\x32\x30\x20\x0b\xa6\\n\x08\x30\x30\x30\x42\x98\x10\xc1\x14\x01\x14\x13\x50\xb5\xa3\x01\\n\x00\xc6\xb9\x07\x90\x5d\x66\x1f\x83\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x1b\x29\xb3\\n\x47\xee\x04\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\x73\x3e\xc0\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x4e\\n\x8a\x00\x9c\x93\x22\x80\x61\x1a\x0a\x00\x00\x29\x95\x08\xaf\x88\\n\xac\xba\x34\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xed\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x6a\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcb\x4e\xc2\x40\x14\x86\xbf\x43\x08\x78\\n\x7d\x00\xf4\x15\xd4\x84\x77\x91\x65\x69\x0b\x71\xa1\xef\x23\xae\\n\x9a\x71\xa8\x4b\x7c\x07\x37\xae\x09\xe1\x1d\xc4\xbd\x17\xe4\x92\\n\x1e\x17\xa5\xa6\x06\xd8\x98\x21\x18\xed\xbf\x9a\x76\x26\xfd\xbe\\n\x4e\xa6\xcd\x39\xf0\xdf\x23\xf9\x0b\x55\x15\x6b\x4c\x50\x12\xb9\\n\x54\x38\x05\x76\x1c\x71\x3e\x04\x86\x40\xc7\x0b\x02\x2b\x22\xba\\n\x24\xa0\xaa\x12\x1b\x73\xab\x22\x4d\x60\x02\xf4\x11\x79\x75\x82\\n\x57\x3d\x00\xea\x40\x15\x11\xd3\xf4\xfd\x76\x26\x51\xce\xd6\x58\\n\x63\x02\x49\xe1\x8f\xa5\x72\xb9\xe1\x79\xde\xc8\x09\x7c\x91\x38\\n\x8e\x6b\xc9\x7c\xde\x43\x35\xb4\xd6\x3e\x00\x5d\x80\x52\xb6\xa0\\n\x24\x72\x09\x4c\x12\x38\x77\x0d\x07\xf0\x3c\x6f\x34\x4f\x92\x06\\n\x30\x15\xd5\xab\x2f\x6e\x36\x50\x38\x01\xfa\x61\x18\x3e\xbb\x86\\n\x67\x69\xb7\xdb\x4f\x40\x9f\xf4\x7c\x7d\x17\x00\x76\x81\xf7\x4d\\n\xc1\x73\x79\x03\xf6\x56\x09\x6c\x25\x85\xc0\xd6\x05\xca\xeb\x26\\n\xac\x31\xba\x6e\xee\x27\xf1\xc3\x50\x56\xdd\xdf\xfa\x0e\x14\x02\\n\x85\x40\x21\xb0\xf6\x3f\xb0\xee\xbb\x75\x9d\xad\xef\x40\x21\xf0\\n\xab\x04\xc6\xe4\x2a\x95\x0d\x66\x7f\xc1\x5a\x12\x18\x02\xf5\x38\\n\x8e\x6b\x9b\x22\x5b\x6b\x8f\x49\xcb\xf3\xc1\x92\x80\xc0\x0d\x50\\n\x4d\x66\xb3\xfb\x28\x8a\x8e\x36\x02\x4f\x92\x1e\x50\x11\xe8\xe4\\n\xb8\x69\x54\x55\xba\xd6\x46\xa8\x86\xc0\x94\xb4\x31\x79\x71\x42\\n\x57\x3d\x24\x7d\xf3\x8a\x42\xe4\x07\xc1\x45\xd6\x98\x2c\xb7\x66\\n\xd6\x7a\x8b\xba\xfd\x8c\xb4\x52\x76\x91\x31\x30\x40\xf5\xda\x6f\\n\xb5\xee\x1c\x3d\xf3\x8f\xe4\x13\xfb\x36\x7a\x56\x11\xde\xcf\xd8\\n\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xec\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x69\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcd\x4a\xc3\x40\x14\x46\xcf\x4d\x83\x5a\\n\x7f\x1e\x40\x7d\x05\x2b\x74\xeb\x73\xd8\x5d\xed\x98\x88\x82\xbe\\n\x8f\x0a\x85\x26\x99\x92\x65\x7d\x0c\xd7\xa5\xf8\x0e\xea\xde\x7f\\n\x4b\x7b\x5d\x68\x4a\x89\xcd\x46\xa6\x54\x34\xdf\x6e\x66\x2e\x39\\n\x67\x66\x98\x21\x03\xff\x3d\x92\x6f\x07\xc6\x1c\x02\xa7\x40\x0d\\n\x58\x71\xc4\x79\x05\x6e\x44\xe4\x22\x4a\x12\x0b\xe8\x2c\x01\x09\\n\x8c\x49\x80\x16\xf0\x06\xf4\x81\x47\x47\x02\xeb\x40\x1d\x58\x06\\n\xe2\xd8\xda\xa3\x4c\x62\x22\x10\x18\x13\x00\x91\xc0\xb5\x3f\x1a\\n\x35\xda\x69\x7a\xe7\x08\x0e\xc0\x49\xb3\xb9\x39\xf4\xbc\x1e\x22\\n\x7b\x02\x26\xb2\xb6\x0b\xe0\x4d\xd5\x9c\x02\x6f\x63\x91\x7d\xd7\\n\x70\x80\x76\x9a\xde\x89\xef\x37\x80\x77\x15\x39\xcb\xfa\xa7\x05\\n\x76\x80\x7e\x92\x24\xf7\xae\xe1\x59\xa2\x28\xba\x45\xa4\x8f\x6a\\n\x6d\x96\x40\x15\xd5\xe7\x79\xc1\x27\x19\x8f\x9f\x80\xd5\x59\x02\\n\x0b\x49\x29\xb0\x70\x01\xbf\x68\x20\x30\x46\x8b\xc6\x7e\x92\xd8\\n\xda\xfc\xad\x0b\xfc\x82\x15\x28\x05\x4a\x81\x52\xa0\xf0\x1e\x28\\n\x3a\xb7\xae\xb3\xf0\x15\x28\x05\x7e\x95\xc0\x0b\x22\xab\x85\x95\\n\xce\x88\xde\x1a\xf0\xf2\x4d\x40\xe1\x06\xa8\x9f\x34\x9b\x9b\xf3\\n\x62\xb7\x5a\xad\x6d\x54\xeb\xc0\xe0\x9b\x80\x27\x72\x09\x2c\x0f\\n\x2b\x95\xab\x30\x0c\xb7\xe6\x01\xaf\x88\xf4\x80\x25\x15\xb9\xc8\\n\xfa\xf3\x0f\x93\x0e\x10\x00\xef\x5f\x7f\xaf\x0f\x4e\xe8\x22\x1b\\n\x5f\x33\x5f\x52\xe8\x24\xd6\x1e\x93\x7f\x98\x64\xa5\xa1\x31\x07\\n\x2a\x72\x86\xea\x2e\x50\x75\x22\xf0\xb9\xe7\x03\x54\xcf\xe3\x6e\\n\x37\x75\xf4\xcd\x3f\x92\x0f\xe2\x9e\x6a\x27\x2a\x1c\x88\x2a\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1f\x20\xb9\\n\x8d\x77\xe9\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x06\xe6\x7c\x60\x60\x60\x42\x30\xa1\x1c\x08\x93\x81\x81\x09\xc1\\n\x64\x60\x60\x62\x60\x48\x11\x40\xe2\x20\x73\x19\x90\x8d\x40\x02\\n\x00\x23\xed\x08\xaf\x64\x9f\x0f\x15\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x02\xd4\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x51\x49\x44\\n\x41\x54\x58\x85\xed\x96\x41\x4b\x54\x51\x14\xc7\x7f\xe7\x8d\xb8\\n\xd0\x26\x30\x77\x69\x84\xe1\xaa\x29\x90\x41\xc7\x92\x5e\xa0\x1b\\n\xa1\x8d\x0a\xf5\x19\x5a\x3b\x33\xda\xd8\x6a\x16\x41\x36\x83\xf3\\n\xbe\x87\x41\x8d\xad\xc2\x4d\xf6\x14\xf4\x0d\x99\x48\x0e\x11\xe2\\n\xaa\x11\xdb\x18\x34\xa8\x0b\xc3\x77\x5a\xcc\x48\x10\xf3\x74\xee\\n\xe8\xae\xf9\x6f\xef\x39\xfc\x7f\xf7\xdc\x7b\xcf\x3d\xd0\x54\x53\\n\xff\xbb\xc4\x24\x38\x92\x2e\xb6\x76\x86\x0f\x27\x54\x18\x07\x8d\\n\x02\x5d\xd5\xa5\x12\xca\x67\x11\xc9\xef\x97\xdb\xf3\xc5\x74\xe4\\n\xf8\xd2\x01\x6c\x67\xed\x31\x2a\x19\xa0\x07\xe4\x0b\xaa\x4b\x58\\n\x94\x00\x44\xb5\x4b\xb1\x86\x41\xef\x22\xec\x08\x32\xed\x4e\xc6\\n\xde\x5c\x0a\xc0\x93\xf9\xf9\xd0\x8f\xdd\x9b\x19\x94\x38\xf0\x5e\\n\x95\xd4\x4a\x62\x70\xb3\x56\xec\x90\x53\xe8\x0b\xf9\x3a\x8b\x30\\n\x0a\x64\x97\xcb\xb1\x14\x69\xf1\xeb\xdd\x64\x4d\xd9\x8e\x37\x67\\n\xe7\xbc\x93\x87\xce\x5a\xb2\xee\x9c\x9c\x37\x65\xe7\xbc\x13\x3b\\n\xe7\x65\xce\x8b\x3d\xb3\x02\xd5\xb2\xbf\x16\x24\xe9\xc6\x63\x73\\n\xf5\x02\x54\x72\xbd\x69\x94\x57\x08\x13\xcb\x93\x83\x79\x63\x80\\n\x48\xba\xd8\x7a\xed\xea\xc1\x57\x41\xbf\xb9\xf1\x7b\x8f\x4c\xcc\\n\x4f\xf5\xc0\x29\x2c\x8a\x6a\xcf\xcf\xf2\x95\x48\xd0\xc5\xb4\x82\\n\x92\x3b\xc3\x87\x13\xc0\x2d\x5f\x65\xa6\x11\x73\x00\xcb\x97\x67\\n\x40\x6f\x47\xf8\x60\x2c\x30\x26\x68\xa1\xf2\xd4\xd8\x0c\xba\x70\\n\xf5\xc8\x4d\x0c\x6c\xa8\xb2\x25\x60\x0e\x00\x1a\x15\xf4\x63\xa3\\n\xe6\xa7\x12\xf8\x80\xd0\xdf\x00\x00\xd7\x15\x29\x5d\x14\x40\x61\\n\x97\xbf\x0d\xcb\x08\x00\xc4\xac\x53\xd6\x34\x10\x11\x20\xb0\x17\\n\x9c\x05\xb0\x87\x4f\xf7\x45\x01\x14\xed\x02\xf6\xcc\x01\x94\x4f\\n\x0a\xc3\x17\x05\x00\x46\x80\x82\x31\x80\x88\xe4\x45\xb8\x33\xe4\\n\x14\xfa\x1a\x75\xb6\x9d\xd5\x28\x70\x1b\xd1\x77\xc6\x00\xfb\xe5\\n\xf6\x3c\xc2\x4e\xc8\xd7\xd9\x86\xdc\x55\x05\xb5\x32\xc0\xf6\x51\\n\x5b\xcb\x82\x31\x40\x31\x1d\x39\x56\x65\x0a\x61\xd4\xce\x79\x53\\n\xa6\xfe\x76\xce\x4b\x01\x23\xa2\x7e\x72\xfd\x69\xff\x6f\x63\x00\\n\x80\x95\xf8\xe0\x5b\x20\x0b\xcc\xd6\x0d\xa1\x2a\xf6\xdc\xda\x0c\\n\x22\x2f\x44\xc8\xb8\x89\xfb\x81\xe5\x87\x7a\xe6\x81\xb4\x5a\x76\\n\xb8\xf0\x12\x61\x1a\x58\x14\xb5\x52\x6e\x62\x60\xa3\x56\xa8\xed\\n\xac\x46\xab\x65\x1f\x11\x21\xe3\xfe\x8a\x3d\x3f\xef\x3b\x36\x18\\n\x48\xbc\x71\x94\x2c\xd0\xab\xca\x96\x08\x4b\x08\xdf\x01\x50\x6e\\n\x50\x79\x31\x11\x60\x5b\xd4\x4f\x9e\xb7\x73\x63\x00\xa8\xfc\x90\\n\x1d\xe1\x83\x31\xaa\x23\x99\x20\xdd\x15\x7f\x2d\x89\xca\x3a\x96\\n\xe6\x8f\xda\x5a\x16\xce\x3a\xf3\xa6\x9a\x6a\xea\x5f\xfd\x01\xd3\\n\x1c\xd9\x7f\x5e\xb9\x33\xcd\x00\x00\x00\x00\x49\x45\x4e\x44\xae\\n\x42\x60\x82\\n\x00\x00\x02\x00\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x7d\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\x02\x51\x14\x86\xbf\x83\x28\x3e\\n\x17\xa0\x6e\x41\x4d\x48\x78\x44\x9d\x71\x15\x5a\xfa\x8a\xb1\xd0\\n\x0e\x48\x74\x0d\x36\x60\xa3\x56\x3e\x63\xa9\x7b\x30\x19\x34\x82\\n\x24\x84\xb8\x07\xb5\xf7\x81\x82\x70\x2c\x74\x08\x04\xc3\x14\xce\\n\x58\xe8\x7c\xdd\xbd\xe7\xe6\xfe\x5f\x6e\x73\xcf\x81\xff\x8e\xb4\\n\xac\x54\xc5\xc8\xe4\x96\x44\x65\x0d\x61\x1c\xe8\x75\x29\xe7\x15\\n\xe5\x16\x64\xd7\x4a\x46\x8f\x11\xd1\x76\x01\x55\x99\xd9\xce\x1f\\n\xa9\xb2\x00\xbc\x09\x14\x15\x7d\x72\x23\x5d\x90\x41\x85\x30\x10\\n\x02\x39\xb4\x12\xd1\x15\x5b\xa2\x21\x60\xa4\xaf\x97\x05\x39\x00\\n\xbd\x44\x82\x73\x56\x22\x72\xef\x46\xb8\x8d\x99\x29\x0c\xa3\xb5\\n\x33\x60\x4a\x95\xc5\x6c\x2a\x7e\x02\x10\x68\x58\xaa\xac\x01\x6f\\n\x5d\xef\x81\x59\xb7\xc3\x01\xac\x44\xe4\xbe\x5e\xad\xce\x01\x15\\n\x11\xd6\xed\xfd\x86\x00\xc2\x98\x40\xf1\x62\x23\xf6\xe0\x76\xb8\\n\xcd\xe5\xa6\x71\x07\x14\x81\xf1\x76\x01\xe8\x53\x78\xf1\x2a\xbc\\n\x89\x67\xa0\xdf\x5e\x04\x9d\x4e\x9b\xe9\x9c\x3a\x9d\xe9\x84\x95\\n\x8c\x4b\xa7\x7a\xa0\x53\xf1\x37\xf0\x05\x7c\x01\x5f\xc0\x17\xf0\\n\x05\x7c\x01\x5f\xc0\xb1\x1f\x70\xfa\xcf\x7f\x4a\xf3\x0b\x94\xa5\\n\xa9\x53\xf1\x90\x01\xa0\xfc\x8d\x80\xde\x2a\x84\xcd\x4c\x61\xd8\\n\xab\xe4\xc9\xf4\xd5\x28\x10\x16\x28\xb5\x0b\x68\x60\x0f\x08\xa1\\n\xb5\xf3\xe9\xad\xec\x88\x17\xe1\xdd\x74\x9d\x01\x3d\x75\xd1\x5d\\n\x7b\xbf\x65\x30\x31\x33\x37\xfb\xa0\xcb\x40\x05\x28\x82\x3e\xba\\n\x13\x2f\x43\x7c\x0e\x26\x3d\x0a\xfb\xd9\x44\x6c\xb5\x6d\x30\xb1\\n\x25\x8c\x74\x7e\xfe\xab\x6f\x9f\x00\xfa\xdc\x11\xa0\x2c\x50\x52\\n\x95\x1d\x2b\x15\x3b\x75\xe9\xce\x3f\xc2\x07\xd1\xbc\x75\x94\xcf\\n\xbc\x8d\xf9\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x03\xa5\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x22\x49\x44\\n\x41\x54\x58\x85\xed\x96\x4d\x6c\x54\x55\x14\xc7\x7f\xe7\x0d\xa9\\n\x09\xcc\x90\x50\x76\xb6\xc6\x60\x60\xe3\xa3\x86\x34\xf4\xc3\xc6\\n\x67\xa4\x1b\xa2\x98\x40\x13\x5d\xc9\x1a\x36\xda\x84\x7e\x59\x5c\\n\xcd\xce\x3a\xa4\x33\x09\xcb\xae\x65\x83\x89\x19\x4c\x04\xc3\xc6\\n\x3a\x98\xb4\x6f\x22\x62\x4b\x27\xc6\x34\xac\x9c\x06\x37\x94\x74\\n\x98\x92\x50\x3a\xef\xef\xe2\x4d\xa7\x35\x99\xe9\xcc\x43\x76\xf4\\n\xbf\xba\xe7\xbd\x73\xef\xf9\xdd\x73\xee\x17\xec\x69\x4f\xaf\xba\\n\x2c\x8a\xb3\x9b\x2c\xb4\x1d\x4e\xac\x0f\xc9\x38\x07\xea\x06\x3a\\n\xaa\xbf\x8a\x88\xdf\xcd\x2c\xfb\xa8\x74\x20\x5b\x48\xba\x1b\x2f\\n\x1d\xc0\xcb\xcc\x7f\x82\x2c\x05\x1c\x01\xbb\x8f\x34\x8b\x43\x11\\n\xc0\xa4\x0e\xe1\x9c\x02\x75\x61\x3c\x30\x6c\x22\x77\xa9\xf7\xfb\\n\x97\x02\xf0\xe9\xf5\xeb\xb1\x7f\x56\xde\x4c\x21\x46\x80\x9f\x24\\n\x26\x7f\x1d\xed\x5b\xa8\xe7\x3b\x90\xc9\x9f\x88\x05\x9a\xc2\x38\\n\x0d\x5c\xb9\x53\xea\x9d\x24\x69\x41\xab\x93\xac\x2b\x2f\xe3\x4f\\n\x7b\x69\xbf\xf2\x7e\x66\x7e\xac\xe5\x3e\x69\x7f\xdc\x4b\xfb\x15\\n\x2f\xed\xa7\x9a\xf9\xee\x9a\x81\x6a\xda\xbf\x33\x6c\x2c\x37\xd2\\n\x3b\x0d\xf0\xe1\xd5\xe5\xd7\x9e\x3c\x7f\x7c\xd1\xe0\x33\x59\xd0\\n\x15\x0e\x62\x8b\x18\xd7\xe2\xb1\xf6\x99\x5b\xc3\xc7\x9e\x55\xc1\\n\x27\x10\xdf\x60\x0c\xdd\xb9\xd4\x97\x8d\x0c\xe0\x26\x0b\x6d\xed\\n\x07\xcb\x7f\x1a\xfa\x2b\x37\xd2\xff\x11\xc0\x07\x57\xe7\x3b\x2b\\n\x9b\xce\x4d\x50\x17\x58\x00\x72\xaa\xc3\x84\x6d\x63\x31\x16\xd3\\n\x99\xd9\xe1\xfe\x22\xc0\x7b\x99\xfc\x6d\x93\x8e\xac\x96\xe2\x6e\\n\xa3\x85\xe9\x34\x02\x38\x9c\x58\x1f\x02\xde\x0a\x64\x97\xb7\x66\\n\x5e\xd9\x74\x6e\x62\x3a\x1e\x7a\x68\x47\xdf\x5a\xbb\xab\xb2\xc9\\n\x8f\x6e\xb2\xd0\x06\xe0\x04\xf6\x25\x70\xf4\x50\xa2\x7c\xb6\x51\\n\x9c\x86\x00\xe1\x56\x63\x61\x6b\xc1\x95\x2b\xab\x17\x40\x5d\x68\\n\x97\xb2\x09\x03\x7b\xa7\xfd\x60\xf9\x02\x40\x6e\xb4\xe7\x9e\xc4\\n\x92\x41\x74\x00\x50\xb7\xa1\x5f\x6a\x66\x60\xe7\xc3\x54\xef\x2e\\n\x41\x00\x9c\xdf\xb2\x0d\x7e\xc6\x38\xf9\x02\x00\xbc\x2e\xac\x58\\n\xb3\x4c\xee\x7f\xd3\x5e\x5f\x06\x0e\xc8\xdd\x01\xb4\xc2\xf6\x81\\n\x15\x09\x00\x2c\xda\x49\x59\x37\x80\x99\x11\x66\x25\x32\xc0\x43\\n\x02\x3a\x6b\x96\xac\xd0\x6a\x09\x24\x96\xb6\x6d\x75\x00\x0f\xa3\\n\x03\x88\xdf\x04\xa7\xb6\x3d\xf5\x6d\xab\x25\x30\xb3\x6b\x3b\x3e\\n\x0d\x02\xf9\xc8\x00\x66\x96\x35\xe3\xf8\x40\x26\x7f\x02\x20\x1e\\n\x6b\x9f\xc1\x58\xc4\xd0\x2e\xd1\x25\xe3\x8f\xd5\x52\x7c\x06\xc0\\n\xcb\xcc\x75\x03\x6f\x63\xfa\x21\x32\xc0\xa3\xd2\x81\x2c\xc6\x83\\n\x58\xa0\x29\x80\x5b\xc3\xc7\x9e\xc5\x62\x3a\x03\xdc\xaf\x46\xab\\n\x95\xa3\xba\xf2\x11\x2c\x54\x54\xf9\xb8\x90\x74\x37\x90\x0c\x39\\n\x29\x60\xf9\xe9\xfe\x7d\x37\x22\x03\x14\x92\xee\x86\xc4\x38\xc6\\n\x69\x2f\xed\x8f\x03\xcc\x0e\xf7\x17\x57\xd7\xe2\x3d\xc0\x17\x52\\n\x90\x07\xd6\x81\x75\xa4\xbc\x99\x3e\x7f\xbc\x16\xef\x9b\x1b\x19\\n\x58\x01\xf0\xd2\xfe\x24\x30\x68\x0a\xc6\xee\x5e\x3c\xf9\xbc\x51\\n\x9c\xa6\xf2\xd2\x7e\xaa\x7a\xb1\x8c\xb7\xd4\x41\x32\x6f\x7a\xfe\\n\x72\x78\x81\xf9\x53\xcd\xdc\x9b\x6f\xb3\xa4\x1c\x2f\x91\xff\x1a\\n\x63\x02\xb8\x6d\x72\x26\x73\xa3\x3d\xf7\xea\xc2\x66\xe6\xba\xab\\n\x69\x1f\x34\x23\x95\x5b\xeb\xfd\xaa\xd9\x75\x1c\xe1\x41\xe2\x9f\\n\x43\x5c\x01\x8e\x4a\x2c\x99\x31\x8b\xf1\x37\x00\xe2\x0d\xc2\x1d\\n\xe3\x02\xcb\xa6\x60\x2c\x37\xfa\x6e\xc3\x85\xf7\x42\x00\x10\xde\\n\x90\x87\x12\xe5\xb3\x54\x9f\x64\x86\x75\x86\xf1\x55\x34\xd9\x5d\\n\x1c\x65\x9f\xee\xdf\x77\xe3\x7f\xd5\x7c\x4f\x7b\x7a\xe5\xf4\x2f\\n\x95\x3f\x47\xac\x6d\xe5\x30\x73\x00\x00\x00\x00\x49\x45\x4e\x44\\n\xae\x42\x60\x82\\n\x00\x00\x02\x02\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x7f\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcb\x4a\x42\x51\x14\x86\xbf\x65\xa5\xd9\\n\xe5\x01\xac\x57\xc8\x40\x28\xa3\xd2\x9e\x22\x87\xdd\x88\x06\x36\\n\x33\xa1\x9e\xa1\x89\x36\xa9\x46\x5d\x69\x58\xef\x10\x1c\x8d\xb4\\n\x40\xa2\x77\xc8\xe6\x5d\xac\x2c\x57\x83\x3a\xa2\x1c\xcf\x24\xb6\\n\x18\x75\xfe\xd9\x5e\x1b\xf6\xf7\xb1\x60\x6f\xf6\x82\xff\x1e\x69\\n\x5a\xa9\x4a\x2c\x5b\x58\x14\x95\x24\x42\x18\xe8\x35\xc4\x79\x41\\n\xb9\x05\xd9\xb1\xd6\xc6\x8f\x10\x51\xa7\x80\xaa\xcc\x6c\x15\x0f\\n\x55\x99\x07\x5e\x05\x4a\x8a\x3e\x9a\xa0\x0b\x32\xa0\x10\x01\x02\\n\x20\x07\x56\x6a\x7c\xd9\x96\xa8\x0b\xc4\x32\x97\x4b\x82\xec\x83\\n\xe6\x91\xee\x84\x95\x1a\x2b\x9b\x80\xdb\x89\x67\xaf\x43\xe8\xc7\\n\x29\x30\xa5\xca\x42\x2e\x3d\x71\x0c\xe0\xab\x5b\xaa\x24\x81\xd7\\n\xae\x77\xdf\xac\x69\x38\x80\x95\x1a\x2b\xd7\xaa\xd5\x04\xf0\x26\\n\xc2\xaa\x5d\xaf\x0b\x20\x8c\x08\x94\xce\xd7\xa3\xf7\xa6\xe1\x76\\n\xf2\x1b\xb1\x3b\xa0\x04\x84\x9d\x02\x10\x54\x78\x6e\x17\xbc\x21\\n\x4f\x40\x5f\x2b\x81\x8e\xc4\x13\xe8\xb8\x40\xb7\xdb\x46\x3c\x53\\n\x50\xb7\xbd\x9f\xc4\x5a\x9b\x90\x56\xf5\x8e\x77\xc0\x13\xf0\x04\\n\x3c\x01\xd7\x77\xc0\xed\xde\x9a\x4e\xc7\x3b\xe0\x09\xfc\x2a\x81\\n\x8a\x34\xfc\x54\xda\x98\x7e\xa0\xd2\x42\x40\x6f\x15\x22\xf1\xec\\n\x75\xa8\x5d\xe4\xc9\xcc\xc5\x30\x10\x11\xb8\x71\x0a\xa8\x6f\x17\\n\x08\xa0\x1f\x67\xd3\x9b\xb9\xa1\x76\xc0\x7b\xe8\x3a\x05\xfc\x35\\n\xd1\x1d\xbb\xde\x34\x98\xc4\xb3\x57\x7b\xa0\x4b\xc0\x1b\x50\x02\\n\x7d\x30\x83\x97\x41\xbe\x06\x13\xbf\xc2\x5e\x2e\x15\x5d\x71\x0c\\n\x26\xb6\x44\x2c\x53\x9c\xfb\xfe\xb7\x8f\x02\x41\x33\x02\x54\x04\\n\x6e\x54\x65\xdb\x4a\x47\x4f\x0c\x9d\xf9\x47\xf2\x09\xb5\xbd\x75\\n\x94\xee\x91\xe8\xbe\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\\n\x82\\n\x00\x00\x01\xeb\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x68\x49\x44\\n\x41\x54\x58\x85\xed\x97\x4d\x4e\xc2\x40\x18\x86\x9f\xaf\x10\x14\\n\xd4\x03\xa0\x57\x10\x13\xb6\x9e\x43\x76\xc8\x58\x8c\x26\x70\x1f\\n\x31\x31\xa1\x74\x48\x97\x78\x0c\xd7\xc4\x78\x07\x71\xef\x0f\x02\\n\x91\xcf\x85\x94\x20\xa0\x2c\x1c\x5c\x68\xdf\xdd\x4c\xdf\xf4\x79\\n\xa6\x4d\xd3\x19\xf8\xef\x91\xf9\xb1\x6f\xcc\x09\x50\x03\x0a\xc0\\n\xa6\x23\xce\x2b\x70\x27\x22\x8d\x20\x0c\x2d\xa0\xcb\x04\xc4\x37\\n\x26\x04\x2a\xc0\x00\xe8\x02\x4f\x8e\x04\xb6\x81\x22\xb0\x01\xb4\\n\x5a\xd6\x9e\xc6\x12\x53\x01\xdf\x18\x1f\x08\x04\x6e\xd2\x6f\x6f\\n\xa5\xab\x28\xea\x39\x82\x03\x70\x5e\x2e\xe7\x47\x9e\xd7\x41\xe4\\n\x50\xc0\x04\xd6\xb6\x01\xbc\x99\x4e\x0d\x18\x8c\x45\x8e\x5c\xc3\\n\x01\xae\xa2\xa8\x27\xe9\x74\x09\x18\xaa\x48\x3d\x9e\x9f\x15\xd8\\n\x07\xba\x61\x18\x3e\xb8\x86\xc7\x09\x82\xe0\x1e\x91\x2e\xaa\x85\\n\x65\x02\x59\x54\x5f\xd6\x05\x9f\x66\x3c\x7e\x06\x72\xf1\x30\xbd\\n\xaa\xef\x1b\xa3\xab\x3a\xdf\xa5\x65\xed\xfc\x97\xf6\x29\xde\x77\\n\x17\x7f\x23\x89\x40\x22\x90\x08\x24\x02\x89\x40\x22\x90\x08\xac\\n\xdc\x0f\xac\xfa\x9f\xff\x34\xb3\x4f\xa0\x8f\x48\xee\xcb\xa6\x33\\n\xa2\xb7\x05\xf4\x17\x04\x14\xee\x80\xe2\x79\xb9\x9c\x5f\x17\xbb\\n\x52\xa9\xec\xa1\x5a\x04\x6e\x17\x04\x3c\x91\x4b\x60\x63\x94\x4a\\n\x5d\x57\xab\xd5\xdd\x75\xc0\x53\x22\x1d\x20\xa3\x22\x8d\x78\x7e\\n\xfe\x60\xd2\x04\x7c\x60\x38\xd9\xbd\x3e\x3a\xa1\x8b\xec\x4c\x56\\n\x9e\x51\x68\x86\xd6\x9e\x31\x7f\x30\x89\xab\x55\x63\x8e\x55\xa4\\n\x8e\xea\x01\x90\x75\x22\xf0\xf1\xce\x6f\x51\xbd\x68\xb5\xdb\x91\\n\xa3\x7b\xfe\x91\xbc\x03\x16\x71\x6a\x27\x44\x74\xfe\x4f\x00\x00\\n\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x9e\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x15\x0f\xfd\\n\x8f\xf8\x2e\x00\x00\x00\x22\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x0d\xfe\x9f\x87\xb1\x18\x91\x05\x18\x0d\xe1\x42\x48\x2a\x0c\x19\\n\x18\x18\x91\x05\x10\x2a\xd1\x00\x00\xca\xb5\x07\xd2\x76\xbb\xb2\\n\xc5\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x12\x38\\n\x00\\n\x00\x62\x92\x78\x9c\xcd\x1c\x6b\x73\xdb\x36\xf2\xbb\x7e\x05\xea\\n\x7c\x89\x73\x52\x2c\xc9\x6f\xa6\xb9\x19\xd9\x96\x63\xcd\xd9\x96\\n\x2d\x2b\xcd\x75\x3a\x9d\x0c\x25\x41\x16\x2f\x34\xa9\x92\x54\x6c\\n\xf7\x26\xff\xfd\x16\x20\x00\xe1\x45\x12\x54\xdc\xf4\xac\xd6\x8e\\n\x08\x60\x5f\x58\x2c\x76\x17\x0b\xee\xbc\x69\xa0\x37\x68\xbc\xc0\\n\xe8\x6a\x30\x46\x97\xc1\x14\x47\x29\x46\xaf\xe1\xcb\x36\x34\x90\\n\xb6\xd3\x78\xf9\x9c\x04\xf7\x8b\x0c\xbd\x9e\x6e\xa3\x9f\xbb\xed\\n\xce\x6e\x0b\x7e\xed\xfd\x13\xfd\x7c\x1a\x87\x41\x84\xce\x56\x7f\\n\xac\x70\x1a\xc5\xcf\xff\x64\x23\x6e\x70\xf2\x10\xa4\x69\x10\x47\\n\x28\x48\xd1\x02\x27\x78\xf2\x8c\xee\x13\x3f\xca\xf0\xac\x89\xe6\\n\x09\xc6\x28\x9e\xa3\xe9\xc2\x4f\xee\x71\x13\x65\x31\xf2\xa3\x67\\n\xb4\xc4\x49\x0a\x03\xe2\x49\xe6\x07\x51\x10\xdd\x23\x1f\x4d\x01\\n\x33\x81\x07\x9d\xb3\x05\x40\x4a\xe3\x79\xf6\xe8\x27\x18\xfa\xcf\\n\x90\x9f\xa6\xf1\x34\xf0\x01\x24\x9a\xc5\xd3\xd5\x03\x8e\x32\x3f\\n\x23\x28\xe7\x41\x88\x53\xf4\x3a\x03\x96\xb6\xee\xd8\x88\xad\x6d\\n\x8a\x67\x86\xfd\x90\x00\x04\xa2\x49\x33\x6f\x45\x8f\x41\xb6\x88\\n\x57\x19\x4a\x70\x9a\x25\xc1\x94\x80\x69\x42\xa7\x69\xb8\x9a\x11\\n\x4a\x78\x73\x18\x3c\x04\x0c\x09\x19\x4e\x85\x92\x12\x78\x00\x7a\\n\x95\x02\x2b\x84\xe0\x26\x7a\x88\x67\xc1\x9c\xfc\xc5\x94\xbf\xe5\\n\x6a\x12\x06\xe9\xa2\x89\x66\x01\x81\x3e\x59\x65\xf0\x30\x25\x0f\\n\xa9\xac\x9b\x84\x9b\x9d\x38\x41\x29\x0e\x29\x71\x00\x24\x00\x06\\n\x28\xd3\x6b\x1a\x69\x37\x82\x68\x49\x84\x9b\x31\x71\xa5\xe4\xc9\\n\xe3\x22\x7e\x50\xf9\x09\x28\x55\xf3\x55\x12\x01\x62\x4c\x87\xcd\\n\x62\x10\x1f\xc5\xfb\x1f\x3c\xcd\xc8\x13\x32\x62\x1e\x87\x61\xfc\\n\x48\x78\x9c\xc6\xd1\x2c\x20\xac\xa5\x5e\x83\x6b\x84\x3f\x89\xbf\\n\x62\xca\x54\x3e\xff\x51\x9c\x01\xcd\x39\x21\x64\x3e\x96\xeb\x79\\n\x66\x4d\xe9\xc2\x0f\x43\x34\xc1\x4c\x78\x80\x3a\x88\x08\x34\xf2\\n\x94\xf3\x95\x10\x22\xd2\x0c\xb4\x21\xf0\x43\xb4\x8c\x13\x8a\x55\\n\xe7\xf7\x6d\x4e\xc5\x45\x1f\xdd\x0d\xcf\xc7\x9f\x7a\xa3\x3e\x1a\\n\xdc\xa1\x9b\xd1\xf0\x97\xc1\x59\xff\x0c\x6d\xf5\xee\xe0\xfb\x56\\n\x13\x7d\x1a\x8c\x2f\x86\x1f\xc7\x08\x7a\x8c\x7a\xd7\xe3\x5f\xd1\\n\xf0\x1c\xf5\xae\x7f\x45\xff\x1a\x5c\x9f\x35\x51\xff\xdf\x37\xa3\\n\xfe\xdd\x1d\x1a\x8e\x08\xb4\xc1\xd5\xcd\xe5\xa0\x0f\x8f\x07\xd7\\n\xa7\x97\x1f\xcf\x06\xd7\x1f\xd0\x09\x0c\xbd\x1e\x82\xe2\x0f\x40\\n\xe3\x01\xee\x78\x48\x71\x32\x68\x83\xfe\x1d\x81\x77\xd5\x1f\x9d\\n\x5e\xc0\xd7\xde\xc9\xe0\x72\x30\xfe\xb5\x49\x60\x9d\x0f\xc6\xd7\\n\x04\xf2\xf9\x70\x84\x7a\xe8\xa6\x37\x1a\x0f\x4e\x3f\x5e\xf6\x46\\n\xe8\xe6\xe3\xe8\x66\x78\xd7\x07\x22\xce\x00\xf2\xf5\xe0\xfa\x7c\\n\x04\x88\xfa\x57\xfd\xeb\xf1\x5b\x40\x0c\xcf\x50\xff\x17\xf8\x82\\n\xee\x2e\x7a\x97\x97\x04\x1b\x01\xd7\xfb\x08\x6c\x8c\x08\xa1\xe8\\n\x74\x78\xf3\xeb\x68\xf0\xe1\x62\x8c\x2e\x86\x97\x67\x7d\x78\x78\\n\xd2\x07\xfa\x7a\x27\x97\xfd\x1c\x1b\x70\x77\x7a\xd9\x1b\x5c\x35\\n\xd1\x59\xef\xaa\xf7\xa1\x4f\x47\x0d\x01\x10\x65\x92\xf4\xcc\xc9\\n\x44\x9f\x2e\xfa\xe4\x29\xc1\xda\x83\xff\x4e\xc7\x83\xe1\x35\xe1\\n\xe7\x74\x78\x3d\x1e\xc1\xd7\x26\xb0\x3b\x1a\x8b\xd1\x9f\x06\x77\\n\xfd\x26\xea\x8d\x06\x77\x44\x32\xe7\xa3\xe1\x15\xe5\x94\x48\x17\\n\x06\x0d\x29\x1c\x18\x7a\xdd\xcf\x01\x11\xc9\xab\x13\x04\x5d\xc8\\n\xf7\x8f\x77\x7d\x01\x13\x9d\xf5\x7b\x97\x00\x0e\x66\xeb\x5a\x9f\\n\xd0\xb7\xf0\x60\xa7\xd1\xb8\xbd\x49\xe2\x7b\x58\x79\xe9\x89\x9f\\n\x78\x8b\x38\x09\xfe\x8c\x61\x29\x87\xe8\xbf\x0d\x04\x3f\x93\x38\\n\x99\xe1\xc4\x43\x9d\xe5\x13\x28\x70\x18\xcc\xd0\xab\xdd\xde\xee\\n\xf1\xee\xf1\x3b\xda\x9c\xe1\xa7\xac\xe5\x87\xc1\x7d\xe4\x21\x58\\n\x4e\x19\x4e\xf2\xe7\x4b\x7f\x46\x96\x2e\x1d\x97\x3f\x99\xf8\xd3\\n\x2f\xf7\x49\xbc\x8a\x66\x1e\x7a\x05\xf6\xeb\xbc\x73\xfe\xae\xf1\\n\x4d\xc5\xee\x4d\x17\xab\xe8\x8b\x85\x08\x31\xb6\x35\x8d\xc3\x18\\n\xc8\xf9\x03\x0c\x1f\x06\xfb\x95\xf8\xb3\x00\xd0\xbe\x4e\x97\x09\\n\xf6\x67\x5e\x82\xe7\x21\x2c\xaf\x26\x7a\xea\x78\x9d\x26\x7a\xee\\n\x78\xed\xb7\xfb\x7b\xfb\xf0\xbd\x4b\xbf\x77\xbd\x36\xac\xc1\x2c\\n\x5e\x7a\x6d\x94\xdc\x4f\xfc\xd7\xdd\xa3\x26\x3a\x38\x68\xa2\x4e\\n\x07\x9a\xbb\xfb\xfb\xdb\xac\xb9\x93\x37\xef\x1e\x36\xd1\x11\xfc\\n\xdf\xd9\x3b\xc8\x9b\xb7\x09\xcd\x8d\xdb\x71\x1c\x87\xe3\x60\xd9\\n\x70\x92\x91\x49\x3d\xc0\x7e\x7d\x0c\x94\x74\xda\x5d\x82\xfa\x70\\n\xfb\x5d\xde\x93\x35\x3f\x2e\x82\x0c\x17\xc9\x31\x5e\xfa\xd3\x20\\n\x7b\xf6\x50\xb7\xdd\xce\x89\xf9\x14\xcc\xee\x71\xc6\x68\x61\x20\\n\xd2\x20\xfc\xca\xe7\xc2\xc4\xff\x6a\xb7\xdd\x3d\xef\x9e\xe7\xcd\\n\x60\xf7\x30\x35\xb9\x2d\xa3\xe3\xab\xdd\xd9\x11\x9e\x1e\xeb\xfd\\n\x18\x94\x49\x08\xfd\x4d\x14\x61\xb0\xf4\x98\x48\xde\x49\xe2\x69\\n\x05\x0f\xfe\x3d\xf6\xc0\x52\x45\x8c\x37\x30\xe9\x64\x16\x3d\xa4\\n\xf0\xe1\x01\xef\x0f\xa0\x02\x40\x7e\xa3\x68\xf6\x5f\x1d\x1e\x1d\\n\x1d\x1e\x4f\x14\xa1\x31\x6a\x74\x40\x39\xd5\x78\x56\x0c\x8b\xf3\\n\x48\x46\x9e\x2e\xf0\xf4\xcb\x49\xfc\xc4\x7a\xa7\x44\xd6\x44\xfa\\n\xfb\x42\xfa\x9c\xe6\x35\x1b\x1c\xce\x64\xc2\x08\x7a\x00\xbd\x0c\\n\x40\x9a\x71\x96\xc5\x0f\x30\x4f\x64\xac\x0c\xdc\x83\x8d\xc8\x9f\\n\x84\x82\x26\xc1\x14\xfd\xa1\x8b\x42\x74\xf5\x02\xd8\x16\xa6\x7e\\n\x16\x27\xcd\xc6\xed\x07\x20\x7c\xa9\x3e\x65\x20\x1e\x83\x59\xb6\\n\x00\x25\x39\xe2\x74\x2e\x30\xd9\x31\xf8\x93\x6f\x65\x63\x19\xb9\\n\x21\x9e\x67\x36\x62\xd7\xfd\xbd\x55\x34\x25\x4f\xc1\x89\xa8\x68\\n\xcf\xa7\xcf\x4e\xb1\x02\xa5\xb4\x5d\x51\x02\xa6\x3d\xab\x24\x7c\\n\xed\xed\xfc\x91\xa6\x9f\x03\xd8\x31\xd3\x9d\x64\xba\x43\x7b\x4f\\n\xe2\xa7\xcf\x62\xe0\xdb\x65\x74\xbf\xed\xc0\x86\x37\x07\xc7\x25\\n\xad\x64\x66\x49\xcc\x93\x03\xb9\x1c\x5a\x79\x2f\x06\x8d\xb2\xc5\\n\x0d\xc7\x5a\x99\xea\xb0\xf9\x99\x22\xac\x60\xb6\x7c\xc6\x5c\xe6\\n\xab\x7c\xb6\x36\x9c\x2b\xb7\x99\x72\x99\x27\xb7\x59\x72\x99\xa3\\n\x17\x9b\xa1\x3a\xf3\x03\xff\xc2\x19\xf1\xe3\x22\x70\xa5\x0b\x58\\n\x54\xfa\x88\xb9\xaa\xee\xc9\x19\xb1\x72\xab\x23\xae\xec\x53\xaa\\n\x24\x76\xc4\xce\xea\xa0\x0c\xaf\x23\xb1\xd2\x09\xb5\xf4\xdc\x90\\n\xa4\x3a\x4b\x4d\x98\xf7\x0a\x35\xd3\x76\x81\x1a\x7a\xc5\x47\x3a\\n\xdb\xb9\x0a\x8a\xcc\x8e\x1b\x18\x5d\x1b\x55\x23\xf0\xce\xe2\x93\\n\x15\xec\x83\xd1\x5f\xb2\xa3\x4a\xf0\x1d\x36\x55\xb9\x77\xd1\x0e\\n\xda\xed\xe8\x3b\x68\xfe\x44\xc7\x56\xb0\x9f\x55\x75\x71\x34\x93\\n\xc4\xab\x8d\xad\xfb\x59\x25\x02\xbe\x1e\x2a\x3b\x96\x59\x39\xcb\\n\x9c\x38\x13\x6b\x2c\x95\x02\x4a\x2a\x85\x66\x8a\xec\x05\xc8\x74\\n\x96\xa8\x93\x3c\x3d\xef\x01\x47\xab\x96\x9f\x24\xf1\xa3\xdb\xfe\\n\xb1\x39\xc9\xae\x72\xd5\xed\xba\x4b\x37\x61\xda\x9d\x3a\xab\xd6\\n\xdd\x85\x85\x22\xf3\x5e\x21\x7b\x65\x49\x1b\x92\x73\x95\x5b\xb9\\n\x5d\xfa\x4e\x3b\xa8\x2b\xbf\x89\xac\x71\x7b\x05\x3a\x02\xd1\x6d\\n\x49\x04\x22\x45\x63\x5a\xfc\xf6\x6d\x3d\xde\xa3\x01\x8d\x01\xc5\\n\x43\x59\xe2\x47\x60\x57\x13\x88\x83\x2d\x03\x8a\x23\x20\x6d\x64\\n\x45\x24\x6b\x02\x56\xf5\xa0\x76\x10\xac\x04\x97\x66\x48\xa9\xda\\n\xfc\x96\xb0\xcb\x2c\x22\xe6\x0d\xc2\x3a\x13\xda\xdc\x48\xb1\x84\\n\xc8\x39\x32\x69\x67\x21\xd0\x80\xcd\xa9\xd8\xb8\x78\x8f\x7d\xad\\n\xc7\x7a\x4a\x44\xa8\x0e\x5d\xd0\x6e\x1b\x7e\xf1\x7f\x28\x0c\xe5\\n\x71\x96\xd8\xfe\x4c\x5a\xe5\x49\x41\x3b\x6f\x48\x52\x14\x27\x5f\\n\x31\xdd\x3a\x49\xc6\x30\x59\x47\xe2\x6c\x34\x49\xe3\xa8\x24\xe9\\n\x93\x6e\xc6\xc8\x79\xdf\x14\x03\x22\xa2\xfb\x2c\xd1\x22\x36\x3d\\n\x5b\xd6\x26\x24\x6d\x93\x70\x85\x2d\xfc\x74\x74\x36\x93\x1c\x90\\n\x2e\x2e\xbe\xd6\x90\x63\xdc\xda\x00\x01\xc0\x82\x6f\xe1\xa7\x69\\n\xb8\x4a\x83\xaf\x24\xb3\xc9\x41\xbc\x47\x74\xd5\x81\x10\x40\x74\\n\xd9\x73\x28\xb5\x11\x58\xaf\x53\x8c\xd1\x6d\x8f\x0a\x8a\x7a\x3d\\n\x84\xdd\xac\xcf\x01\x6d\x13\xa9\xe9\x64\x79\x0a\xae\xb5\x41\x40\\n\xdf\x15\x84\x3a\x22\x11\x93\xb6\x01\x36\x9b\x95\x2b\x47\x5b\x9b\\n\xb3\xba\x7c\x6d\xce\x55\x31\x4f\xa0\x0d\x76\x4d\xa0\x76\x18\x4d\\n\xa8\x49\xd7\x95\x61\x33\x4d\xd8\x44\x0b\x8a\xfd\x36\x07\xe8\xee\\n\x82\xaa\xde\x74\x4a\xf0\xd5\xe3\xa5\x0e\x27\x1b\xf2\x51\xc9\x05\\n\x35\x25\xb9\x93\x85\x2c\xc6\xb8\x02\x07\x19\xfc\x99\x0e\xa6\x80\\n\xf3\x2d\x99\x65\x08\x0b\x62\x86\xbd\x36\xf9\x54\x26\x4f\x09\x85\\n\xbd\x49\x0a\xf6\x7a\x9a\x0d\xc0\xe8\xfe\x12\xe0\x47\x06\xc9\x0f\\n\xc1\xdd\x21\xce\x8e\x99\x53\xad\xdc\x8b\xcc\x1d\x41\xd9\x47\xf3\\n\x64\x2a\x11\xdd\x2a\x95\x0c\xb5\x9a\x28\x96\xb2\xa0\xb9\x03\x8b\\n\xc4\xde\x2d\x87\xc1\x96\x8d\x92\x67\x56\x69\x96\xdb\x9f\x68\x40\\n\x44\x98\xc9\x1f\xc8\x9e\x14\x7f\x76\x07\x80\xb0\x1d\x51\xee\xbb\\n\x11\xd8\x97\xe0\xcb\xf5\x67\x41\x56\xec\x15\xf1\x33\x02\x85\xbb\\n\xae\xba\x6f\xb6\xe8\x52\xf7\x72\xe2\x2b\x5d\x98\x32\xf9\x59\xfc\\n\x2e\x1e\x2a\xab\x27\x21\x35\xe1\xb2\xed\x90\x9c\x29\xa0\x6e\x9b\\n\xcf\xcd\x3a\x0a\xcf\x82\x0c\x6c\x15\x0b\x8e\x57\x13\x50\xdb\x2c\\n\x89\xc3\x56\x0c\x7a\x4b\x34\x3c\x1f\xfe\x4e\x6f\x5e\xc6\x29\x3d\\n\x2c\x04\x17\x2e\x5e\xda\x0e\x5e\x8c\x6d\x99\x3f\x67\xfb\xb2\xd9\\n\x40\x29\xec\x08\x0a\xb9\x62\xdf\x4d\x01\x5f\xd8\x4b\xb0\xaf\x4c\\n\xa5\xc9\x68\x6d\xff\xcf\x70\x5b\x73\x54\xea\x29\x54\x43\xf5\x4b\\n\x3a\xfb\xaa\x5c\x3d\xb4\x0b\xe8\x3a\xd4\xd1\x62\xff\x30\xa9\x91\\n\x10\x81\x56\xf5\xba\xc7\x5d\xfb\x9c\xed\x99\x4e\xcf\x5a\x19\xd9\\n\x30\x95\x4e\x6f\xe1\x47\xb3\x10\x9b\xf4\x5a\x20\x1c\xb4\xf7\xcf\\n\xf7\x99\x3a\x43\x20\xd4\x62\xae\x8f\x46\xb1\x4a\x8c\x86\x0d\x66\\n\xaa\x45\x63\x20\x03\x1f\x97\x46\x9b\x09\x82\xfd\xb5\x9d\xbf\x94\\n\xdb\x48\xdd\x0a\xcb\x4e\x5a\xdb\x70\xd2\xc4\x13\xab\x6a\x52\xb0\\n\x46\xbb\xae\xd9\x1a\x8f\xd0\xf3\x2f\xe1\x91\xac\x87\x62\x16\x4d\\n\x8e\x0c\xa6\xad\x2c\x12\xa8\x75\x39\xb4\xcc\x22\x8b\xbf\xab\x7a\\n\x89\x60\xa4\xce\x8c\xbe\x00\x97\xce\x13\x59\x35\x93\x8c\x4f\x54\\n\xd5\xcd\x9d\xd1\xf5\xb4\xfe\x4d\xb3\xb9\x5a\xe6\x9e\x89\x44\xbe\\n\xca\xdf\x2c\x7e\x8c\x8c\x2e\x96\x58\x5c\x6c\x8d\x86\xb2\x2c\x09\\n\xf3\x45\xe0\x89\xf8\xb4\x0e\x65\xc0\xa5\xa1\x30\x13\x19\xf8\x70\\n\x25\x26\x4b\xb6\x95\x5c\x82\x86\x01\x56\x8c\xaf\xbe\x20\x37\x30\\n\xc0\x76\x0b\x5b\x4d\xac\x6e\x5f\xb9\x12\xd4\x31\xb0\x42\x17\x35\\n\x74\xf2\x66\x23\x99\x1f\x47\xd3\xb3\x5a\xbe\xbc\xe1\x81\xdd\x7a\\n\x63\xbb\xf3\xa2\xcc\x11\xf5\x7e\x79\xf6\xf2\xe4\xce\xc6\x7b\x07\\n\xe7\xd0\x62\x57\xcd\x3e\xd4\xd8\xd4\x9b\xc9\x1f\x37\x81\xe5\x33\\n\x68\xb3\xa7\x66\x27\x77\x6b\xba\x9e\xcc\xbf\x6d\x0e\x85\x3d\xe5\\n\xe4\x17\x5a\xd3\x42\x93\x50\x69\x4b\xed\xa0\x85\x25\x75\x01\x7c\\n\x3b\xc6\x4f\x99\x7b\xfc\xe2\x14\xe6\x29\xa9\xd6\x9b\xd0\x0f\x22\\n\x67\x24\x15\x58\x6a\x79\xeb\x04\xfb\x05\xf6\xa1\x99\x04\xb4\x24\\n\x55\x42\x13\x27\x25\xe9\xeb\xf2\x78\x56\x8d\x48\xf6\x4a\x28\x38\\n\x98\x92\x0f\x53\x89\xe0\x4f\xfc\x21\x09\x96\x95\x49\x84\x14\x3a\\n\xde\x43\x47\x8b\xc3\xda\x35\x1c\x56\x9e\xdf\x6d\xdc\x5e\x81\x78\\n\x3f\x05\x11\xe8\x93\x94\x05\xad\x95\xa2\x37\xab\xb4\x74\x16\xc5\\n\x61\xa7\x55\xec\x33\x9f\xd6\x86\xaa\x09\x76\x1b\x55\xe2\x04\xac\\n\x88\xb8\xc3\x23\xf8\x1c\xd4\x24\xae\x22\x5e\x53\x69\x17\xe7\x18\\n\xa6\xb0\x84\x6c\x4b\xa2\x27\x8b\x86\x54\x13\x58\x2b\xbf\xdc\xb8\\n\x3d\x4f\xfc\x07\x5c\x3f\x46\xdd\xdb\xdb\xcb\x45\x4f\xc7\xff\x36\\n\x27\xbf\xef\x16\xfe\x12\xbf\xdf\x6a\x6f\xfd\x5e\x03\x9e\xe2\xe4\\n\x08\xa8\x77\x99\x4f\x92\x5b\x4a\x89\x5e\xd1\x28\x29\x3b\x4f\xea\\n\x0b\xc1\x28\x59\x6a\x30\x15\x34\x20\xd5\xa3\xdd\x23\x5d\xec\xea\\n\x9c\x4a\x8a\x3b\x07\x13\xdc\x7a\x64\xf3\x35\x89\xc3\x99\x82\xcc\\n\x12\xcd\x56\x2e\xbe\x8b\x07\x50\xcd\x0c\xc6\x4f\xfc\x44\xe4\xed\\n\x0c\x80\xdc\xa0\x56\x82\xfb\xa5\x1c\x9c\xbc\x22\xdc\x49\xa4\xa3\\n\x5c\x80\xba\x93\x29\x83\x94\x8f\x64\x6f\x56\xe9\x42\x29\x77\xa8\\n\x5f\x8d\xc9\x54\x8d\x9b\x30\xcd\x0f\x13\x19\xca\xde\xde\xf1\x9e\\n\xea\x44\x9b\x99\x30\x25\xb3\x23\xdc\x60\xed\xfc\xcc\x6c\xd0\x0e\\n\xa8\xb4\xc4\x51\x91\x3b\x2d\xd6\x84\x76\x4e\xab\x8a\x45\xcf\xb8\\n\xbe\x88\x30\x2c\x69\xb8\x17\x16\x86\x43\x1a\x6d\xe7\x8d\x45\x20\\n\x6f\x76\x64\x2d\x78\xb5\xb7\x4f\x3e\x86\x4c\x68\xa2\xb4\xb0\xd2\\n\xd9\x76\x4c\xca\x8c\x27\x2d\xfc\x89\x1f\x26\xb1\x54\xb1\x5a\x5c\\n\xcc\xab\x42\xaa\x70\x58\x5e\x3a\xbd\x6a\x26\x70\xa5\x1c\xd8\xa1\\n\x38\x25\x94\xa4\xc2\x8e\x05\x0a\xc5\x62\x59\x02\x22\x14\xec\x1d\\n\x1c\x1f\x1c\xab\xf2\xe1\xa1\x80\x84\x81\x3d\x11\x99\xce\x65\x10\\n\x49\x1d\x79\x82\x9a\x7f\xe7\xbe\x98\x00\x24\x3b\x68\x3a\x2c\xea\\n\x39\xf1\x81\x09\xc6\xeb\xef\xd5\x99\x77\x8b\xdd\x50\x18\x29\x73\\n\xc5\x0e\xba\x07\x47\x87\xbb\x16\x8d\xdf\xb5\x2b\xf6\xda\x55\x29\\n\xd3\x9b\x3d\x9f\x7c\x54\x32\x50\xd1\xd1\x87\x9b\x62\x39\x6f\xcd\\n\xce\x4a\xad\xc8\xc8\x9b\x25\xf1\xb2\x45\x82\x05\xbe\x2e\xcc\x00\\n\x84\x49\xa2\x3c\x46\x93\x73\x5f\x4a\x0a\x44\x66\x86\xc8\x92\xeb\\n\xb2\x1e\x39\xd3\x36\x46\xeb\xcc\x4f\x80\x7a\xff\xd9\xec\x50\xb4\\n\xce\xc8\xe4\xe5\xb6\x46\x48\x4c\x4f\x79\xe6\xa6\xcb\xd6\x49\x93\\n\x88\x88\x9c\x2a\x8b\x5a\x8a\x63\xfa\x22\x90\x1e\xb9\xb0\x65\x6f\\n\x11\xe5\xaa\xb6\x46\xb7\x9a\x4c\x23\x2c\xd5\x4c\x85\x56\x88\x62\\n\x51\xe0\x23\xf8\x1c\x68\x07\x1b\xf9\x72\x67\x76\x57\x59\x2c\xba\\n\xd5\x52\x0b\x0f\x5d\xac\xe0\x86\xd1\xa0\xe5\xf8\xc8\x66\x25\x75\\n\x8b\x05\x31\xf3\x44\xf6\x3a\x2a\xce\x5a\x0a\xd6\x83\x7c\x65\xc3\\n\xba\x1c\xf2\x63\x26\xbe\x22\x6c\x84\xd0\x99\xfd\x81\xa4\xe4\x09\\n\x5b\x1b\x25\x22\x8f\x60\xda\xf7\x75\x8a\x41\x94\xc5\x96\xf4\x89\\n\xe7\xf3\x4a\x7f\xb0\x2c\xc1\x57\x71\x78\xf2\xad\x84\x74\xc7\x62\\n\x51\x2d\x29\x45\x83\x21\x03\xe6\x7a\xcd\x59\x98\x95\x16\x64\x89\\n\x48\xe4\xd5\x3e\x9f\x7f\x87\x11\xd9\x50\x2c\xba\x4d\xd9\xc8\x6c\\n\x34\x6e\x2f\xfd\x09\x0e\xb5\x5d\xb8\x2d\x96\xb1\x1c\x83\xf1\xd3\\n\x6f\xf7\xa8\x4d\x9c\x97\x7b\x4b\x3f\xc2\xc5\x37\xe8\xc4\xce\xa6\\n\x2d\x7b\x7d\x97\x96\x0c\x39\xc0\x5e\xd7\x10\xfe\xb1\x84\xed\x0d\\n\xa2\x95\xe7\xd6\x2c\xf1\x1f\x4f\xfc\x34\xbf\x44\x45\x9a\xd6\xde\\n\x3b\xa9\x1d\x23\xf1\x14\xbf\x6b\x9a\xdf\x21\x9d\x3c\xd3\xb2\x34\\n\x56\x31\x96\x43\xb5\x1e\xd5\xb7\x4b\xf9\xcc\x6f\xeb\x85\x71\x8a\\n\xd9\x7a\x47\xd5\xe5\x3d\xa4\xb7\xa4\x02\xa5\x25\x8c\x36\x14\xae\\n\x77\x4c\xe8\x10\xda\xf7\xbb\xb0\xb1\x5d\xc5\x8d\xaf\x16\xeb\xed\\n\x88\x11\xa6\x66\x3c\xbc\x41\xe3\xde\xc9\x1d\x2d\x3e\xe2\x04\x64\\n\xfe\xc4\x23\x5e\x87\x12\x3d\xbe\x9a\x74\xc8\xa7\xd8\x4f\x32\x3d\\n\x61\xbe\x61\x15\x28\x6b\xc1\x1e\x25\x87\x5e\x72\x35\xa3\xe1\x91\\n\x50\x9f\xa5\xc0\x85\xb3\xb8\x2c\x5d\x55\x89\x05\x9b\xde\x4f\xf6\\n\x32\x45\x95\x61\x17\x7f\xd2\x96\x82\x71\x97\x8a\xad\xaf\xc1\xa6\\n\xee\xd8\x99\x6c\xb6\x2b\xd9\xcc\x35\xb8\x38\xd4\xdb\x3b\xda\x3f\\n\x3c\x98\x70\x0d\x39\x19\x8e\xc7\xc3\x2b\xbb\x92\xe4\xac\x7c\xb7\\n\x9e\xe4\x45\x1f\x2f\xaf\x24\xcc\x29\x2d\xd5\x13\xab\xe3\x6a\x55\\n\x15\x36\x6f\x3f\x58\x5b\xac\xb2\x29\x56\xab\x72\x6d\xb1\x32\x6b\\n\x55\x18\x9d\xd9\x2a\x9d\x91\x0a\xb6\x40\x67\x2e\xfb\xe7\x63\xbb\\n\xc6\x10\xf2\xbe\x5b\x5f\x58\x3a\xe4\xaf\xb1\x2a\x16\x4d\xd8\x48\\n\x5d\x28\x91\x3f\x58\x59\x12\x91\x04\x77\xb2\x2c\x16\x3d\xd8\x48\\n\x59\x54\x56\x6b\x98\x17\xa2\x2b\xf9\x4b\x0e\xac\xca\x92\xfb\x0a\\n\xdf\xab\x2d\x05\x42\xf9\x11\x9b\x50\xa1\x01\xd2\x25\x98\xd3\xf8\\n\xff\xad\x2d\x2e\x96\xc5\xec\x53\xc1\x69\x0d\x65\x61\x60\x50\x9e\\n\x34\x67\xd7\x66\xa4\xaa\x5c\x0f\x47\xd4\xbf\x67\xc0\x6a\x54\xe3\\n\x02\x27\x00\x1f\x59\x11\x50\x8e\x6a\xc2\x37\xcb\x81\x5c\xc8\xe7\\n\xf1\x49\x2d\xfa\x8d\xa8\xc6\x85\x11\x77\x4c\x25\xf5\x6a\x34\x8c\\n\x39\x8b\xa7\x5f\xf2\x60\xa3\x24\xcc\x68\xef\x9e\xef\x32\xf5\xa4\\n\x75\xa6\x13\x3f\x69\xe5\xee\x2a\xc1\xe3\xe4\xa5\x8b\x71\x51\x9c\\n\x3c\xf8\x61\xf1\x40\xd0\x1d\x20\x49\x4a\xd0\xac\x29\x54\x1d\xeb\\n\x26\x52\x9a\xe6\x61\xec\x67\x3c\x88\x28\x62\xa5\xe0\xa2\x92\x65\\n\xf9\x97\xb9\xf9\x45\x14\x89\x32\x8a\x22\xba\x0a\xd6\x8a\xc7\xde\\n\x21\xb2\xbf\x4f\x5f\x0e\xc2\x7e\x75\xda\x15\x02\x10\x57\xd5\x4b\\n\x10\xaa\xc1\x87\x5c\xdc\x8d\x5a\xe2\x97\xf5\xdd\x2a\xa5\x24\xf1\\n\x5c\x34\xa0\xbe\x0c\xd2\x4c\x4e\xdb\x96\x45\xa9\xc5\x96\x4f\x06\\n\xea\x4d\x40\xe0\xd3\x85\xa8\xff\x07\x24\x7a\x93\xfd\xb5\x1e\x56\\n\x7d\x92\x66\x4f\x52\x2a\x01\x50\x40\xf4\xd3\x56\x1a\x4c\x42\x10\\n\x4f\xea\xfd\xe4\xcf\xfe\x13\x07\x51\xda\x22\x77\xa0\x14\x65\x2a\\n\x29\x7a\xd9\x04\xd1\x5f\x88\xe7\x27\x82\x68\xba\x08\xc2\x19\xf4\\n\xcc\xbf\xfd\x08\xb4\x25\x58\xa9\xee\x92\x8b\xba\xc6\xa0\xbc\x45\\n\x1d\x2b\x0f\xad\x8c\x9d\x73\x38\x9f\x73\x38\x65\xe4\xc5\x4b\x06\\n\xda\x4e\xa3\x8d\x38\x73\x88\x42\x9a\x2b\x6d\x04\xcc\x77\x09\x4e\\n\x64\xc0\x6b\x8b\x4f\x31\x3b\x8e\x42\x6c\xc5\x91\x64\xbd\x37\x91\\n\x65\x31\xbd\xe5\x12\x65\xd4\xd6\x91\xab\x49\x2c\xb7\x4a\xec\x1a\\n\xa3\xe6\xad\x48\x66\xab\xb0\xc3\x9a\x6a\x5b\x07\x54\x64\xc4\xdb\\n\x4d\xc4\xfe\x63\xd4\xc8\x6f\x27\x92\x5d\xc2\x73\xfa\xd3\xb0\x10\\n\x5b\x45\x6b\x15\xa9\xd5\x94\xda\xce\x82\x19\x41\xac\xdc\x24\xbf\\n\x7a\xe3\xc1\x00\x80\x51\xfb\x6d\x5e\x3c\x09\x7b\x64\xdb\x58\x14\\n\x6f\x57\xba\x30\xcb\x05\x64\xdb\x92\x65\x9a\x8a\xaa\x4b\x64\x1c\\n\xf4\xd4\xd5\x4f\x3e\xf0\xd7\x7a\x91\xf7\x78\x91\x49\x79\xce\xff\\n\x3c\x75\xf3\x6f\xf0\xa7\xd3\xcc\x3d\xa8\xfc\x75\x5d\xa8\xfd\xb6\\n\xcd\xce\x53\x9a\xe2\x49\x17\xbd\xf2\x8f\xc8\x87\x3f\xea\x40\xb4\\n\xdc\x25\x9f\xed\x77\x2e\xd2\xe0\x39\xea\x3d\x23\x47\xad\xd5\x28\\n\x79\xa8\xb5\xe7\x2e\x07\x36\x37\x5a\xb5\x89\x1b\x2d\xee\x13\xd3\\n\x36\x02\x85\xaa\x89\xd1\x09\xda\x70\x5a\xcc\x09\xd1\x26\xea\x07\\n\x4e\x4b\x9b\x4e\x4c\xb9\x14\xd6\x9e\x7a\x61\x2c\x54\x7a\x4d\xbe\\n\x32\xd6\xb3\xdf\x08\x2b\x4f\xf6\x0b\x9a\x7e\x5b\xc6\xcb\xd5\xf2\\n\x2a\x9e\xe1\xf7\x5b\x9d\xad\xdf\xd1\x7f\x49\x56\x3f\x8e\xc2\x67\\n\x7a\x11\x9c\xde\xe9\xa3\xfd\x6e\x48\x37\x12\xc6\xeb\x15\x2a\xf4\\n\xce\x19\x3d\x0a\xf0\xbf\x60\xf4\xe8\xe7\x03\xc9\x79\x00\x85\xcc\\n\xaf\xcc\x92\x91\xd5\x5c\x69\x2c\xed\x97\xd3\xdb\x35\xe8\x1d\x44\\n\xf4\xbd\x93\x85\xc4\x76\x5e\x90\x58\x1a\x25\x49\x61\x98\x30\xba\\n\x52\x64\x46\xdf\xde\x51\xea\xe2\x3b\xa9\x80\xed\xea\xe4\x1a\x0b\\n\x7f\xd1\x89\x82\x5a\xbc\xad\x0a\xb1\x9f\x42\xba\xd4\x48\xc0\xa9\\n\x10\xa6\x88\x2a\x10\x2c\x91\xe5\xfa\x44\x15\x4d\x70\x18\x3f\x92\\n\x97\xc4\xae\x08\x0a\x3a\x4f\xec\xdd\xac\xca\x54\xc1\x24\x9c\xe1\\n\xd0\x7f\xc6\xb3\xfc\xfb\x03\xcc\x6f\x9e\x33\xd2\x89\xd6\x2f\xf8\\n\xd7\xac\x35\xa7\xf6\xa0\x75\x48\xb4\x20\x4f\x35\xb6\xba\x4c\x23\\n\xd2\x45\x30\xcf\x50\x90\x21\x1f\x4d\xe0\x77\x7e\x7e\x65\x30\x94\\n\x32\x8e\xc8\x4b\x58\x0d\x96\xf4\xd5\x52\xcc\x45\x61\x34\x5a\x3f\\n\xb7\x77\xe0\x92\xdb\x13\x9d\x80\xa1\x0e\x7c\xc9\x6d\x1c\xfa\x07\\n\xa9\xcf\xa1\x4b\x80\xbd\xe7\xe1\x3d\x5d\xce\xe4\x6d\xae\xf1\x94\\n\xbe\x79\x37\x7f\x43\x2c\x2b\x33\xe3\x86\x51\x40\xb3\x94\xe2\x19\\n\xac\xca\xd7\xaa\x6b\x56\x60\xd8\x61\x51\x2f\x91\x01\xe4\x29\x74\\n\x3e\x9b\x9d\xc2\xc9\xac\xb0\xfb\x5a\xc1\x87\xae\x6b\xc5\xf7\x67\\n\xab\x8b\x7c\xd8\x49\x8a\x54\xe7\x93\xd3\x7a\x24\xe5\xd0\x42\xec\\n\x18\x29\xdf\x27\xc1\x8c\x88\x7c\x5d\x90\xc5\x4a\xda\x0b\xd6\xae\\n\x14\x46\x4b\x88\xc0\x54\xac\x0b\xf0\xed\x25\xc8\x6d\x83\x3a\xf5\\n\xa5\x2c\xa6\xf7\xb9\x6e\xd0\xdc\x4e\x6e\x60\x6c\xfe\xa6\xa5\x26\\n\x4d\xf1\x37\x75\xec\xc2\x85\xf5\xa7\x59\xf0\x15\x97\xf8\xb8\xa2\\n\x43\x91\x93\x9c\x77\xd8\xc4\x0b\x6e\x14\x49\xcf\x58\xc3\x6e\x1b\\n\xb5\x5e\xfc\x29\x49\xdf\x72\x4f\xc2\xa4\xb8\xe6\x45\x09\xb7\x3b\\n\x12\x45\x3a\x41\x97\x9d\xe5\xa5\xbc\x05\xd4\x7a\xeb\x6b\x42\xde\\n\x3c\x48\xd2\x4c\xd1\x3d\x6b\x37\x62\x52\x21\x70\xd3\x6a\xed\xc5\\n\x69\x99\xe5\x2e\x47\x29\x40\x0b\x18\x23\x71\x67\x05\x20\xdd\x17\\n\x2d\x27\x5d\xee\x68\x27\x7e\x7d\xac\xe5\x4a\xbd\x79\xdb\x52\x86\\n\xa4\x33\x60\x07\xc2\x1c\x83\x86\x7a\xce\x22\x5d\x8c\xb0\xa8\xd0\\n\x7e\x6f\xff\x78\xff\x98\x65\x9b\x89\x25\xa5\xaf\x3a\xa1\x9b\x60\\n\x9c\x64\xd2\x3b\x4f\xc8\xbe\x26\x23\x5d\x57\xcf\x6c\x66\xec\x65\\n\x58\xbc\x40\xc9\xb9\x30\x4a\xae\xbf\xa1\x26\xe3\x34\x4e\x22\x9c\\n\x70\x6b\xce\x57\x8e\xd3\xc2\xd9\xa0\x00\x59\x6c\x56\xf1\x13\xd2\\n\x33\xaa\x95\x17\x56\xf5\x5b\x19\xf4\xa5\x0d\xfe\xa4\xec\x70\xcc\\n\xa5\xa8\x7d\xd3\x0a\x0e\x5b\x7d\xbc\x71\x46\x54\x7d\xba\xca\x5d\\n\x77\xa4\x30\x25\xbd\xba\x85\x28\x57\x00\xea\x1d\x4c\x83\x3f\x31\\n\x12\xcf\xa1\x53\xca\xf7\x6b\x72\x9d\xc4\x63\x9d\x6a\x70\x6e\x96\\n\xa3\xb3\x8b\x32\xd9\x2a\x15\x2f\x17\x73\x8b\x8a\xad\x96\x7b\x7d\\n\x1b\xe8\xb7\x3c\x32\x7c\xbf\xb5\xbb\xf5\x3b\x18\x87\xfc\x19\xf5\\n\x92\xe8\xa3\x12\x97\x9a\x5d\xdf\x01\xb2\x96\x61\x90\x65\xeb\x28\\n\xd9\x42\x97\xed\x1e\x97\x3e\xac\xfa\x10\x7f\x7d\x83\xab\xc2\x0d\\n\xb2\x80\xd6\x12\x2a\xf2\x75\x09\xeb\x08\x2d\xd2\x57\x6e\x70\x7d\\n\x6b\xfc\x0f\x54\x03\xf6\x77\\n\x00\x00\x12\x38\\n\x00\\n\x00\x62\x92\x78\x9c\xcd\x1c\x6b\x73\xdb\x36\xf2\xbb\x7e\x05\xea\\n\x7c\x89\x73\x52\x2c\xc9\x6f\xa6\xb9\x19\xd9\x96\x63\xcd\xd9\x96\\n\x2d\x2b\xcd\x75\x3a\x9d\x0c\x25\x41\x16\x2f\x34\xa9\x92\x54\x6c\\n\xf7\x26\xff\xfd\x16\x20\x00\xe1\x45\x12\x54\xdc\xf4\xac\xd6\x8e\\n\x08\x60\x5f\x58\x2c\x76\x17\x0b\xee\xbc\x69\xa0\x37\x68\xbc\xc0\\n\xe8\x6a\x30\x46\x97\xc1\x14\x47\x29\x46\xaf\xe1\xcb\x36\x34\x90\\n\xb6\xd3\x78\xf9\x9c\x04\xf7\x8b\x0c\xbd\x9e\x6e\xa3\x9f\xbb\xed\\n\xce\x6e\x0b\x7e\xed\xfd\x13\xfd\x7c\x1a\x87\x41\x84\xce\x56\x7f\\n\xac\x70\x1a\xc5\xcf\xff\x64\x23\x6e\x70\xf2\x10\xa4\x69\x10\x47\\n\x28\x48\xd1\x02\x27\x78\xf2\x8c\xee\x13\x3f\xca\xf0\xac\x89\xe6\\n\x09\xc6\x28\x9e\xa3\xe9\xc2\x4f\xee\x71\x13\x65\x31\xf2\xa3\x67\\n\xb4\xc4\x49\x0a\x03\xe2\x49\xe6\x07\x51\x10\xdd\x23\x1f\x4d\x01\\n\x33\x81\x07\x9d\xb3\x05\x40\x4a\xe3\x79\xf6\xe8\x27\x18\xfa\xcf\\n\x90\x9f\xa6\xf1\x34\xf0\x01\x24\x9a\xc5\xd3\xd5\x03\x8e\x32\x3f\\n\x23\x28\xe7\x41\x88\x53\xf4\x3a\x03\x96\xb6\xee\xd8\x88\xad\x6d\\n\x8a\x67\x86\xfd\x90\x00\x04\xa2\x49\x33\x6f\x45\x8f\x41\xb6\x88\\n\x57\x19\x4a\x70\x9a\x25\xc1\x94\x80\x69\x42\xa7\x69\xb8\x9a\x11\\n\x4a\x78\x73\x18\x3c\x04\x0c\x09\x19\x4e\x85\x92\x12\x78\x00\x7a\\n\x95\x02\x2b\x84\xe0\x26\x7a\x88\x67\xc1\x9c\xfc\xc5\x94\xbf\xe5\\n\x6a\x12\x06\xe9\xa2\x89\x66\x01\x81\x3e\x59\x65\xf0\x30\x25\x0f\\n\xa9\xac\x9b\x84\x9b\x9d\x38\x41\x29\x0e\x29\x71\x00\x24\x00\x06\\n\x28\xd3\x6b\x1a\x69\x37\x82\x68\x49\x84\x9b\x31\x71\xa5\xe4\xc9\\n\xe3\x22\x7e\x50\xf9\x09\x28\x55\xf3\x55\x12\x01\x62\x4c\x87\xcd\\n\x62\x10\x1f\xc5\xfb\x1f\x3c\xcd\xc8\x13\x32\x62\x1e\x87\x61\xfc\\n\x48\x78\x9c\xc6\xd1\x2c\x20\xac\xa5\x5e\x83\x6b\x84\x3f\x89\xbf\\n\x62\xca\x54\x3e\xff\x51\x9c\x01\xcd\x39\x21\x64\x3e\x96\xeb\x79\\n\x66\x4d\xe9\xc2\x0f\x43\x34\xc1\x4c\x78\x80\x3a\x88\x08\x34\xf2\\n\x94\xf3\x95\x10\x22\xd2\x0c\xb4\x21\xf0\x43\xb4\x8c\x13\x8a\x55\\n\xe7\xf7\x6d\x4e\xc5\x45\x1f\xdd\x0d\xcf\xc7\x9f\x7a\xa3\x3e\x1a\\n\xdc\xa1\x9b\xd1\xf0\x97\xc1\x59\xff\x0c\x6d\xf5\xee\xe0\xfb\x56\\n\x13\x7d\x1a\x8c\x2f\x86\x1f\xc7\x08\x7a\x8c\x7a\xd7\xe3\x5f\xd1\\n\xf0\x1c\xf5\xae\x7f\x45\xff\x1a\x5c\x9f\x35\x51\xff\xdf\x37\xa3\\n\xfe\xdd\x1d\x1a\x8e\x08\xb4\xc1\xd5\xcd\xe5\xa0\x0f\x8f\x07\xd7\\n\xa7\x97\x1f\xcf\x06\xd7\x1f\xd0\x09\x0c\xbd\x1e\x82\xe2\x0f\x40\\n\xe3\x01\xee\x78\x48\x71\x32\x68\x83\xfe\x1d\x81\x77\xd5\x1f\x9d\\n\x5e\xc0\xd7\xde\xc9\xe0\x72\x30\xfe\xb5\x49\x60\x9d\x0f\xc6\xd7\\n\x04\xf2\xf9\x70\x84\x7a\xe8\xa6\x37\x1a\x0f\x4e\x3f\x5e\xf6\x46\\n\xe8\xe6\xe3\xe8\x66\x78\xd7\x07\x22\xce\x00\xf2\xf5\xe0\xfa\x7c\\n\x04\x88\xfa\x57\xfd\xeb\xf1\x5b\x40\x0c\xcf\x50\xff\x17\xf8\x82\\n\xee\x2e\x7a\x97\x97\x04\x1b\x01\xd7\xfb\x08\x6c\x8c\x08\xa1\xe8\\n\x74\x78\xf3\xeb\x68\xf0\xe1\x62\x8c\x2e\x86\x97\x67\x7d\x78\x78\\n\xd2\x07\xfa\x7a\x27\x97\xfd\x1c\x1b\x70\x77\x7a\xd9\x1b\x5c\x35\\n\xd1\x59\xef\xaa\xf7\xa1\x4f\x47\x0d\x01\x10\x65\x92\xf4\xcc\xc9\\n\x44\x9f\x2e\xfa\xe4\x29\xc1\xda\x83\xff\x4e\xc7\x83\xe1\x35\xe1\\n\xe7\x74\x78\x3d\x1e\xc1\xd7\x26\xb0\x3b\x1a\x8b\xd1\x9f\x06\x77\\n\xfd\x26\xea\x8d\x06\x77\x44\x32\xe7\xa3\xe1\x15\xe5\x94\x48\x17\\n\x06\x0d\x29\x1c\x18\x7a\xdd\xcf\x01\x11\xc9\xab\x13\x04\x5d\xc8\\n\xf7\x8f\x77\x7d\x01\x13\x9d\xf5\x7b\x97\x00\x0e\x66\xeb\x5a\x9f\\n\xd0\xb7\xf0\x60\xa7\xd1\xb8\xbd\x49\xe2\x7b\x58\x79\xe9\x89\x9f\\n\x78\x8b\x38\x09\xfe\x8c\x61\x29\x87\xe8\xbf\x0d\x04\x3f\x93\x38\\n\x99\xe1\xc4\x43\x9d\xe5\x13\x28\x70\x18\xcc\xd0\xab\xdd\xde\xee\\n\xf1\xee\xf1\x3b\xda\x9c\xe1\xa7\xac\xe5\x87\xc1\x7d\xe4\x21\x58\\n\x4e\x19\x4e\xf2\xe7\x4b\x7f\x46\x96\x2e\x1d\x97\x3f\x99\xf8\xd3\\n\x2f\xf7\x49\xbc\x8a\x66\x1e\x7a\x05\xf6\xeb\xbc\x73\xfe\xae\xf1\\n\x4d\xc5\xee\x4d\x17\xab\xe8\x8b\x85\x08\x31\xb6\x35\x8d\xc3\x18\\n\xc8\xf9\x03\x0c\x1f\x06\xfb\x95\xf8\xb3\x00\xd0\xbe\x4e\x97\x09\\n\xf6\x67\x5e\x82\xe7\x21\x2c\xaf\x26\x7a\xea\x78\x9d\x26\x7a\xee\\n\x78\xed\xb7\xfb\x7b\xfb\xf0\xbd\x4b\xbf\x77\xbd\x36\xac\xc1\x2c\\n\x5e\x7a\x6d\x94\xdc\x4f\xfc\xd7\xdd\xa3\x26\x3a\x38\x68\xa2\x4e\\n\x07\x9a\xbb\xfb\xfb\xdb\xac\xb9\x93\x37\xef\x1e\x36\xd1\x11\xfc\\n\xdf\xd9\x3b\xc8\x9b\xb7\x09\xcd\x8d\xdb\x71\x1c\x87\xe3\x60\xd9\\n\x70\x92\x91\x49\x3d\xc0\x7e\x7d\x0c\x94\x74\xda\x5d\x82\xfa\x70\\n\xfb\x5d\xde\x93\x35\x3f\x2e\x82\x0c\x17\xc9\x31\x5e\xfa\xd3\x20\\n\x7b\xf6\x50\xb7\xdd\xce\x89\xf9\x14\xcc\xee\x71\xc6\x68\x61\x20\\n\xd2\x20\xfc\xca\xe7\xc2\xc4\xff\x6a\xb7\xdd\x3d\xef\x9e\xe7\xcd\\n\x60\xf7\x30\x35\xb9\x2d\xa3\xe3\xab\xdd\xd9\x11\x9e\x1e\xeb\xfd\\n\x18\x94\x49\x08\xfd\x4d\x14\x61\xb0\xf4\x98\x48\xde\x49\xe2\x69\\n\x05\x0f\xfe\x3d\xf6\xc0\x52\x45\x8c\x37\x30\xe9\x64\x16\x3d\xa4\\n\xf0\xe1\x01\xef\x0f\xa0\x02\x40\x7e\xa3\x68\xf6\x5f\x1d\x1e\x1d\\n\x1d\x1e\x4f\x14\xa1\x31\x6a\x74\x40\x39\xd5\x78\x56\x0c\x8b\xf3\\n\x48\x46\x9e\x2e\xf0\xf4\xcb\x49\xfc\xc4\x7a\xa7\x44\xd6\x44\xfa\\n\xfb\x42\xfa\x9c\xe6\x35\x1b\x1c\xce\x64\xc2\x08\x7a\x00\xbd\x0c\\n\x40\x9a\x71\x96\xc5\x0f\x30\x4f\x64\xac\x0c\xdc\x83\x8d\xc8\x9f\\n\x84\x82\x26\xc1\x14\xfd\xa1\x8b\x42\x74\xf5\x02\xd8\x16\xa6\x7e\\n\x16\x27\xcd\xc6\xed\x07\x20\x7c\xa9\x3e\x65\x20\x1e\x83\x59\xb6\\n\x00\x25\x39\xe2\x74\x2e\x30\xd9\x31\xf8\x93\x6f\x65\x63\x19\xb9\\n\x21\x9e\x67\x36\x62\xd7\xfd\xbd\x55\x34\x25\x4f\xc1\x89\xa8\x68\\n\xcf\xa7\xcf\x4e\xb1\x02\xa5\xb4\x5d\x51\x02\xa6\x3d\xab\x24\x7c\\n\xed\xed\xfc\x91\xa6\x9f\x03\xd8\x31\xd3\x9d\x64\xba\x43\x7b\x4f\\n\xe2\xa7\xcf\x62\xe0\xdb\x65\x74\xbf\xed\xc0\x86\x37\x07\xc7\x25\\n\xad\x64\x66\x49\xcc\x93\x03\xb9\x1c\x5a\x79\x2f\x06\x8d\xb2\xc5\\n\x0d\xc7\x5a\x99\xea\xb0\xf9\x99\x22\xac\x60\xb6\x7c\xc6\x5c\xe6\\n\xab\x7c\xb6\x36\x9c\x2b\xb7\x99\x72\x99\x27\xb7\x59\x72\x99\xa3\\n\x17\x9b\xa1\x3a\xf3\x03\xff\xc2\x19\xf1\xe3\x22\x70\xa5\x0b\x58\\n\x54\xfa\x88\xb9\xaa\xee\xc9\x19\xb1\x72\xab\x23\xae\xec\x53\xaa\\n\x24\x76\xc4\xce\xea\xa0\x0c\xaf\x23\xb1\xd2\x09\xb5\xf4\xdc\x90\\n\xa4\x3a\x4b\x4d\x98\xf7\x0a\x35\xd3\x76\x81\x1a\x7a\xc5\x47\x3a\\n\xdb\xb9\x0a\x8a\xcc\x8e\x1b\x18\x5d\x1b\x55\x23\xf0\xce\xe2\x93\\n\x15\xec\x83\xd1\x5f\xb2\xa3\x4a\xf0\x1d\x36\x55\xb9\x77\xd1\x0e\\n\xda\xed\xe8\x3b\x68\xfe\x44\xc7\x56\xb0\x9f\x55\x75\x71\x34\x93\\n\xc4\xab\x8d\xad\xfb\x59\x25\x02\xbe\x1e\x2a\x3b\x96\x59\x39\xcb\\n\x9c\x38\x13\x6b\x2c\x95\x02\x4a\x2a\x85\x66\x8a\xec\x05\xc8\x74\\n\x96\xa8\x93\x3c\x3d\xef\x01\x47\xab\x96\x9f\x24\xf1\xa3\xdb\xfe\\n\xb1\x39\xc9\xae\x72\xd5\xed\xba\x4b\x37\x61\xda\x9d\x3a\xab\xd6\\n\xdd\x85\x85\x22\xf3\x5e\x21\x7b\x65\x49\x1b\x92\x73\x95\x5b\xb9\\n\x5d\xfa\x4e\x3b\xa8\x2b\xbf\x89\xac\x71\x7b\x05\x3a\x02\xd1\x6d\\n\x49\x04\x22\x45\x63\x5a\xfc\xf6\x6d\x3d\xde\xa3\x01\x8d\x01\xc5\\n\x43\x59\xe2\x47\x60\x57\x13\x88\x83\x2d\x03\x8a\x23\x20\x6d\x64\\n\x45\x24\x6b\x02\x56\xf5\xa0\x76\x10\xac\x04\x97\x66\x48\xa9\xda\\n\xfc\x96\xb0\xcb\x2c\x22\xe6\x0d\xc2\x3a\x13\xda\xdc\x48\xb1\x84\\n\xc8\x39\x32\x69\x67\x21\xd0\x80\xcd\xa9\xd8\xb8\x78\x8f\x7d\xad\\n\xc7\x7a\x4a\x44\xa8\x0e\x5d\xd0\x6e\x1b\x7e\xf1\x7f\x28\x0c\xe5\\n\x71\x96\xd8\xfe\x4c\x5a\xe5\x49\x41\x3b\x6f\x48\x52\x14\x27\x5f\\n\x31\xdd\x3a\x49\xc6\x30\x59\x47\xe2\x6c\x34\x49\xe3\xa8\x24\xe9\\n\x93\x6e\xc6\xc8\x79\xdf\x14\x03\x22\xa2\xfb\x2c\xd1\x22\x36\x3d\\n\x5b\xd6\x26\x24\x6d\x93\x70\x85\x2d\xfc\x74\x74\x36\x93\x1c\x90\\n\x2e\x2e\xbe\xd6\x90\x63\xdc\xda\x00\x01\xc0\x82\x6f\xe1\xa7\x69\\n\xb8\x4a\x83\xaf\x24\xb3\xc9\x41\xbc\x47\x74\xd5\x81\x10\x40\x74\\n\xd9\x73\x28\xb5\x11\x58\xaf\x53\x8c\xd1\x6d\x8f\x0a\x8a\x7a\x3d\\n\x84\xdd\xac\xcf\x01\x6d\x13\xa9\xe9\x64\x79\x0a\xae\xb5\x41\x40\\n\xdf\x15\x84\x3a\x22\x11\x93\xb6\x01\x36\x9b\x95\x2b\x47\x5b\x9b\\n\xb3\xba\x7c\x6d\xce\x55\x31\x4f\xa0\x0d\x76\x4d\xa0\x76\x18\x4d\\n\xa8\x49\xd7\x95\x61\x33\x4d\xd8\x44\x0b\x8a\xfd\x36\x07\xe8\xee\\n\x82\xaa\xde\x74\x4a\xf0\xd5\xe3\xa5\x0e\x27\x1b\xf2\x51\xc9\x05\\n\x35\x25\xb9\x93\x85\x2c\xc6\xb8\x02\x07\x19\xfc\x99\x0e\xa6\x80\\n\xf3\x2d\x99\x65\x08\x0b\x62\x86\xbd\x36\xf9\x54\x26\x4f\x09\x85\\n\xbd\x49\x0a\xf6\x7a\x9a\x0d\xc0\xe8\xfe\x12\xe0\x47\x06\xc9\x0f\\n\xc1\xdd\x21\xce\x8e\x99\x53\xad\xdc\x8b\xcc\x1d\x41\xd9\x47\xf3\\n\x64\x2a\x11\xdd\x2a\x95\x0c\xb5\x9a\x28\x96\xb2\xa0\xb9\x03\x8b\\n\xc4\xde\x2d\x87\xc1\x96\x8d\x92\x67\x56\x69\x96\xdb\x9f\x68\x40\\n\x44\x98\xc9\x1f\xc8\x9e\x14\x7f\x76\x07\x80\xb0\x1d\x51\xee\xbb\\n\x11\xd8\x97\xe0\xcb\xf5\x67\x41\x56\xec\x15\xf1\x33\x02\x85\xbb\\n\xae\xba\x6f\xb6\xe8\x52\xf7\x72\xe2\x2b\x5d\x98\x32\xf9\x59\xfc\\n\x2e\x1e\x2a\xab\x27\x21\x35\xe1\xb2\xed\x90\x9c\x29\xa0\x6e\x9b\\n\xcf\xcd\x3a\x0a\xcf\x82\x0c\x6c\x15\x0b\x8e\x57\x13\x50\xdb\x2c\\n\x89\xc3\x56\x0c\x7a\x4b\x34\x3c\x1f\xfe\x4e\x6f\x5e\xc6\x29\x3d\\n\x2c\x04\x17\x2e\x5e\xda\x0e\x5e\x8c\x6d\x99\x3f\x67\xfb\xb2\xd9\\n\x40\x29\xec\x08\x0a\xb9\x62\xdf\x4d\x01\x5f\xd8\x4b\xb0\xaf\x4c\\n\xa5\xc9\x68\x6d\xff\xcf\x70\x5b\x73\x54\xea\x29\x54\x43\xf5\x4b\\n\x3a\xfb\xaa\x5c\x3d\xb4\x0b\xe8\x3a\xd4\xd1\x62\xff\x30\xa9\x91\\n\x10\x81\x56\xf5\xba\xc7\x5d\xfb\x9c\xed\x99\x4e\xcf\x5a\x19\xd9\\n\x30\x95\x4e\x6f\xe1\x47\xb3\x10\x9b\xf4\x5a\x20\x1c\xb4\xf7\xcf\\n\xf7\x99\x3a\x43\x20\xd4\x62\xae\x8f\x46\xb1\x4a\x8c\x86\x0d\x66\\n\xaa\x45\x63\x20\x03\x1f\x97\x46\x9b\x09\x82\xfd\xb5\x9d\xbf\x94\\n\xdb\x48\xdd\x0a\xcb\x4e\x5a\xdb\x70\xd2\xc4\x13\xab\x6a\x52\xb0\\n\x46\xbb\xae\xd9\x1a\x8f\xd0\xf3\x2f\xe1\x91\xac\x87\x62\x16\x4d\\n\x8e\x0c\xa6\xad\x2c\x12\xa8\x75\x39\xb4\xcc\x22\x8b\xbf\xab\x7a\\n\x89\x60\xa4\xce\x8c\xbe\x00\x97\xce\x13\x59\x35\x93\x8c\x4f\x54\\n\xd5\xcd\x9d\xd1\xf5\xb4\xfe\x4d\xb3\xb9\x5a\xe6\x9e\x89\x44\xbe\\n\xca\xdf\x2c\x7e\x8c\x8c\x2e\x96\x58\x5c\x6c\x8d\x86\xb2\x2c\x09\\n\xf3\x45\xe0\x89\xf8\xb4\x0e\x65\xc0\xa5\xa1\x30\x13\x19\xf8\x70\\n\x25\x26\x4b\xb6\x95\x5c\x82\x86\x01\x56\x8c\xaf\xbe\x20\x37\x30\\n\xc0\x76\x0b\x5b\x4d\xac\x6e\x5f\xb9\x12\xd4\x31\xb0\x42\x17\x35\\n\x74\xf2\x66\x23\x99\x1f\x47\xd3\xb3\x5a\xbe\xbc\xe1\x81\xdd\x7a\\n\x63\xbb\xf3\xa2\xcc\x11\xf5\x7e\x79\xf6\xf2\xe4\xce\xc6\x7b\x07\\n\xe7\xd0\x62\x57\xcd\x3e\xd4\xd8\xd4\x9b\xc9\x1f\x37\x81\xe5\x33\\n\x68\xb3\xa7\x66\x27\x77\x6b\xba\x9e\xcc\xbf\x6d\x0e\x85\x3d\xe5\\n\xe4\x17\x5a\xd3\x42\x93\x50\x69\x4b\xed\xa0\x85\x25\x75\x01\x7c\\n\x3b\xc6\x4f\x99\x7b\xfc\xe2\x14\xe6\x29\xa9\xd6\x9b\xd0\x0f\x22\\n\x67\x24\x15\x58\x6a\x79\xeb\x04\xfb\x05\xf6\xa1\x99\x04\xb4\x24\\n\x55\x42\x13\x27\x25\xe9\xeb\xf2\x78\x56\x8d\x48\xf6\x4a\x28\x38\\n\x98\x92\x0f\x53\x89\xe0\x4f\xfc\x21\x09\x96\x95\x49\x84\x14\x3a\\n\xde\x43\x47\x8b\xc3\xda\x35\x1c\x56\x9e\xdf\x6d\xdc\x5e\x81\x78\\n\x3f\x05\x11\xe8\x93\x94\x05\xad\x95\xa2\x37\xab\xb4\x74\x16\xc5\\n\x61\xa7\x55\xec\x33\x9f\xd6\x86\xaa\x09\x76\x1b\x55\xe2\x04\xac\\n\x88\xb8\xc3\x23\xf8\x1c\xd4\x24\xae\x22\x5e\x53\x69\x17\xe7\x18\\n\xa6\xb0\x84\x6c\x4b\xa2\x27\x8b\x86\x54\x13\x58\x2b\xbf\xdc\xb8\\n\x3d\x4f\xfc\x07\x5c\x3f\x46\xdd\xdb\xdb\xcb\x45\x4f\xc7\xff\x36\\n\x27\xbf\xef\x16\xfe\x12\xbf\xdf\x6a\x6f\xfd\x5e\x03\x9e\xe2\xe4\\n\x08\xa8\x77\x99\x4f\x92\x5b\x4a\x89\x5e\xd1\x28\x29\x3b\x4f\xea\\n\x0b\xc1\x28\x59\x6a\x30\x15\x34\x20\xd5\xa3\xdd\x23\x5d\xec\xea\\n\x9c\x4a\x8a\x3b\x07\x13\xdc\x7a\x64\xf3\x35\x89\xc3\x99\x82\xcc\\n\x12\xcd\x56\x2e\xbe\x8b\x07\x50\xcd\x0c\xc6\x4f\xfc\x44\xe4\xed\\n\x0c\x80\xdc\xa0\x56\x82\xfb\xa5\x1c\x9c\xbc\x22\xdc\x49\xa4\xa3\\n\x5c\x80\xba\x93\x29\x83\x94\x8f\x64\x6f\x56\xe9\x42\x29\x77\xa8\\n\x5f\x8d\xc9\x54\x8d\x9b\x30\xcd\x0f\x13\x19\xca\xde\xde\xf1\x9e\\n\xea\x44\x9b\x99\x30\x25\xb3\x23\xdc\x60\xed\xfc\xcc\x6c\xd0\x0e\\n\xa8\xb4\xc4\x51\x91\x3b\x2d\xd6\x84\x76\x4e\xab\x8a\x45\xcf\xb8\\n\xbe\x88\x30\x2c\x69\xb8\x17\x16\x86\x43\x1a\x6d\xe7\x8d\x45\x20\\n\x6f\x76\x64\x2d\x78\xb5\xb7\x4f\x3e\x86\x4c\x68\xa2\xb4\xb0\xd2\\n\xd9\x76\x4c\xca\x8c\x27\x2d\xfc\x89\x1f\x26\xb1\x54\xb1\x5a\x5c\\n\xcc\xab\x42\xaa\x70\x58\x5e\x3a\xbd\x6a\x26\x70\xa5\x1c\xd8\xa1\\n\x38\x25\x94\xa4\xc2\x8e\x05\x0a\xc5\x62\x59\x02\x22\x14\xec\x1d\\n\x1c\x1f\x1c\xab\xf2\xe1\xa1\x80\x84\x81\x3d\x11\x99\xce\x65\x10\\n\x49\x1d\x79\x82\x9a\x7f\xe7\xbe\x98\x00\x24\x3b\x68\x3a\x2c\xea\\n\x39\xf1\x81\x09\xc6\xeb\xef\xd5\x99\x77\x8b\xdd\x50\x18\x29\x73\\n\xc5\x0e\xba\x07\x47\x87\xbb\x16\x8d\xdf\xb5\x2b\xf6\xda\x55\x29\\n\xd3\x9b\x3d\x9f\x7c\x54\x32\x50\xd1\xd1\x87\x9b\x62\x39\x6f\xcd\\n\xce\x4a\xad\xc8\xc8\x9b\x25\xf1\xb2\x45\x82\x05\xbe\x2e\xcc\x00\\n\x84\x49\xa2\x3c\x46\x93\x73\x5f\x4a\x0a\x44\x66\x86\xc8\x92\xeb\\n\xb2\x1e\x39\xd3\x36\x46\xeb\xcc\x4f\x80\x7a\xff\xd9\xec\x50\xb4\\n\xce\xc8\xe4\xe5\xb6\x46\x48\x4c\x4f\x79\xe6\xa6\xcb\xd6\x49\x93\\n\x88\x88\x9c\x2a\x8b\x5a\x8a\x63\xfa\x22\x90\x1e\xb9\xb0\x65\x6f\\n\x11\xe5\xaa\xb6\x46\xb7\x9a\x4c\x23\x2c\xd5\x4c\x85\x56\x88\x62\\n\x51\xe0\x23\xf8\x1c\x68\x07\x1b\xf9\x72\x67\x76\x57\x59\x2c\xba\\n\xd5\x52\x0b\x0f\x5d\xac\xe0\x86\xd1\xa0\xe5\xf8\xc8\x66\x25\x75\\n\x8b\x05\x31\xf3\x44\xf6\x3a\x2a\xce\x5a\x0a\xd6\x83\x7c\x65\xc3\\n\xba\x1c\xf2\x63\x26\xbe\x22\x6c\x84\xd0\x99\xfd\x81\xa4\xe4\x09\\n\x5b\x1b\x25\x22\x8f\x60\xda\xf7\x75\x8a\x41\x94\xc5\x96\xf4\x89\\n\xe7\xf3\x4a\x7f\xb0\x2c\xc1\x57\x71\x78\xf2\xad\x84\x74\xc7\x62\\n\x51\x2d\x29\x45\x83\x21\x03\xe6\x7a\xcd\x59\x98\x95\x16\x64\x89\\n\x48\xe4\xd5\x3e\x9f\x7f\x87\x11\xd9\x50\x2c\xba\x4d\xd9\xc8\x6c\\n\x34\x6e\x2f\xfd\x09\x0e\xb5\x5d\xb8\x2d\x96\xb1\x1c\x83\xf1\xd3\\n\x6f\xf7\xa8\x4d\x9c\x97\x7b\x4b\x3f\xc2\xc5\x37\xe8\xc4\xce\xa6\\n\x2d\x7b\x7d\x97\x96\x0c\x39\xc0\x5e\xd7\x10\xfe\xb1\x84\xed\x0d\\n\xa2\x95\xe7\xd6\x2c\xf1\x1f\x4f\xfc\x34\xbf\x44\x45\x9a\xd6\xde\\n\x3b\xa9\x1d\x23\xf1\x14\xbf\x6b\x9a\xdf\x21\x9d\x3c\xd3\xb2\x34\\n\x56\x31\x96\x43\xb5\x1e\xd5\xb7\x4b\xf9\xcc\x6f\xeb\x85\x71\x8a\\n\xd9\x7a\x47\xd5\xe5\x3d\xa4\xb7\xa4\x02\xa5\x25\x8c\x36\x14\xae\\n\x77\x4c\xe8\x10\xda\xf7\xbb\xb0\xb1\x5d\xc5\x8d\xaf\x16\xeb\xed\\n\x88\x11\xa6\x66\x3c\xbc\x41\xe3\xde\xc9\x1d\x2d\x3e\xe2\x04\x64\\n\xfe\xc4\x23\x5e\x87\x12\x3d\xbe\x9a\x74\xc8\xa7\xd8\x4f\x32\x3d\\n\x61\xbe\x61\x15\x28\x6b\xc1\x1e\x25\x87\x5e\x72\x35\xa3\xe1\x91\\n\x50\x9f\xa5\xc0\x85\xb3\xb8\x2c\x5d\x55\x89\x05\x9b\xde\x4f\xf6\\n\x32\x45\x95\x61\x17\x7f\xd2\x96\x82\x71\x97\x8a\xad\xaf\xc1\xa6\\n\xee\xd8\x99\x6c\xb6\x2b\xd9\xcc\x35\xb8\x38\xd4\xdb\x3b\xda\x3f\\n\x3c\x98\x70\x0d\x39\x19\x8e\xc7\xc3\x2b\xbb\x92\xe4\xac\x7c\xb7\\n\x9e\xe4\x45\x1f\x2f\xaf\x24\xcc\x29\x2d\xd5\x13\xab\xe3\x6a\x55\\n\x15\x36\x6f\x3f\x58\x5b\xac\xb2\x29\x56\xab\x72\x6d\xb1\x32\x6b\\n\x55\x18\x9d\xd9\x2a\x9d\x91\x0a\xb6\x40\x67\x2e\xfb\xe7\x63\xbb\\n\xc6\x10\xf2\xbe\x5b\x5f\x58\x3a\xe4\xaf\xb1\x2a\x16\x4d\xd8\x48\\n\x5d\x28\x91\x3f\x58\x59\x12\x91\x04\x77\xb2\x2c\x16\x3d\xd8\x48\\n\x59\x54\x56\x6b\x98\x17\xa2\x2b\xf9\x4b\x0e\xac\xca\x92\xfb\x0a\\n\xdf\xab\x2d\x05\x42\xf9\x11\x9b\x50\xa1\x01\xd2\x25\x98\xd3\xf8\\n\xff\xad\x2d\x2e\x96\xc5\xec\x53\xc1\x69\x0d\x65\x61\x60\x50\x9e\\n\x34\x67\xd7\x66\xa4\xaa\x5c\x0f\x47\xd4\xbf\x67\xc0\x6a\x54\xe3\\n\x02\x27\x00\x1f\x59\x11\x50\x8e\x6a\xc2\x37\xcb\x81\x5c\xc8\xe7\\n\xf1\x49\x2d\xfa\x8d\xa8\xc6\x85\x11\x77\x4c\x25\xf5\x6a\x34\x8c\\n\x39\x8b\xa7\x5f\xf2\x60\xa3\x24\xcc\x68\xef\x9e\xef\x32\xf5\xa4\\n\x75\xa6\x13\x3f\x69\xe5\xee\x2a\xc1\xe3\xe4\xa5\x8b\x71\x51\x9c\\n\x3c\xf8\x61\xf1\x40\xd0\x1d\x20\x49\x4a\xd0\xac\x29\x54\x1d\xeb\\n\x26\x52\x9a\xe6\x61\xec\x67\x3c\x88\x28\x62\xa5\xe0\xa2\x92\x65\\n\xf9\x97\xb9\xf9\x45\x14\x89\x32\x8a\x22\xba\x0a\xd6\x8a\xc7\xde\\n\x21\xb2\xbf\x4f\x5f\x0e\xc2\x7e\x75\xda\x15\x02\x10\x57\xd5\x4b\\n\x10\xaa\xc1\x87\x5c\xdc\x8d\x5a\xe2\x97\xf5\xdd\x2a\xa5\x24\xf1\\n\x5c\x34\xa0\xbe\x0c\xd2\x4c\x4e\xdb\x96\x45\xa9\xc5\x96\x4f\x06\\n\xea\x4d\x40\xe0\xd3\x85\xa8\xff\x07\x24\x7a\x93\xfd\xb5\x1e\x56\\n\x7d\x92\x66\x4f\x52\x2a\x01\x50\x40\xf4\xd3\x56\x1a\x4c\x42\x10\\n\x4f\xea\xfd\xe4\xcf\xfe\x13\x07\x51\xda\x22\x77\xa0\x14\x65\x2a\\n\x29\x7a\xd9\x04\xd1\x5f\x88\xe7\x27\x82\x68\xba\x08\xc2\x19\xf4\\n\xcc\xbf\xfd\x08\xb4\x25\x58\xa9\xee\x92\x8b\xba\xc6\xa0\xbc\x45\\n\x1d\x2b\x0f\xad\x8c\x9d\x73\x38\x9f\x73\x38\x65\xe4\xc5\x4b\x06\\n\xda\x4e\xa3\x8d\x38\x73\x88\x42\x9a\x2b\x6d\x04\xcc\x77\x09\x4e\\n\x64\xc0\x6b\x8b\x4f\x31\x3b\x8e\x42\x6c\xc5\x91\x64\xbd\x37\x91\\n\x65\x31\xbd\xe5\x12\x65\xd4\xd6\x91\xab\x49\x2c\xb7\x4a\xec\x1a\\n\xa3\xe6\xad\x48\x66\xab\xb0\xc3\x9a\x6a\x5b\x07\x54\x64\xc4\xdb\\n\x4d\xc4\xfe\x63\xd4\xc8\x6f\x27\x92\x5d\xc2\x73\xfa\xd3\xb0\x10\\n\x5b\x45\x6b\x15\xa9\xd5\x94\xda\xce\x82\x19\x41\xac\xdc\x24\xbf\\n\x7a\xe3\xc1\x00\x80\x51\xfb\x6d\x5e\x3c\x09\x7b\x64\xdb\x58\x14\\n\x6f\x57\xba\x30\xcb\x05\x64\xdb\x92\x65\x9a\x8a\xaa\x4b\x64\x1c\\n\xf4\xd4\xd5\x4f\x3e\xf0\xd7\x7a\x91\xf7\x78\x91\x49\x79\xce\xff\\n\x3c\x75\xf3\x6f\xf0\xa7\xd3\xcc\x3d\xa8\xfc\x75\x5d\xa8\xfd\xb6\\n\xcd\xce\x53\x9a\xe2\x49\x17\xbd\xf2\x8f\xc8\x87\x3f\xea\x40\xb4\\n\xdc\x25\x9f\xed\x77\x2e\xd2\xe0\x39\xea\x3d\x23\x47\xad\xd5\x28\\n\x79\xa8\xb5\xe7\x2e\x07\x36\x37\x5a\xb5\x89\x1b\x2d\xee\x13\xd3\\n\x36\x02\x85\xaa\x89\xd1\x09\xda\x70\x5a\xcc\x09\xd1\x26\xea\x07\\n\x4e\x4b\x9b\x4e\x4c\xb9\x14\xd6\x9e\x7a\x61\x2c\x54\x7a\x4d\xbe\\n\x32\xd6\xb3\xdf\x08\x2b\x4f\xf6\x0b\x9a\x7e\x5b\xc6\xcb\xd5\xf2\\n\x2a\x9e\xe1\xf7\x5b\x9d\xad\xdf\xd1\x7f\x49\x56\x3f\x8e\xc2\x67\\n\x7a\x11\x9c\xde\xe9\xa3\xfd\x6e\x48\x37\x12\xc6\xeb\x15\x2a\xf4\\n\xce\x19\x3d\x0a\xf0\xbf\x60\xf4\xe8\xe7\x03\xc9\x79\x00\x85\xcc\\n\xaf\xcc\x92\x91\xd5\x5c\x69\x2c\xed\x97\xd3\xdb\x35\xe8\x1d\x44\\n\xf4\xbd\x93\x85\xc4\x76\x5e\x90\x58\x1a\x25\x49\x61\x98\x30\xba\\n\x52\x64\x46\xdf\xde\x51\xea\xe2\x3b\xa9\x80\xed\xea\xe4\x1a\x0b\\n\x7f\xd1\x89\x82\x5a\xbc\xad\x0a\xb1\x9f\x42\xba\xd4\x48\xc0\xa9\\n\x10\xa6\x88\x2a\x10\x2c\x91\xe5\xfa\x44\x15\x4d\x70\x18\x3f\x92\\n\x97\xc4\xae\x08\x0a\x3a\x4f\xec\xdd\xac\xca\x54\xc1\x24\x9c\xe1\\n\xd0\x7f\xc6\xb3\xfc\xfb\x03\xcc\x6f\x9e\x33\xd2\x89\xd6\x2f\xf8\\n\xd7\xac\x35\xa7\xf6\xa0\x75\x48\xb4\x20\x4f\x35\xb6\xba\x4c\x23\\n\xd2\x45\x30\xcf\x50\x90\x21\x1f\x4d\xe0\x77\x7e\x7e\x65\x30\x94\\n\x32\x8e\xc8\x4b\x58\x0d\x96\xf4\xd5\x52\xcc\x45\x61\x34\x5a\x3f\\n\xb7\x77\xe0\x92\xdb\x13\x9d\x80\xa1\x0e\x7c\xc9\x6d\x1c\xfa\x07\\n\xa9\xcf\xa1\x4b\x80\xbd\xe7\xe1\x3d\x5d\xce\xe4\x6d\xae\xf1\x94\\n\xbe\x79\x37\x7f\x43\x2c\x2b\x33\xe3\x86\x51\x40\xb3\x94\xe2\x19\\n\xac\xca\xd7\xaa\x6b\x56\x60\xd8\x61\x51\x2f\x91\x01\xe4\x29\x74\\n\x3e\x9b\x9d\xc2\xc9\xac\xb0\xfb\x5a\xc1\x87\xae\x6b\xc5\xf7\x67\\n\xab\x8b\x7c\xd8\x49\x8a\x54\xe7\x93\xd3\x7a\x24\xe5\xd0\x42\xec\\n\x18\x29\xdf\x27\xc1\x8c\x88\x7c\x5d\x90\xc5\x4a\xda\x0b\xd6\xae\\n\x14\x46\x4b\x88\xc0\x54\xac\x0b\xf0\xed\x25\xc8\x6d\x83\x3a\xf5\\n\xa5\x2c\xa6\xf7\xb9\x6e\xd0\xdc\x4e\x6e\x60\x6c\xfe\xa6\xa5\x26\\n\x4d\xf1\x37\x75\xec\xc2\x85\xf5\xa7\x59\xf0\x15\x97\xf8\xb8\xa2\\n\x43\x91\x93\x9c\x77\xd8\xc4\x0b\x6e\x14\x49\xcf\x58\xc3\x6e\x1b\\n\xb5\x5e\xfc\x29\x49\xdf\x72\x4f\xc2\xa4\xb8\xe6\x45\x09\xb7\x3b\\n\x12\x45\x3a\x41\x97\x9d\xe5\xa5\xbc\x05\xd4\x7a\xeb\x6b\x42\xde\\n\x3c\x48\xd2\x4c\xd1\x3d\x6b\x37\x62\x52\x21\x70\xd3\x6a\xed\xc5\\n\x69\x99\xe5\x2e\x47\x29\x40\x0b\x18\x23\x71\x67\x05\x20\xdd\x17\\n\x2d\x27\x5d\xee\x68\x27\x7e\x7d\xac\xe5\x4a\xbd\x79\xdb\x52\x86\\n\xa4\x33\x60\x07\xc2\x1c\x83\x86\x7a\xce\x22\x5d\x8c\xb0\xa8\xd0\\n\x7e\x6f\xff\x78\xff\x98\x65\x9b\x89\x25\xa5\xaf\x3a\xa1\x9b\x60\\n\x9c\x64\xd2\x3b\x4f\xc8\xbe\x26\x23\x5d\x57\xcf\x6c\x66\xec\x65\\n\x58\xbc\x40\xc9\xb9\x30\x4a\xae\xbf\xa1\x26\xe3\x34\x4e\x22\x9c\\n\x70\x6b\xce\x57\x8e\xd3\xc2\xd9\xa0\x00\x59\x6c\x56\xf1\x13\xd2\\n\x33\xaa\x95\x17\x56\xf5\x5b\x19\xf4\xa5\x0d\xfe\xa4\xec\x70\xcc\\n\xa5\xa8\x7d\xd3\x0a\x0e\x5b\x7d\xbc\x71\x46\x54\x7d\xba\xca\x5d\\n\x77\xa4\x30\x25\xbd\xba\x85\x28\x57\x00\xea\x1d\x4c\x83\x3f\x31\\n\x12\xcf\xa1\x53\xca\xf7\x6b\x72\x9d\xc4\x63\x9d\x6a\x70\x6e\x96\\n\xa3\xb3\x8b\x32\xd9\x2a\x15\x2f\x17\x73\x8b\x8a\xad\x96\x7b\x7d\\n\x1b\xe8\xb7\x3c\x32\x7c\xbf\xb5\xbb\xf5\x3b\x18\x87\xfc\x19\xf5\\n\x92\xe8\xa3\x12\x97\x9a\x5d\xdf\x01\xb2\x96\x61\x90\x65\xeb\x28\\n\xd9\x42\x97\xed\x1e\x97\x3e\xac\xfa\x10\x7f\x7d\x83\xab\xc2\x0d\\n\xb2\x80\xd6\x12\x2a\xf2\x75\x09\xeb\x08\x2d\xd2\x57\x6e\x70\x7d\\n\x6b\xfc\x0f\x54\x03\xf6\x77\\n\x00\x00\x01\xce\\n\x00\\n\x00\x14\x25\x78\x9c\xed\x98\xc1\x6e\x83\x30\x0c\x86\xef\x7b\x8a\\n\xaa\x77\xca\x0b\xb0\x5e\x7a\xe9\x71\xda\x61\x57\x14\x12\x53\xa2\\n\xd2\x04\x9c\xd0\x76\x7b\xfa\x01\xd3\xda\x32\x9a\xc6\x91\x3a\xa9\\n\xda\xb8\x81\xf2\x39\x98\xe4\xb7\x1d\x27\x79\x5d\xad\x96\x4f\xb3\\n\x59\x52\x23\x18\xdd\x20\x87\x59\x85\x90\xcb\xe3\xf3\xbc\x36\x26\\n\x95\x5c\x2b\x33\xef\x80\x16\xc9\x65\x09\x4b\x63\xdf\x4b\x58\xd4\\n\xc8\x93\xb8\x7f\x1f\x0f\x19\x33\x1e\x42\x1e\x37\x55\xca\x10\xf5\\n\x21\x15\xd2\xb0\xac\x04\xb1\xa8\xd4\xe6\x2a\x99\x21\x53\xbc\x48\\n\x79\xa9\x0d\x88\x48\x2b\x1a\xe8\xa3\x74\x05\x8a\x30\x59\x87\x39\\n\x19\x5e\x00\xdf\x66\xfa\x98\xf6\x0f\x20\xfc\xff\x32\xb2\xc8\x35\\n\x6f\x0c\x19\xf7\x83\x52\x09\xb0\x80\x3b\xa9\x98\x85\x00\x7f\x86\\n\x76\x44\xaf\x06\x46\x7e\xbc\x51\xe1\xeb\x74\xb6\x21\xfa\x74\x32\\n\x70\xa3\x9d\x3e\xa2\x42\xef\x01\x3d\x4c\x2b\x7d\x73\x4b\x4a\x3d\\n\xe5\x1c\x15\xfa\xa0\xa8\x1a\x3f\xb3\x4e\x64\xbd\x6b\x3d\xb6\x5a\\n\x97\x19\x73\xfb\xbd\x36\x50\x31\xf4\x51\x25\xe4\x96\xea\xd9\x99\\n\x75\x22\xc8\x84\xd4\xf4\x18\x18\xe2\xb7\xb7\x75\xc0\x7a\xa8\x00\\n\x79\xfd\x34\xa0\x38\xe1\x17\x16\xca\x4d\x41\x5e\xd7\x0b\xd8\xc9\\n\x18\xf9\x01\x1b\x94\x95\x1b\xe8\x52\xac\x29\x00\x6c\xf4\x95\xaf\\n\x22\x50\xee\x4f\x8e\xe9\x9d\x46\xb7\x7e\x2f\xf0\x7d\x29\x95\x1b\\n\xb4\xed\x64\xa6\x95\x1d\x28\xeb\x64\x1a\x25\x34\xdf\xba\x87\xc9\\n\xd5\xe0\x9b\x74\x02\x6f\x94\x38\x79\x23\xc5\x09\x29\xe4\xc2\xf6\\n\x80\x5c\xcc\xc8\xab\x7f\xd7\xaa\x47\xd9\xca\x20\x99\x7b\x25\x7c\\n\x3b\x87\xde\x2f\x57\x13\x32\x2c\x49\x39\x84\x7c\x18\x18\x67\x5e\\n\x45\x53\x52\x45\x48\x4a\xa7\x15\x09\xca\x01\x88\x16\x46\x21\x85\\n\xd0\x93\x27\x1e\xfd\xc4\xf5\x4b\x07\xad\x07\x39\x39\xfd\xeb\x42\\n\x9f\xc4\xa7\x9e\xc8\xd1\x21\x29\x38\xbc\xf4\x8f\xf3\xeb\xa1\x34\\n\x75\x30\x53\x07\x33\x75\x30\x53\x07\xf3\x60\x89\x6d\xea\x60\xfe\\n\x58\x07\xe3\xaf\x54\xb5\x60\xb8\xed\x57\xe7\xda\x65\xde\xe5\x8d\\n\xdd\x60\xae\x24\xee\xaf\x07\x3f\x01\x67\x3b\xd6\xf1\\n\x00\x00\x02\x56\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x15\x00\xdc\xbe\xff\xeb\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xba\x49\x44\x41\x54\x78\xda\xed\x9b\x5b\\n\x92\x02\x21\x0c\x45\x4d\xd6\x37\x2e\x48\x17\xa0\x0b\xd2\xfd\xe9\\n\x9f\x65\x39\xda\x3c\x92\x7b\x13\x68\xf2\x3d\x95\xe6\x1c\x1e\x43\\n\x10\x0e\x87\x15\x2b\x56\xec\x39\x84\xf9\xb1\xdb\xe9\xf4\xa8\xf9\\n\xbb\xe3\xf5\x2a\x53\x08\xa8\x05\x8e\x14\x22\x59\xa1\x59\x32\x64\\n\x14\x70\x94\x08\x19\x11\xde\x53\x82\x8c\x08\xee\x29\x42\x46\x87\\n\xb7\x4a\x90\xd1\xc1\xad\x22\x64\x26\xf8\x1e\x09\x32\x1b\x7c\xab\\n\x04\x5d\x5b\xe1\x09\x7b\xbf\x65\x14\x88\x15\xfe\xef\x72\x79\xe5\\n\xb8\x9f\xcf\x14\x51\xef\xdf\x2c\x7d\xb7\x24\x41\xbd\x1b\xf6\xd9\\n\x38\x34\xbc\x35\x14\x31\xf4\x51\x12\x7a\xf2\x96\x18\x14\x35\xef\\n\xbd\x25\x58\xf2\x6d\xb1\x98\xa7\xc0\xd6\xfc\xf3\x92\xb0\x95\xc7\\n\xba\xee\x88\x57\xef\xa3\x1a\xe9\x99\xf7\xdb\x82\xe8\xb6\x08\x22\\n\x46\x02\xb2\xe7\x21\xff\x05\x3c\x25\x30\xe0\xbf\x4e\x01\x8f\x4d\\n\x8f\xb5\xf1\x48\xf8\xcf\x69\x00\xd9\x0a\x5b\x46\x02\xab\xe7\xe1\\n\xb5\x40\x8f\x04\x36\x3c\xbc\x18\x6a\x91\x10\x01\xff\x6f\x0d\x40\\n\x15\x3d\x25\x38\x36\xfc\xfb\x3a\x40\x29\x87\x7b\xd7\x04\x46\x71\\n\x45\x3b\x0f\x68\x85\x61\x55\x96\xd4\x03\x91\x5a\x28\x16\x3c\x5d\\n\x40\x0d\x1c\x13\x3e\x44\x80\x65\x1f\x30\xbc\x80\x5a\x38\xa6\x04\\n\xcd\x06\xcf\x96\xa0\xd1\xf0\x8c\xf3\x84\x50\x01\x35\xf0\x91\x12\\n\x20\xd5\x60\x6f\xcf\x33\x36\x45\x94\x6a\xb0\x17\x26\x62\x24\x68\\n\xa6\x39\x1f\x21\x41\x33\xc1\x47\x48\x70\x3b\x14\x45\xcc\x61\xef\\n\x7c\xd0\x43\x51\xc4\x02\xc6\x18\x09\x9a\x15\x9e\x25\xe1\x67\x82\\n\xda\x69\xc0\xaa\xe7\xad\xdf\xf9\xf5\x23\x69\xc8\x99\x60\x86\x7c\\n\x45\x01\x96\x9b\x57\xa8\xc6\xf6\xe6\xdd\x62\xd1\xec\x3d\x8f\xce\\n\x6f\xbe\x20\x91\x3d\x4a\x23\x79\x5d\x91\xa9\x4d\xb6\x6e\x89\x4d\\n\x1a\xeb\xa2\x64\x6b\xf2\x5d\x5f\x95\xcd\x2c\x82\x76\x59\x3a\xa3\\n\x84\x90\xeb\xf2\x59\x24\x58\x1f\x4d\xac\x27\x33\xde\x0d\xdb\xed\\n\xa3\x29\xa4\x8c\xa1\x9e\xcd\x79\x08\x61\x3e\x9c\x5c\xb1\xf7\x78\\n\x02\x47\xb0\x5b\x07\x3a\x44\x3e\x01\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x02\x56\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x15\x00\xdc\xbe\xff\xeb\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xba\x49\x44\x41\x54\x78\xda\xed\x9b\x5b\\n\x92\x02\x21\x0c\x45\x4d\xd6\x37\x2e\x48\x17\xa0\x0b\xd2\xfd\xe9\\n\x9f\x65\x39\xda\x3c\x92\x7b\x13\x68\xf2\x3d\x95\xe6\x1c\x1e\x43\\n\x10\x0e\x87\x15\x2b\x56\xec\x39\x84\xf9\xb1\xdb\xe9\xf4\xa8\xf9\\n\xbb\xe3\xf5\x2a\x53\x08\xa8\x05\x8e\x14\x22\x59\xa1\x59\x32\x64\\n\x14\x70\x94\x08\x19\x11\xde\x53\x82\x8c\x08\xee\x29\x42\x46\x87\\n\xb7\x4a\x90\xd1\xc1\xad\x22\x64\x26\xf8\x1e\x09\x32\x1b\x7c\xab\\n\x04\x5d\x5b\xe1\x09\x7b\xbf\x65\x14\x88\x15\xfe\xef\x72\x79\xe5\\n\xb8\x9f\xcf\x14\x51\xef\xdf\x2c\x7d\xb7\x24\x41\xbd\x1b\xf6\xd9\\n\x38\x34\xbc\x35\x14\x31\xf4\x51\x12\x7a\xf2\x96\x18\x14\x35\xef\\n\xbd\x25\x58\xf2\x6d\xb1\x98\xa7\xc0\xd6\xfc\xf3\x92\xb0\x95\xc7\\n\xba\xee\x88\x57\xef\xa3\x1a\xe9\x99\xf7\xdb\x82\xe8\xb6\x08\x22\\n\x46\x02\xb2\xe7\x21\xff\x05\x3c\x25\x30\xe0\xbf\x4e\x01\x8f\x4d\\n\x8f\xb5\xf1\x48\xf8\xcf\x69\x00\xd9\x0a\x5b\x46\x02\xab\xe7\xe1\\n\xb5\x40\x8f\x04\x36\x3c\xbc\x18\x6a\x91\x10\x01\xff\x6f\x0d\x40\\n\x15\x3d\x25\x38\x36\xfc\xfb\x3a\x40\x29\x87\x7b\xd7\x04\x46\x71\\n\x45\x3b\x0f\x68\x85\x61\x55\x96\xd4\x03\x91\x5a\x28\x16\x3c\x5d\\n\x40\x0d\x1c\x13\x3e\x44\x80\x65\x1f\x30\xbc\x80\x5a\x38\xa6\x04\\n\xcd\x06\xcf\x96\xa0\xd1\xf0\x8c\xf3\x84\x50\x01\x35\xf0\x91\x12\\n\x20\xd5\x60\x6f\xcf\x33\x36\x45\x94\x6a\xb0\x17\x26\x62\x24\x68\\n\xa6\x39\x1f\x21\x41\x33\xc1\x47\x48\x70\x3b\x14\x45\xcc\x61\xef\\n\x7c\xd0\x43\x51\xc4\x02\xc6\x18\x09\x9a\x15\x9e\x25\xe1\x67\x82\\n\xda\x69\xc0\xaa\xe7\xad\xdf\xf9\xf5\x23\x69\xc8\x99\x60\x86\x7c\\n\x45\x01\x96\x9b\x57\xa8\xc6\xf6\xe6\xdd\x62\xd1\xec\x3d\x8f\xce\\n\x6f\xbe\x20\x91\x3d\x4a\x23\x79\x5d\x91\xa9\x4d\xb6\x6e\x89\x4d\\n\x1a\xeb\xa2\x64\x6b\xf2\x5d\x5f\x95\xcd\x2c\x82\x76\x59\x3a\xa3\\n\x84\x90\xeb\xf2\x59\x24\x58\x1f\x4d\xac\x27\x33\xde\x0d\xdb\xed\\n\xa3\x29\xa4\x8c\xa1\x9e\xcd\x79\x08\x61\x3e\x9c\x5c\xb1\xf7\x78\\n\x02\x47\xb0\x5b\x07\x3a\x44\x3e\x01\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\x81\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x10\x00\x00\x00\x10\x01\x03\x00\x00\x00\x25\x3d\x6d\x22\\n\x00\x00\x00\x06\x50\x4c\x54\x45\x00\x00\x00\xae\xae\xae\x77\x6b\\n\xd6\x2d\x00\x00\x00\x01\x74\x52\x4e\x53\x00\x40\xe6\xd8\x66\x00\\n\x00\x00\x29\x49\x44\x41\x54\x78\x5e\x05\xc0\xb1\x0d\x00\x20\x08\\n\x04\xc0\xc3\x58\xd8\xfe\x0a\xcc\xc2\x70\x8c\x6d\x28\x0e\x97\x47\\n\x68\x86\x55\x71\xda\x1d\x6f\x25\xba\xcd\xd8\xfd\x35\x0a\x04\x1b\\n\xd6\xd9\x1a\x92\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\\n\x00\x00\x00\x81\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x10\x00\x00\x00\x10\x01\x03\x00\x00\x00\x25\x3d\x6d\x22\\n\x00\x00\x00\x06\x50\x4c\x54\x45\x00\x00\x00\xae\xae\xae\x77\x6b\\n\xd6\x2d\x00\x00\x00\x01\x74\x52\x4e\x53\x00\x40\xe6\xd8\x66\x00\\n\x00\x00\x29\x49\x44\x41\x54\x78\x5e\x05\xc0\xb1\x0d\x00\x20\x08\\n\x04\xc0\xc3\x58\xd8\xfe\x0a\xcc\xc2\x70\x8c\x6d\x28\x0e\x97\x47\\n\x68\x86\x55\x71\xda\x1d\x6f\x25\xba\xcd\xd8\xfd\x35\x0a\x04\x1b\\n\xd6\xd9\x1a\x92\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\\n\x00\x00\x01\xd0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x4d\x49\x44\\n\x41\x54\x58\x85\xed\xd7\x4d\x4e\xc2\x40\x18\xc6\xf1\xff\x5b\x08\\n\x08\xea\x01\xd0\x2b\x88\x09\x5b\xcf\x21\xbb\xca\xd8\x1a\x49\xe0\\n\x3e\x62\x42\x42\x69\x49\x97\x78\x0c\xd7\x84\x70\x07\x71\xef\x07\\n\x02\x81\xd7\x85\xd4\x10\xc0\xdd\x10\x13\xed\xb3\x9b\xc9\x9b\x79\\n\x7e\x93\x6e\x3a\xf0\xdf\x23\x9b\x6b\xcf\x98\x6b\xa0\x01\x94\x81\\n\x03\x4b\x3d\x1f\xc0\x48\x44\x5a\x41\x18\x46\x80\xee\x02\x88\x67\\n\x4c\x08\xd4\x80\x29\x30\x00\x5e\x2d\x01\x8e\x80\x0a\x90\x07\xba\\n\xdd\x28\xba\x49\x10\xdf\x00\xcf\x18\x0f\x08\x04\x1e\xb3\x8b\x45\\n\xb5\x1d\xc7\x63\x4b\xe5\x00\xd4\x5d\xb7\x34\x77\x9c\x3e\x22\x17\\n\x02\x26\x88\xa2\x1e\x80\xb3\x36\xd3\x00\xa6\x4b\x91\x4b\xdb\xe5\\n\x00\xed\x38\x1e\x4b\x36\x5b\x05\x66\x2a\xd2\x4c\xf6\xd7\x01\x67\\n\xc0\x20\x0c\xc3\x67\xdb\xe5\x49\x82\x20\x78\x42\x64\x80\x6a\x79\\n\x17\xa0\x80\xea\xfb\xbe\xca\xbf\xb3\x5c\xbe\x01\xc5\x5d\x80\x5f\\n\x49\x0a\x48\x01\x29\x20\x05\xa4\x80\x14\x90\x02\x52\xc0\x3a\x60\\n\x82\x48\xf1\xc7\x49\x6b\x8d\xce\x21\x30\xd9\x02\x28\x8c\x80\x4a\\n\xdd\x75\x4b\xfb\xea\xae\xd5\x6a\xa7\xa8\x56\x80\xe1\x16\xc0\x11\\n\xb9\x07\xf2\xf3\x4c\xe6\xc1\xf7\xfd\x93\x7d\x94\x67\x44\xfa\x40\\n\x4e\x45\x5a\xc9\xfe\xe6\xc3\xa4\x03\x78\xc0\x6c\xf5\xf7\xfa\x62\\n\xa5\x5d\xe4\x78\x75\xf3\x9c\x42\x27\x8c\xa2\x5b\x36\x1f\x26\xc9\\n\xa8\x6f\xcc\x95\x8a\x34\x51\x3d\x07\x0a\x56\x00\x5f\xdf\x7c\x88\\n\xea\x5d\xb7\xd7\x8b\x2d\x9d\xf9\x47\xf2\x09\x3e\x70\x64\x41\x95\\n\x87\xdf\x69\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xd0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x4d\x49\x44\\n\x41\x54\x58\x85\xed\xd7\x4d\x4e\xc2\x40\x18\xc6\xf1\xff\x5b\x08\\n\x08\xea\x01\xd0\x2b\x88\x09\x5b\xcf\x21\xbb\xca\xd8\x1a\x49\xe0\\n\x3e\x62\x42\x42\x69\x49\x97\x78\x0c\xd7\x84\x70\x07\x71\xef\x07\\n\x02\x81\xd7\x85\xd4\x10\xc0\xdd\x10\x13\xed\xb3\x9b\xc9\x9b\x79\\n\x7e\x93\x6e\x3a\xf0\xdf\x23\x9b\x6b\xcf\x98\x6b\xa0\x01\x94\x81\\n\x03\x4b\x3d\x1f\xc0\x48\x44\x5a\x41\x18\x46\x80\xee\x02\x88\x67\\n\x4c\x08\xd4\x80\x29\x30\x00\x5e\x2d\x01\x8e\x80\x0a\x90\x07\xba\\n\xdd\x28\xba\x49\x10\xdf\x00\xcf\x18\x0f\x08\x04\x1e\xb3\x8b\x45\\n\xb5\x1d\xc7\x63\x4b\xe5\x00\xd4\x5d\xb7\x34\x77\x9c\x3e\x22\x17\\n\x02\x26\x88\xa2\x1e\x80\xb3\x36\xd3\x00\xa6\x4b\x91\x4b\xdb\xe5\\n\x00\xed\x38\x1e\x4b\x36\x5b\x05\x66\x2a\xd2\x4c\xf6\xd7\x01\x67\\n\xc0\x20\x0c\xc3\x67\xdb\xe5\x49\x82\x20\x78\x42\x64\x80\x6a\x79\\n\x17\xa0\x80\xea\xfb\xbe\xca\xbf\xb3\x5c\xbe\x01\xc5\x5d\x80\x5f\\n\x49\x0a\x48\x01\x29\x20\x05\xa4\x80\x14\x90\x02\x52\xc0\x3a\x60\\n\x82\x48\xf1\xc7\x49\x6b\x8d\xce\x21\x30\xd9\x02\x28\x8c\x80\x4a\\n\xdd\x75\x4b\xfb\xea\xae\xd5\x6a\xa7\xa8\x56\x80\xe1\x16\xc0\x11\\n\xb9\x07\xf2\xf3\x4c\xe6\xc1\xf7\xfd\x93\x7d\x94\x67\x44\xfa\x40\\n\x4e\x45\x5a\xc9\xfe\xe6\xc3\xa4\x03\x78\xc0\x6c\xf5\xf7\xfa\x62\\n\xa5\x5d\xe4\x78\x75\xf3\x9c\x42\x27\x8c\xa2\x5b\x36\x1f\x26\xc9\\n\xa8\x6f\xcc\x95\x8a\x34\x51\x3d\x07\x0a\x56\x00\x5f\xdf\x7c\x88\\n\xea\x5d\xb7\xd7\x8b\x2d\x9d\xf9\x47\xf2\x09\x3e\x70\x64\x41\x95\\n\x87\xdf\x69\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xbb\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x3f\x00\x00\x00\x07\x08\x06\x00\x00\x00\xbf\x76\x95\x1f\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x09\x35\x2b\x55\xca\x52\x6a\x00\x00\x00\x3b\x49\x44\x41\x54\x38\\n\xcb\x63\x60\x18\x05\x23\x13\x30\x12\xa3\xa8\xbe\x7d\x2a\x25\x76\\n\xfc\xa7\x97\x3b\xd1\xc1\xaa\xa5\x73\x18\xae\x5f\x39\x8f\x53\x9e\\n\x69\x34\xe6\x09\x00\x4d\x1d\xc3\x21\x19\xf3\x0c\x0c\x0c\x78\x63\\n\x7e\x14\x8c\x54\x00\x00\x69\x64\x0b\x05\xfd\x6b\x58\xca\x00\x00\\n\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xbb\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x3f\x00\x00\x00\x07\x08\x06\x00\x00\x00\xbf\x76\x95\x1f\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x09\x35\x2b\x55\xca\x52\x6a\x00\x00\x00\x3b\x49\x44\x41\x54\x38\\n\xcb\x63\x60\x18\x05\x23\x13\x30\x12\xa3\xa8\xbe\x7d\x2a\x25\x76\\n\xfc\xa7\x97\x3b\xd1\xc1\xaa\xa5\x73\x18\xae\x5f\x39\x8f\x53\x9e\\n\x69\x34\xe6\x09\x00\x4d\x1d\xc3\x21\x19\xf3\x0c\x0c\x0c\x78\x63\\n\x7e\x14\x8c\x54\x00\x00\x69\x64\x0b\x05\xfd\x6b\x58\xca\x00\x00\\n\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x02\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x7f\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcb\x4a\x42\x51\x14\x86\xbf\x65\xa5\xd9\\n\xe5\x01\xac\x57\xc8\x40\x28\xa3\xd2\x9e\x22\x87\xdd\x88\x06\x36\\n\x33\xa1\x9e\xa1\x89\x36\xa9\x46\x5d\x69\x58\xef\x10\x1c\x8d\xb4\\n\x40\xa2\x77\xc8\xe6\x5d\xac\x2c\x57\x83\x3a\xa2\x1c\xcf\x24\xb6\\n\x18\x75\xfe\xd9\x5e\x1b\xf6\xf7\xb1\x60\x6f\xf6\x82\xff\x1e\x69\\n\x5a\xa9\x4a\x2c\x5b\x58\x14\x95\x24\x42\x18\xe8\x35\xc4\x79\x41\\n\xb9\x05\xd9\xb1\xd6\xc6\x8f\x10\x51\xa7\x80\xaa\xcc\x6c\x15\x0f\\n\x55\x99\x07\x5e\x05\x4a\x8a\x3e\x9a\xa0\x0b\x32\xa0\x10\x01\x02\\n\x20\x07\x56\x6a\x7c\xd9\x96\xa8\x0b\xc4\x32\x97\x4b\x82\xec\x83\\n\xe6\x91\xee\x84\x95\x1a\x2b\x9b\x80\xdb\x89\x67\xaf\x43\xe8\xc7\\n\x29\x30\xa5\xca\x42\x2e\x3d\x71\x0c\xe0\xab\x5b\xaa\x24\x81\xd7\\n\xae\x77\xdf\xac\x69\x38\x80\x95\x1a\x2b\xd7\xaa\xd5\x04\xf0\x26\\n\xc2\xaa\x5d\xaf\x0b\x20\x8c\x08\x94\xce\xd7\xa3\xf7\xa6\xe1\x76\\n\xf2\x1b\xb1\x3b\xa0\x04\x84\x9d\x02\x10\x54\x78\x6e\x17\xbc\x21\\n\x4f\x40\x5f\x2b\x81\x8e\xc4\x13\xe8\xb8\x40\xb7\xdb\x46\x3c\x53\\n\x50\xb7\xbd\x9f\xc4\x5a\x9b\x90\x56\xf5\x8e\x77\xc0\x13\xf0\x04\\n\x3c\x01\xd7\x77\xc0\xed\xde\x9a\x4e\xc7\x3b\xe0\x09\xfc\x2a\x81\\n\x8a\x34\xfc\x54\xda\x98\x7e\xa0\xd2\x42\x40\x6f\x15\x22\xf1\xec\\n\x75\xa8\x5d\xe4\xc9\xcc\xc5\x30\x10\x11\xb8\x71\x0a\xa8\x6f\x17\\n\x08\xa0\x1f\x67\xd3\x9b\xb9\xa1\x76\xc0\x7b\xe8\x3a\x05\xfc\x35\\n\xd1\x1d\xbb\xde\x34\x98\xc4\xb3\x57\x7b\xa0\x4b\xc0\x1b\x50\x02\\n\x7d\x30\x83\x97\x41\xbe\x06\x13\xbf\xc2\x5e\x2e\x15\x5d\x71\x0c\\n\x26\xb6\x44\x2c\x53\x9c\xfb\xfe\xb7\x8f\x02\x41\x33\x02\x54\x04\\n\x6e\x54\x65\xdb\x4a\x47\x4f\x0c\x9d\xf9\x47\xf2\x09\xb5\xbd\x75\\n\x94\xee\x91\xe8\xbe\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\\n\x82\\n\x00\x00\x02\x02\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x7f\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcb\x4a\x42\x51\x14\x86\xbf\x65\xa5\xd9\\n\xe5\x01\xac\x57\xc8\x40\x28\xa3\xd2\x9e\x22\x87\xdd\x88\x06\x36\\n\x33\xa1\x9e\xa1\x89\x36\xa9\x46\x5d\x69\x58\xef\x10\x1c\x8d\xb4\\n\x40\xa2\x77\xc8\xe6\x5d\xac\x2c\x57\x83\x3a\xa2\x1c\xcf\x24\xb6\\n\x18\x75\xfe\xd9\x5e\x1b\xf6\xf7\xb1\x60\x6f\xf6\x82\xff\x1e\x69\\n\x5a\xa9\x4a\x2c\x5b\x58\x14\x95\x24\x42\x18\xe8\x35\xc4\x79\x41\\n\xb9\x05\xd9\xb1\xd6\xc6\x8f\x10\x51\xa7\x80\xaa\xcc\x6c\x15\x0f\\n\x55\x99\x07\x5e\x05\x4a\x8a\x3e\x9a\xa0\x0b\x32\xa0\x10\x01\x02\\n\x20\x07\x56\x6a\x7c\xd9\x96\xa8\x0b\xc4\x32\x97\x4b\x82\xec\x83\\n\xe6\x91\xee\x84\x95\x1a\x2b\x9b\x80\xdb\x89\x67\xaf\x43\xe8\xc7\\n\x29\x30\xa5\xca\x42\x2e\x3d\x71\x0c\xe0\xab\x5b\xaa\x24\x81\xd7\\n\xae\x77\xdf\xac\x69\x38\x80\x95\x1a\x2b\xd7\xaa\xd5\x04\xf0\x26\\n\xc2\xaa\x5d\xaf\x0b\x20\x8c\x08\x94\xce\xd7\xa3\xf7\xa6\xe1\x76\\n\xf2\x1b\xb1\x3b\xa0\x04\x84\x9d\x02\x10\x54\x78\x6e\x17\xbc\x21\\n\x4f\x40\x5f\x2b\x81\x8e\xc4\x13\xe8\xb8\x40\xb7\xdb\x46\x3c\x53\\n\x50\xb7\xbd\x9f\xc4\x5a\x9b\x90\x56\xf5\x8e\x77\xc0\x13\xf0\x04\\n\x3c\x01\xd7\x77\xc0\xed\xde\x9a\x4e\xc7\x3b\xe0\x09\xfc\x2a\x81\\n\x8a\x34\xfc\x54\xda\x98\x7e\xa0\xd2\x42\x40\x6f\x15\x22\xf1\xec\\n\x75\xa8\x5d\xe4\xc9\xcc\xc5\x30\x10\x11\xb8\x71\x0a\xa8\x6f\x17\\n\x08\xa0\x1f\x67\xd3\x9b\xb9\xa1\x76\xc0\x7b\xe8\x3a\x05\xfc\x35\\n\xd1\x1d\xbb\xde\x34\x98\xc4\xb3\x57\x7b\xa0\x4b\xc0\x1b\x50\x02\\n\x7d\x30\x83\x97\x41\xbe\x06\x13\xbf\xc2\x5e\x2e\x15\x5d\x71\x0c\\n\x26\xb6\x44\x2c\x53\x9c\xfb\xfe\xb7\x8f\x02\x41\x33\x02\x54\x04\\n\x6e\x54\x65\xdb\x4a\x47\x4f\x0c\x9d\xf9\x47\xf2\x09\xb5\xbd\x75\\n\x94\xee\x91\xe8\xbe\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\\n\x82\\n\x00\x00\x00\xe4\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x36\x00\x00\x00\x0a\x08\x06\x00\x00\x00\xff\xfd\xad\x0b\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\x7f\x00\x87\x00\x95\xe6\xde\xa6\xaf\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x09\x2a\x2b\x98\x90\x5c\xf4\x00\x00\x00\x64\x49\x44\x41\x54\x48\\n\xc7\x63\xfc\xcf\x30\x3c\x01\x0b\xa5\x06\x34\xb4\x4f\x85\x87\xcd\\n\xaa\xa5\x73\x18\xae\x5d\x39\xcf\x48\x2b\x35\x14\x79\xcc\xd8\xc8\\n\x88\x24\x03\x7c\x89\xd0\x4f\x2d\x35\x84\xc0\xd9\x73\xe7\xe0\x6c\\n\x26\x86\x91\x92\x14\x91\x7d\x4d\x54\x52\x0c\x4d\x26\xa8\x9f\x5a\\n\x6a\x46\x93\xe2\x68\x52\x1c\x82\x49\x91\x91\xd2\x7a\x4c\x4b\xc7\\n\x10\xc5\x08\x6c\xc5\x34\xb5\xd4\xd0\xd5\x63\x83\x15\x00\x00\x7a\\n\x30\x4a\x09\x71\xea\x2d\x6e\x00\x00\x00\x00\x49\x45\x4e\x44\xae\\n\x42\x60\x82\\n\x00\x00\x00\xe4\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x36\x00\x00\x00\x0a\x08\x06\x00\x00\x00\xff\xfd\xad\x0b\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\x7f\x00\x87\x00\x95\xe6\xde\xa6\xaf\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x09\x2a\x2b\x98\x90\x5c\xf4\x00\x00\x00\x64\x49\x44\x41\x54\x48\\n\xc7\x63\xfc\xcf\x30\x3c\x01\x0b\xa5\x06\x34\xb4\x4f\x85\x87\xcd\\n\xaa\xa5\x73\x18\xae\x5d\x39\xcf\x48\x2b\x35\x14\x79\xcc\xd8\xc8\\n\x88\x24\x03\x7c\x89\xd0\x4f\x2d\x35\x84\xc0\xd9\x73\xe7\xe0\x6c\\n\x26\x86\x91\x92\x14\x91\x7d\x4d\x54\x52\x0c\x4d\x26\xa8\x9f\x5a\\n\x6a\x46\x93\xe2\x68\x52\x1c\x82\x49\x91\x91\xd2\x7a\x4c\x4b\xc7\\n\x10\xc5\x08\x6c\xc5\x34\xb5\xd4\xd0\xd5\x63\x83\x15\x00\x00\x7a\\n\x30\x4a\x09\x71\xea\x2d\x6e\x00\x00\x00\x00\x49\x45\x4e\x44\xae\\n\x42\x60\x82\\n\x00\x00\x02\x4a\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x14\x1a\x38\xc7\x37\xd0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xae\x49\x44\x41\x54\x78\xda\xed\x9b\x49\\n\x92\xc3\x20\x0c\x45\x23\x5d\xdc\xf6\xc9\xd3\xbb\xae\x54\x06\x26\\n\xe9\x7f\x09\x8c\xd6\x5d\x32\xef\x21\x68\x20\xf0\x78\xec\xd8\xb1\\n\xe3\xce\x21\xcc\x8f\x9d\xe7\xf9\x6c\xfc\x3b\x59\x42\x40\x2b\x70\\n\xa4\x10\xc9\x0a\xcd\x92\x21\xb3\x80\xa3\x44\xc8\x8c\xf0\x9e\x12\\n\x64\x46\x70\x4f\x11\x32\x3b\xbc\x55\x82\xcc\x0e\x6e\x15\x21\x2b\\n\xc1\x8f\x48\x90\xd5\xe0\x7b\x25\xe8\x5e\x0a\x2f\xd8\xfb\x3d\x55\\n\x20\x56\xf8\xe3\x38\xfe\x73\x5c\xd7\x45\x11\xf5\xfa\xcd\xda\x77\\n\x6b\x12\xd4\xbb\x61\xef\x8d\x43\xc3\x5b\x43\x11\xa5\x8f\x92\x30\\n\x92\xb7\xc6\xa0\xa8\x71\xef\x2d\xc1\x92\xaf\xc4\x62\x1e\x02\xa5\\n\xf1\xe7\x25\xa1\x94\xc7\x3a\xef\x88\x57\xef\xa3\x1a\xe9\x99\xf7\\n\xdb\x84\xe8\x36\x09\x22\x2a\x01\xd9\xf3\x90\xff\x02\x9e\x12\x18\\n\xf0\x5f\x87\x80\xc7\xa2\xc7\xda\x78\x24\xfc\xfb\x30\x80\x2c\x85\\n\x2d\x95\xc0\xea\x79\xf8\x5e\x60\x44\x02\x1b\x1e\xbe\x19\xea\x91\\n\x10\x01\xff\x31\x07\xa0\x36\x3d\x35\x38\x36\xfc\xeb\x3c\x40\xd9\\n\x0e\x8f\xce\x09\x8c\xcd\x15\xed\x3c\xa0\x17\x86\xb5\xb3\xa4\x1e\\n\x88\xb4\x42\xb1\xe0\xe9\x02\x5a\xe0\x98\xf0\x21\x02\x2c\xeb\x80\\n\xe9\x05\xb4\xc2\x31\x25\x68\x36\x78\xb6\x04\x8d\x86\x67\x9c\x27\\n\x84\x0a\x68\x81\x8f\x94\x00\xd9\x0d\x8e\xf6\x3c\x63\x51\x44\xd9\\n\x0d\x8e\xc2\x44\x54\x82\x66\x1a\xf3\x11\x12\x34\x13\x7c\x84\x04\\n\xb7\x43\x51\xc4\x18\xf6\xce\x07\x3d\x14\x45\x4c\x60\x8c\x4a\xd0\\n\xac\xf0\x2c\x09\x52\x28\x97\x67\x34\xbc\xe7\x77\x7e\xfd\x48\x1a\\n\x72\x26\x98\x21\x5f\x55\x80\xe5\xe6\x15\xaa\xb1\xa3\x79\x4b\x2c\\n\x9a\xbd\xe7\xd1\xf9\xcd\x17\x24\xb2\x47\xad\x92\xf7\x15\x99\x8e\\n\x64\xfb\x96\xd8\x8a\xb1\x2f\x4a\x0e\x24\xbf\xef\x55\xd9\xcc\x22\\n\x68\x97\xa5\x33\x4a\x08\xb9\x2e\x9f\x45\x82\xf5\xd1\xc4\x7e\x32\\n\x03\x68\xd8\x3d\x1f\x4d\x21\x65\x4c\xf5\x6c\xce\x43\x08\xf3\xe1\\n\xe4\x8e\xbb\xc7\x1f\xfe\x88\x5a\xe2\xcd\xef\x1c\x49\x00\x00\x00\\n\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x4a\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x14\x1a\x38\xc7\x37\xd0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xae\x49\x44\x41\x54\x78\xda\xed\x9b\x49\\n\x92\xc3\x20\x0c\x45\x23\x5d\xdc\xf6\xc9\xd3\xbb\xae\x54\x06\x26\\n\xe9\x7f\x09\x8c\xd6\x5d\x32\xef\x21\x68\x20\xf0\x78\xec\xd8\xb1\\n\xe3\xce\x21\xcc\x8f\x9d\xe7\xf9\x6c\xfc\x3b\x59\x42\x40\x2b\x70\\n\xa4\x10\xc9\x0a\xcd\x92\x21\xb3\x80\xa3\x44\xc8\x8c\xf0\x9e\x12\\n\x64\x46\x70\x4f\x11\x32\x3b\xbc\x55\x82\xcc\x0e\x6e\x15\x21\x2b\\n\xc1\x8f\x48\x90\xd5\xe0\x7b\x25\xe8\x5e\x0a\x2f\xd8\xfb\x3d\x55\\n\x20\x56\xf8\xe3\x38\xfe\x73\x5c\xd7\x45\x11\xf5\xfa\xcd\xda\x77\\n\x6b\x12\xd4\xbb\x61\xef\x8d\x43\xc3\x5b\x43\x11\xa5\x8f\x92\x30\\n\x92\xb7\xc6\xa0\xa8\x71\xef\x2d\xc1\x92\xaf\xc4\x62\x1e\x02\xa5\\n\xf1\xe7\x25\xa1\x94\xc7\x3a\xef\x88\x57\xef\xa3\x1a\xe9\x99\xf7\\n\xdb\x84\xe8\x36\x09\x22\x2a\x01\xd9\xf3\x90\xff\x02\x9e\x12\x18\\n\xf0\x5f\x87\x80\xc7\xa2\xc7\xda\x78\x24\xfc\xfb\x30\x80\x2c\x85\\n\x2d\x95\xc0\xea\x79\xf8\x5e\x60\x44\x02\x1b\x1e\xbe\x19\xea\x91\\n\x10\x01\xff\x31\x07\xa0\x36\x3d\x35\x38\x36\xfc\xeb\x3c\x40\xd9\\n\x0e\x8f\xce\x09\x8c\xcd\x15\xed\x3c\xa0\x17\x86\xb5\xb3\xa4\x1e\\n\x88\xb4\x42\xb1\xe0\xe9\x02\x5a\xe0\x98\xf0\x21\x02\x2c\xeb\x80\\n\xe9\x05\xb4\xc2\x31\x25\x68\x36\x78\xb6\x04\x8d\x86\x67\x9c\x27\\n\x84\x0a\x68\x81\x8f\x94\x00\xd9\x0d\x8e\xf6\x3c\x63\x51\x44\xd9\\n\x0d\x8e\xc2\x44\x54\x82\x66\x1a\xf3\x11\x12\x34\x13\x7c\x84\x04\\n\xb7\x43\x51\xc4\x18\xf6\xce\x07\x3d\x14\x45\x4c\x60\x8c\x4a\xd0\\n\xac\xf0\x2c\x09\x52\x28\x97\x67\x34\xbc\xe7\x77\x7e\xfd\x48\x1a\\n\x72\x26\x98\x21\x5f\x55\x80\xe5\xe6\x15\xaa\xb1\xa3\x79\x4b\x2c\\n\x9a\xbd\xe7\xd1\xf9\xcd\x17\x24\xb2\x47\xad\x92\xf7\x15\x99\x8e\\n\x64\xfb\x96\xd8\x8a\xb1\x2f\x4a\x0e\x24\xbf\xef\x55\xd9\xcc\x22\\n\x68\x97\xa5\x33\x4a\x08\xb9\x2e\x9f\x45\x82\xf5\xd1\xc4\x7e\x32\\n\x03\x68\xd8\x3d\x1f\x4d\x21\x65\x4c\xf5\x6c\xce\x43\x08\xf3\xe1\\n\xe4\x8e\xbb\xc7\x1f\xfe\x88\x5a\xe2\xcd\xef\x1c\x49\x00\x00\x00\\n\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xd0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x4d\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\xc3\x40\x14\x00\xe7\x45\x51\xc2\\n\xf7\x00\x81\x2b\x00\x52\xee\x42\xca\x8d\xed\x58\x14\x70\x1f\x42\\n\x65\x99\x8d\x29\xc3\x1d\x68\xa8\xa3\x28\x77\x20\xf4\x7c\x42\x3e\\n\xf2\xa3\x70\x8c\x8c\x4c\xb9\x16\x12\x78\x2a\x5b\x5a\x79\x66\x25\\n\x17\xef\xc1\x7f\x47\x8a\x2f\xaa\x2a\x36\x8e\xfd\x86\xc8\xa5\xc2\\n\x29\xb0\xe3\xc8\xf3\x21\x30\x03\x86\xc6\xf7\xad\x88\x68\x29\x40\\n\x55\x25\x89\xe3\x5b\x15\xe9\x03\x4b\x60\x82\xc8\xab\x13\xbd\xea\\n\x01\xd0\x05\xda\x88\xc4\x7d\xcf\x0b\xf3\x88\x66\x7e\xc6\xc6\xb1\\n\x2f\x99\xfc\xb1\xd1\x6c\xf6\x8c\x31\x73\x27\xf2\x2d\x49\x92\x74\\n\xd2\xcd\x66\x8c\x6a\x60\xad\x7d\x00\x46\x00\x8d\xfc\x40\x43\xe4\\n\x12\x58\xa6\x70\xee\x5a\x0e\x60\x8c\x99\x6f\xd2\xb4\x07\xac\x44\\n\xf5\xea\xcb\x9b\x3f\x28\x9c\x00\x93\x20\x08\x9e\x5d\xcb\x73\xc2\\n\x30\x7c\x02\x26\x64\xff\xd7\xf7\x00\x60\x17\x78\xaf\x4a\x5e\xe0\\n\x0d\xd8\xfb\x29\xe0\x57\xa8\x03\xea\x80\x3a\xa0\x0e\xa8\x03\xea\\n\x80\x3a\xa0\x0e\x28\x06\x2c\x28\x4c\x2a\x15\xb2\xbf\x75\x95\x02\\n\x66\x40\x37\x49\x92\x4e\x55\x66\x6b\xed\x31\xd9\x78\x3e\x2d\x05\\n\x08\xdc\x00\xed\x74\xbd\xbe\x8f\xa2\xe8\xa8\x12\x79\x9a\x8e\x81\\n\x96\xc0\xb0\xe0\xcd\x50\x55\x19\x59\x1b\xa1\x1a\x00\x2b\xb2\xc5\\n\xe4\xc5\x89\x5d\xf5\x90\xec\xe6\x2d\x85\xc8\xf3\xfd\x8b\x7c\x31\\n\x29\xaf\x66\xd6\x9a\xed\xdc\x7e\x46\x36\x29\xbb\x60\x01\x4c\x51\\n\xbd\xf6\x06\x83\x3b\x47\xdf\xfc\x23\x7c\x02\x90\xc4\x75\x30\xa3\\n\x38\xd1\xd4\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xd0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x4d\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\xc3\x40\x14\x00\xe7\x45\x51\xc2\\n\xf7\x00\x81\x2b\x00\x52\xee\x42\xca\x8d\xed\x58\x14\x70\x1f\x42\\n\x65\x99\x8d\x29\xc3\x1d\x68\xa8\xa3\x28\x77\x20\xf4\x7c\x42\x3e\\n\xf2\xa3\x70\x8c\x8c\x4c\xb9\x16\x12\x78\x2a\x5b\x5a\x79\x66\x25\\n\x17\xef\xc1\x7f\x47\x8a\x2f\xaa\x2a\x36\x8e\xfd\x86\xc8\xa5\xc2\\n\x29\xb0\xe3\xc8\xf3\x21\x30\x03\x86\xc6\xf7\xad\x88\x68\x29\x40\\n\x55\x25\x89\xe3\x5b\x15\xe9\x03\x4b\x60\x82\xc8\xab\x13\xbd\xea\\n\x01\xd0\x05\xda\x88\xc4\x7d\xcf\x0b\xf3\x88\x66\x7e\xc6\xc6\xb1\\n\x2f\x99\xfc\xb1\xd1\x6c\xf6\x8c\x31\x73\x27\xf2\x2d\x49\x92\x74\\n\xd2\xcd\x66\x8c\x6a\x60\xad\x7d\x00\x46\x00\x8d\xfc\x40\x43\xe4\\n\x12\x58\xa6\x70\xee\x5a\x0e\x60\x8c\x99\x6f\xd2\xb4\x07\xac\x44\\n\xf5\xea\xcb\x9b\x3f\x28\x9c\x00\x93\x20\x08\x9e\x5d\xcb\x73\xc2\\n\x30\x7c\x02\x26\x64\xff\xd7\xf7\x00\x60\x17\x78\xaf\x4a\x5e\xe0\\n\x0d\xd8\xfb\x29\xe0\x57\xa8\x03\xea\x80\x3a\xa0\x0e\xa8\x03\xea\\n\x80\x3a\xa0\x0e\x28\x06\x2c\x28\x4c\x2a\x15\xb2\xbf\x75\x95\x02\\n\x66\x40\x37\x49\x92\x4e\x55\x66\x6b\xed\x31\xd9\x78\x3e\x2d\x05\\n\x08\xdc\x00\xed\x74\xbd\xbe\x8f\xa2\xe8\xa8\x12\x79\x9a\x8e\x81\\n\x96\xc0\xb0\xe0\xcd\x50\x55\x19\x59\x1b\xa1\x1a\x00\x2b\xb2\xc5\\n\xe4\xc5\x89\x5d\xf5\x90\xec\xe6\x2d\x85\xc8\xf3\xfd\x8b\x7c\x31\\n\x29\xaf\x66\xd6\x9a\xed\xdc\x7e\x46\x36\x29\xbb\x60\x01\x4c\x51\\n\xbd\xf6\x06\x83\x3b\x47\xdf\xfc\x23\x7c\x02\x90\xc4\x75\x30\xa3\\n\x38\xd1\xd4\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xb6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x18\x00\x00\x00\x11\x08\x06\x00\x00\x00\xc7\x78\x6c\x30\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x2c\x0d\x1f\x43\xaa\xe1\x00\x00\x00\x36\x49\x44\x41\x54\x38\\n\xcb\x63\x60\x20\x01\x2c\x5a\xb4\xe8\xff\xa2\x45\x8b\xfe\x93\xa2\\n\x87\x89\x81\xc6\x60\xd4\x82\x11\x60\x01\x23\xa9\xc9\x74\xd0\xf9\\n\x80\x85\x1c\x4d\x71\x71\x71\x8c\xa3\xa9\x68\xd4\x82\x61\x64\x01\\n\x00\x31\xb5\x09\xec\x1f\x4b\xb4\x15\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xb6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x18\x00\x00\x00\x11\x08\x06\x00\x00\x00\xc7\x78\x6c\x30\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x2c\x0d\x1f\x43\xaa\xe1\x00\x00\x00\x36\x49\x44\x41\x54\x38\\n\xcb\x63\x60\x20\x01\x2c\x5a\xb4\xe8\xff\xa2\x45\x8b\xfe\x93\xa2\\n\x87\x89\x81\xc6\x60\xd4\x82\x11\x60\x01\x23\xa9\xc9\x74\xd0\xf9\\n\x80\x85\x1c\x4d\x71\x71\x71\x8c\xa3\xa9\x68\xd4\x82\x61\x64\x01\\n\x00\x31\xb5\x09\xec\x1f\x4b\xb4\x15\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1c\x1f\x24\\n\xc6\x09\x17\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\xff\xcf\xc3\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x0e\\n\xa3\x21\x9c\xc3\x68\x88\x61\x1a\x0a\x00\x00\x6d\x84\x09\x75\x37\\n\x9e\xd9\x23\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1c\x1f\x24\\n\xc6\x09\x17\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\xff\xcf\xc3\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x0e\\n\xa3\x21\x9c\xc3\x68\x88\x61\x1a\x0a\x00\x00\x6d\x84\x09\x75\x37\\n\x9e\xd9\x23\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xeb\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x68\x49\x44\\n\x41\x54\x58\x85\xed\x97\x4d\x4e\xc2\x40\x18\x86\x9f\xaf\x10\x14\\n\xd4\x03\xa0\x57\x10\x13\xb6\x9e\x43\x76\xc8\x58\x8c\x26\x70\x1f\\n\x31\x31\xa1\x74\x48\x97\x78\x0c\xd7\xc4\x78\x07\x71\xef\x0f\x02\\n\x91\xcf\x85\x94\x20\xa0\x2c\x1c\x5c\x68\xdf\xdd\x4c\xdf\xf4\x79\\n\xa6\x4d\xd3\x19\xf8\xef\x91\xf9\xb1\x6f\xcc\x09\x50\x03\x0a\xc0\\n\xa6\x23\xce\x2b\x70\x27\x22\x8d\x20\x0c\x2d\xa0\xcb\x04\xc4\x37\\n\x26\x04\x2a\xc0\x00\xe8\x02\x4f\x8e\x04\xb6\x81\x22\xb0\x01\xb4\\n\x5a\xd6\x9e\xc6\x12\x53\x01\xdf\x18\x1f\x08\x04\x6e\xd2\x6f\x6f\\n\xa5\xab\x28\xea\x39\x82\x03\x70\x5e\x2e\xe7\x47\x9e\xd7\x41\xe4\\n\x50\xc0\x04\xd6\xb6\x01\xbc\x99\x4e\x0d\x18\x8c\x45\x8e\x5c\xc3\\n\x01\xae\xa2\xa8\x27\xe9\x74\x09\x18\xaa\x48\x3d\x9e\x9f\x15\xd8\\n\x07\xba\x61\x18\x3e\xb8\x86\xc7\x09\x82\xe0\x1e\x91\x2e\xaa\x85\\n\x65\x02\x59\x54\x5f\xd6\x05\x9f\x66\x3c\x7e\x06\x72\xf1\x30\xbd\\n\xaa\xef\x1b\xa3\xab\x3a\xdf\xa5\x65\xed\xfc\x97\xf6\x29\xde\x77\\n\x17\x7f\x23\x89\x40\x22\x90\x08\x24\x02\x89\x40\x22\x90\x08\xac\\n\xdc\x0f\xac\xfa\x9f\xff\x34\xb3\x4f\xa0\x8f\x48\xee\xcb\xa6\x33\\n\xa2\xb7\x05\xf4\x17\x04\x14\xee\x80\xe2\x79\xb9\x9c\x5f\x17\xbb\\n\x52\xa9\xec\xa1\x5a\x04\x6e\x17\x04\x3c\x91\x4b\x60\x63\x94\x4a\\n\x5d\x57\xab\xd5\xdd\x75\xc0\x53\x22\x1d\x20\xa3\x22\x8d\x78\x7e\\n\xfe\x60\xd2\x04\x7c\x60\x38\xd9\xbd\x3e\x3a\xa1\x8b\xec\x4c\x56\\n\x9e\x51\x68\x86\xd6\x9e\x31\x7f\x30\x89\xab\x55\x63\x8e\x55\xa4\\n\x8e\xea\x01\x90\x75\x22\xf0\xf1\xce\x6f\x51\xbd\x68\xb5\xdb\x91\\n\xa3\x7b\xfe\x91\xbc\x03\x16\x71\x6a\x27\x44\x74\xfe\x4f\x00\x00\\n\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xeb\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x68\x49\x44\\n\x41\x54\x58\x85\xed\x97\x4d\x4e\xc2\x40\x18\x86\x9f\xaf\x10\x14\\n\xd4\x03\xa0\x57\x10\x13\xb6\x9e\x43\x76\xc8\x58\x8c\x26\x70\x1f\\n\x31\x31\xa1\x74\x48\x97\x78\x0c\xd7\xc4\x78\x07\x71\xef\x0f\x02\\n\x91\xcf\x85\x94\x20\xa0\x2c\x1c\x5c\x68\xdf\xdd\x4c\xdf\xf4\x79\\n\xa6\x4d\xd3\x19\xf8\xef\x91\xf9\xb1\x6f\xcc\x09\x50\x03\x0a\xc0\\n\xa6\x23\xce\x2b\x70\x27\x22\x8d\x20\x0c\x2d\xa0\xcb\x04\xc4\x37\\n\x26\x04\x2a\xc0\x00\xe8\x02\x4f\x8e\x04\xb6\x81\x22\xb0\x01\xb4\\n\x5a\xd6\x9e\xc6\x12\x53\x01\xdf\x18\x1f\x08\x04\x6e\xd2\x6f\x6f\\n\xa5\xab\x28\xea\x39\x82\x03\x70\x5e\x2e\xe7\x47\x9e\xd7\x41\xe4\\n\x50\xc0\x04\xd6\xb6\x01\xbc\x99\x4e\x0d\x18\x8c\x45\x8e\x5c\xc3\\n\x01\xae\xa2\xa8\x27\xe9\x74\x09\x18\xaa\x48\x3d\x9e\x9f\x15\xd8\\n\x07\xba\x61\x18\x3e\xb8\x86\xc7\x09\x82\xe0\x1e\x91\x2e\xaa\x85\\n\x65\x02\x59\x54\x5f\xd6\x05\x9f\x66\x3c\x7e\x06\x72\xf1\x30\xbd\\n\xaa\xef\x1b\xa3\xab\x3a\xdf\xa5\x65\xed\xfc\x97\xf6\x29\xde\x77\\n\x17\x7f\x23\x89\x40\x22\x90\x08\x24\x02\x89\x40\x22\x90\x08\xac\\n\xdc\x0f\xac\xfa\x9f\xff\x34\xb3\x4f\xa0\x8f\x48\xee\xcb\xa6\x33\\n\xa2\xb7\x05\xf4\x17\x04\x14\xee\x80\xe2\x79\xb9\x9c\x5f\x17\xbb\\n\x52\xa9\xec\xa1\x5a\x04\x6e\x17\x04\x3c\x91\x4b\x60\x63\x94\x4a\\n\x5d\x57\xab\xd5\xdd\x75\xc0\x53\x22\x1d\x20\xa3\x22\x8d\x78\x7e\\n\xfe\x60\xd2\x04\x7c\x60\x38\xd9\xbd\x3e\x3a\xa1\x8b\xec\x4c\x56\\n\x9e\x51\x68\x86\xd6\x9e\x31\x7f\x30\x89\xab\x55\x63\x8e\x55\xa4\\n\x8e\xea\x01\x90\x75\x22\xf0\xf1\xce\x6f\x51\xbd\x68\xb5\xdb\x91\\n\xa3\x7b\xfe\x91\xbc\x03\x16\x71\x6a\x27\x44\x74\xfe\x4f\x00\x00\\n\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xec\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x69\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\xc3\x40\x10\x86\xbf\xb1\xa2\x84\\n\xe7\x01\x02\x57\x00\xa4\xdc\x85\x94\x8e\xed\x44\x14\x70\x1f\x42\\n\x65\x2d\x1b\x53\x86\x3b\xd0\x50\x47\x51\xee\x40\xe8\x79\x84\x3c\\n\xe4\xa1\x70\x8c\x8c\x2c\x25\x05\x36\x05\xf8\xaf\x76\xb5\x23\x7f\\n\x9f\xad\x95\x3c\x03\xff\x3d\x92\xdd\xa8\xaa\x58\x63\x7c\x47\xe4\\n\x52\xe1\x14\xd8\x29\x88\xf3\x21\x30\x01\xfa\xae\xef\x5b\x11\xd1\\n\x9c\x80\xaa\x4a\x64\xcc\xad\x8a\x74\x80\x39\x30\x42\xe4\xb5\x10\\n\xbc\xea\x01\xd0\x02\x1a\x88\x98\x8e\xe7\xf5\x52\x89\x5a\x5a\x63\\n\x8d\xf1\x25\x81\x3f\x3a\xb5\x5a\xdb\x75\xdd\x69\x21\xf0\x75\xa2\\n\x28\x6a\xc6\xab\xd5\x10\xd5\xc0\x5a\xfb\x00\x0c\x00\x9c\xb4\xc0\\n\x11\xb9\x04\xe6\x31\x9c\x17\x0d\x07\x70\x5d\x77\xba\x8a\xe3\x36\\n\xb0\x10\xd5\xab\x2f\x6e\xba\x50\x38\x01\x46\x41\x10\x3c\x17\x0d\\n\x4f\xd3\xeb\xf5\x9e\x80\x11\xc9\xfd\xfa\x2e\x00\xec\x02\xef\x65\\n\xc1\x33\x79\x03\xf6\xd2\x4d\x6d\x43\x21\x00\xd6\x18\xdd\x56\xb3\\n\x29\x5e\x10\xc8\xa6\x73\x67\xd3\xe1\x6f\xa4\x12\xa8\x04\x2a\x81\\n\x4a\xa0\x12\xa8\x04\x2a\x81\xad\xfd\xc0\xb6\xff\xf9\x4f\x93\xfd\\n\x02\x33\x32\x9d\x4a\x89\xd9\x5f\xb3\x72\x02\x13\xa0\x15\x45\x51\\n\xb3\x2c\xb2\xb5\xf6\x98\xa4\x3d\x1f\xe7\x04\x04\x6e\x80\x46\xbc\\n\x5c\xde\x87\x61\x78\x54\x0a\x3c\x8e\x87\x40\x5d\xa0\x9f\xe1\x26\\n\x51\x55\x19\x58\x1b\xa2\x1a\x00\x0b\x92\xc1\xe4\xa5\x10\xba\xea\\n\x21\xc9\x9b\xd7\x15\x42\xcf\xf7\x2f\xd2\xc1\x24\x3f\x9a\x59\xeb\\n\xae\xfb\xf6\x33\x92\x4e\xb9\x88\xcc\x80\x31\xaa\xd7\x5e\xb7\x7b\\n\x57\xd0\x33\xff\x48\x3e\x01\xac\x18\x7a\x56\x83\xd7\xe8\x6e\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xec\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x69\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\xc3\x40\x10\x86\xbf\xb1\xa2\x84\\n\xe7\x01\x02\x57\x00\xa4\xdc\x85\x94\x8e\xed\x44\x14\x70\x1f\x42\\n\x65\x2d\x1b\x53\x86\x3b\xd0\x50\x47\x51\xee\x40\xe8\x79\x84\x3c\\n\xe4\xa1\x70\x8c\x8c\x2c\x25\x05\x36\x05\xf8\xaf\x76\xb5\x23\x7f\\n\x9f\xad\x95\x3c\x03\xff\x3d\x92\xdd\xa8\xaa\x58\x63\x7c\x47\xe4\\n\x52\xe1\x14\xd8\x29\x88\xf3\x21\x30\x01\xfa\xae\xef\x5b\x11\xd1\\n\x9c\x80\xaa\x4a\x64\xcc\xad\x8a\x74\x80\x39\x30\x42\xe4\xb5\x10\\n\xbc\xea\x01\xd0\x02\x1a\x88\x98\x8e\xe7\xf5\x52\x89\x5a\x5a\x63\\n\x8d\xf1\x25\x81\x3f\x3a\xb5\x5a\xdb\x75\xdd\x69\x21\xf0\x75\xa2\\n\x28\x6a\xc6\xab\xd5\x10\xd5\xc0\x5a\xfb\x00\x0c\x00\x9c\xb4\xc0\\n\x11\xb9\x04\xe6\x31\x9c\x17\x0d\x07\x70\x5d\x77\xba\x8a\xe3\x36\\n\xb0\x10\xd5\xab\x2f\x6e\xba\x50\x38\x01\x46\x41\x10\x3c\x17\x0d\\n\x4f\xd3\xeb\xf5\x9e\x80\x11\xc9\xfd\xfa\x2e\x00\xec\x02\xef\x65\\n\xc1\x33\x79\x03\xf6\xd2\x4d\x6d\x43\x21\x00\xd6\x18\xdd\x56\xb3\\n\x29\x5e\x10\xc8\xa6\x73\x67\xd3\xe1\x6f\xa4\x12\xa8\x04\x2a\x81\\n\x4a\xa0\x12\xa8\x04\x2a\x81\xad\xfd\xc0\xb6\xff\xf9\x4f\x93\xfd\\n\x02\x33\x32\x9d\x4a\x89\xd9\x5f\xb3\x72\x02\x13\xa0\x15\x45\x51\\n\xb3\x2c\xb2\xb5\xf6\x98\xa4\x3d\x1f\xe7\x04\x04\x6e\x80\x46\xbc\\n\x5c\xde\x87\x61\x78\x54\x0a\x3c\x8e\x87\x40\x5d\xa0\x9f\xe1\x26\\n\x51\x55\x19\x58\x1b\xa2\x1a\x00\x0b\x92\xc1\xe4\xa5\x10\xba\xea\\n\x21\xc9\x9b\xd7\x15\x42\xcf\xf7\x2f\xd2\xc1\x24\x3f\x9a\x59\xeb\\n\xae\xfb\xf6\x33\x92\x4e\xb9\x88\xcc\x80\x31\xaa\xd7\x5e\xb7\x7b\\n\x57\xd0\x33\xff\x48\x3e\x01\xac\x18\x7a\x56\x83\xd7\xe8\x6e\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xed\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x6a\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcb\x4e\xc2\x40\x14\x86\xbf\x43\x08\x78\\n\x7d\x00\xf4\x15\xd4\x84\x77\x91\x65\x69\x0b\x71\xa1\xef\x23\xae\\n\x9a\x71\xa8\x4b\x7c\x07\x37\xae\x09\xe1\x1d\xc4\xbd\x17\xe4\x92\\n\x1e\x17\xa5\xa6\x06\xd8\x98\x21\x18\xed\xbf\x9a\x76\x26\xfd\xbe\\n\x4e\xa6\xcd\x39\xf0\xdf\x23\xf9\x0b\x55\x15\x6b\x4c\x50\x12\xb9\\n\x54\x38\x05\x76\x1c\x71\x3e\x04\x86\x40\xc7\x0b\x02\x2b\x22\xba\\n\x24\xa0\xaa\x12\x1b\x73\xab\x22\x4d\x60\x02\xf4\x11\x79\x75\x82\\n\x57\x3d\x00\xea\x40\x15\x11\xd3\xf4\xfd\x76\x26\x51\xce\xd6\x58\\n\x63\x02\x49\xe1\x8f\xa5\x72\xb9\xe1\x79\xde\xc8\x09\x7c\x91\x38\\n\x8e\x6b\xc9\x7c\xde\x43\x35\xb4\xd6\x3e\x00\x5d\x80\x52\xb6\xa0\\n\x24\x72\x09\x4c\x12\x38\x77\x0d\x07\xf0\x3c\x6f\x34\x4f\x92\x06\\n\x30\x15\xd5\xab\x2f\x6e\x36\x50\x38\x01\xfa\x61\x18\x3e\xbb\x86\\n\x67\x69\xb7\xdb\x4f\x40\x9f\xf4\x7c\x7d\x17\x00\x76\x81\xf7\x4d\\n\xc1\x73\x79\x03\xf6\x56\x09\x6c\x25\x85\xc0\xd6\x05\xca\xeb\x26\\n\xac\x31\xba\x6e\xee\x27\xf1\xc3\x50\x56\xdd\xdf\xfa\x0e\x14\x02\\n\x85\x40\x21\xb0\xf6\x3f\xb0\xee\xbb\x75\x9d\xad\xef\x40\x21\xf0\\n\xab\x04\xc6\xe4\x2a\x95\x0d\x66\x7f\xc1\x5a\x12\x18\x02\xf5\x38\\n\x8e\x6b\x9b\x22\x5b\x6b\x8f\x49\xcb\xf3\xc1\x92\x80\xc0\x0d\x50\\n\x4d\x66\xb3\xfb\x28\x8a\x8e\x36\x02\x4f\x92\x1e\x50\x11\xe8\xe4\\n\xb8\x69\x54\x55\xba\xd6\x46\xa8\x86\xc0\x94\xb4\x31\x79\x71\x42\\n\x57\x3d\x24\x7d\xf3\x8a\x42\xe4\x07\xc1\x45\xd6\x98\x2c\xb7\x66\\n\xd6\x7a\x8b\xba\xfd\x8c\xb4\x52\x76\x91\x31\x30\x40\xf5\xda\x6f\\n\xb5\xee\x1c\x3d\xf3\x8f\xe4\x13\xfb\x36\x7a\x56\x11\xde\xcf\xd8\\n\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x01\xed\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x6a\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcb\x4e\xc2\x40\x14\x86\xbf\x43\x08\x78\\n\x7d\x00\xf4\x15\xd4\x84\x77\x91\x65\x69\x0b\x71\xa1\xef\x23\xae\\n\x9a\x71\xa8\x4b\x7c\x07\x37\xae\x09\xe1\x1d\xc4\xbd\x17\xe4\x92\\n\x1e\x17\xa5\xa6\x06\xd8\x98\x21\x18\xed\xbf\x9a\x76\x26\xfd\xbe\\n\x4e\xa6\xcd\x39\xf0\xdf\x23\xf9\x0b\x55\x15\x6b\x4c\x50\x12\xb9\\n\x54\x38\x05\x76\x1c\x71\x3e\x04\x86\x40\xc7\x0b\x02\x2b\x22\xba\\n\x24\xa0\xaa\x12\x1b\x73\xab\x22\x4d\x60\x02\xf4\x11\x79\x75\x82\\n\x57\x3d\x00\xea\x40\x15\x11\xd3\xf4\xfd\x76\x26\x51\xce\xd6\x58\\n\x63\x02\x49\xe1\x8f\xa5\x72\xb9\xe1\x79\xde\xc8\x09\x7c\x91\x38\\n\x8e\x6b\xc9\x7c\xde\x43\x35\xb4\xd6\x3e\x00\x5d\x80\x52\xb6\xa0\\n\x24\x72\x09\x4c\x12\x38\x77\x0d\x07\xf0\x3c\x6f\x34\x4f\x92\x06\\n\x30\x15\xd5\xab\x2f\x6e\x36\x50\x38\x01\xfa\x61\x18\x3e\xbb\x86\\n\x67\x69\xb7\xdb\x4f\x40\x9f\xf4\x7c\x7d\x17\x00\x76\x81\xf7\x4d\\n\xc1\x73\x79\x03\xf6\x56\x09\x6c\x25\x85\xc0\xd6\x05\xca\xeb\x26\\n\xac\x31\xba\x6e\xee\x27\xf1\xc3\x50\x56\xdd\xdf\xfa\x0e\x14\x02\\n\x85\x40\x21\xb0\xf6\x3f\xb0\xee\xbb\x75\x9d\xad\xef\x40\x21\xf0\\n\xab\x04\xc6\xe4\x2a\x95\x0d\x66\x7f\xc1\x5a\x12\x18\x02\xf5\x38\\n\x8e\x6b\x9b\x22\x5b\x6b\x8f\x49\xcb\xf3\xc1\x92\x80\xc0\x0d\x50\\n\x4d\x66\xb3\xfb\x28\x8a\x8e\x36\x02\x4f\x92\x1e\x50\x11\xe8\xe4\\n\xb8\x69\x54\x55\xba\xd6\x46\xa8\x86\xc0\x94\xb4\x31\x79\x71\x42\\n\x57\x3d\x24\x7d\xf3\x8a\x42\xe4\x07\xc1\x45\xd6\x98\x2c\xb7\x66\\n\xd6\x7a\x8b\xba\xfd\x8c\xb4\x52\x76\x91\x31\x30\x40\xf5\xda\x6f\\n\xb5\xee\x1c\x3d\xf3\x8f\xe4\x13\xfb\x36\x7a\x56\x11\xde\xcf\xd8\\n\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x9f\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x14\x1f\xf9\\n\x23\xd9\x0b\x00\x00\x00\x23\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x0d\xe6\x7c\x80\xb1\x18\x91\x05\x52\x04\xe0\x42\x08\x15\x29\x02\\n\x0c\x0c\x8c\xc8\x02\x08\x95\x68\x00\x00\xac\xac\x07\x90\x4e\x65\\n\x34\xac\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x9f\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x14\x1f\xf9\\n\x23\xd9\x0b\x00\x00\x00\x23\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x0d\xe6\x7c\x80\xb1\x18\x91\x05\x52\x04\xe0\x42\x08\x15\x29\x02\\n\x0c\x0c\x8c\xc8\x02\x08\x95\x68\x00\x00\xac\xac\x07\x90\x4e\x65\\n\x34\xac\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\xd4\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x51\x49\x44\\n\x41\x54\x58\x85\xed\x96\x41\x4b\x54\x51\x14\xc7\x7f\xe7\x8d\xb8\\n\xd0\x26\x30\x77\x69\x84\xe1\xaa\x29\x90\x41\xc7\x92\x5e\xa0\x1b\\n\xa1\x8d\x0a\xf5\x19\x5a\x3b\x33\xda\xd8\x6a\x16\x41\x36\x83\xf3\\n\xbe\x87\x41\x8d\xad\xc2\x4d\xf6\x14\xf4\x0d\x99\x48\x0e\x11\xe2\\n\xaa\x11\xdb\x18\x34\xa8\x0b\xc3\x77\x5a\xcc\x48\x10\xf3\x74\xee\\n\xe8\xae\xf9\x6f\xef\x39\xfc\x7f\xf7\xdc\x7b\xcf\x3d\xd0\x54\x53\\n\xff\xbb\xc4\x24\x38\x92\x2e\xb6\x76\x86\x0f\x27\x54\x18\x07\x8d\\n\x02\x5d\xd5\xa5\x12\xca\x67\x11\xc9\xef\x97\xdb\xf3\xc5\x74\xe4\\n\xf8\xd2\x01\x6c\x67\xed\x31\x2a\x19\xa0\x07\xe4\x0b\xaa\x4b\x58\\n\x94\x00\x44\xb5\x4b\xb1\x86\x41\xef\x22\xec\x08\x32\xed\x4e\xc6\\n\xde\x5c\x0a\xc0\x93\xf9\xf9\xd0\x8f\xdd\x9b\x19\x94\x38\xf0\x5e\\n\x95\xd4\x4a\x62\x70\xb3\x56\xec\x90\x53\xe8\x0b\xf9\x3a\x8b\x30\\n\x0a\x64\x97\xcb\xb1\x14\x69\xf1\xeb\xdd\x64\x4d\xd9\x8e\x37\x67\\n\xe7\xbc\x93\x87\xce\x5a\xb2\xee\x9c\x9c\x37\x65\xe7\xbc\x13\x3b\\n\xe7\x65\xce\x8b\x3d\xb3\x02\xd5\xb2\xbf\x16\x24\xe9\xc6\x63\x73\\n\xf5\x02\x54\x72\xbd\x69\x94\x57\x08\x13\xcb\x93\x83\x79\x63\x80\\n\x48\xba\xd8\x7a\xed\xea\xc1\x57\x41\xbf\xb9\xf1\x7b\x8f\x4c\xcc\\n\x4f\xf5\xc0\x29\x2c\x8a\x6a\xcf\xcf\xf2\x95\x48\xd0\xc5\xb4\x82\\n\x92\x3b\xc3\x87\x13\xc0\x2d\x5f\x65\xa6\x11\x73\x00\xcb\x97\x67\\n\x40\x6f\x47\xf8\x60\x2c\x30\x26\x68\xa1\xf2\xd4\xd8\x0c\xba\x70\\n\xf5\xc8\x4d\x0c\x6c\xa8\xb2\x25\x60\x0e\x00\x1a\x15\xf4\x63\xa3\\n\xe6\xa7\x12\xf8\x80\xd0\xdf\x00\x00\xd7\x15\x29\x5d\x14\x40\x61\\n\x97\xbf\x0d\xcb\x08\x00\xc4\xac\x53\xd6\x34\x10\x11\x20\xb0\x17\\n\x9c\x05\xb0\x87\x4f\xf7\x45\x01\x14\xed\x02\xf6\xcc\x01\x94\x4f\\n\x0a\xc3\x17\x05\x00\x46\x80\x82\x31\x80\x88\xe4\x45\xb8\x33\xe4\\n\x14\xfa\x1a\x75\xb6\x9d\xd5\x28\x70\x1b\xd1\x77\xc6\x00\xfb\xe5\\n\xf6\x3c\xc2\x4e\xc8\xd7\xd9\x86\xdc\x55\x05\xb5\x32\xc0\xf6\x51\\n\x5b\xcb\x82\x31\x40\x31\x1d\x39\x56\x65\x0a\x61\xd4\xce\x79\x53\\n\xa6\xfe\x76\xce\x4b\x01\x23\xa2\x7e\x72\xfd\x69\xff\x6f\x63\x00\\n\x80\x95\xf8\xe0\x5b\x20\x0b\xcc\xd6\x0d\xa1\x2a\xf6\xdc\xda\x0c\\n\x22\x2f\x44\xc8\xb8\x89\xfb\x81\xe5\x87\x7a\xe6\x81\xb4\x5a\x76\\n\xb8\xf0\x12\x61\x1a\x58\x14\xb5\x52\x6e\x62\x60\xa3\x56\xa8\xed\\n\xac\x46\xab\x65\x1f\x11\x21\xe3\xfe\x8a\x3d\x3f\xef\x3b\x36\x18\\n\x48\xbc\x71\x94\x2c\xd0\xab\xca\x96\x08\x4b\x08\xdf\x01\x50\x6e\\n\x50\x79\x31\x11\x60\x5b\xd4\x4f\x9e\xb7\x73\x63\x00\xa8\xfc\x90\\n\x1d\xe1\x83\x31\xaa\x23\x99\x20\xdd\x15\x7f\x2d\x89\xca\x3a\x96\\n\xe6\x8f\xda\x5a\x16\xce\x3a\xf3\xa6\x9a\x6a\xea\x5f\xfd\x01\xd3\\n\x1c\xd9\x7f\x5e\xb9\x33\xcd\x00\x00\x00\x00\x49\x45\x4e\x44\xae\\n\x42\x60\x82\\n\x00\x00\x02\xd4\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x51\x49\x44\\n\x41\x54\x58\x85\xed\x96\x41\x4b\x54\x51\x14\xc7\x7f\xe7\x8d\xb8\\n\xd0\x26\x30\x77\x69\x84\xe1\xaa\x29\x90\x41\xc7\x92\x5e\xa0\x1b\\n\xa1\x8d\x0a\xf5\x19\x5a\x3b\x33\xda\xd8\x6a\x16\x41\x36\x83\xf3\\n\xbe\x87\x41\x8d\xad\xc2\x4d\xf6\x14\xf4\x0d\x99\x48\x0e\x11\xe2\\n\xaa\x11\xdb\x18\x34\xa8\x0b\xc3\x77\x5a\xcc\x48\x10\xf3\x74\xee\\n\xe8\xae\xf9\x6f\xef\x39\xfc\x7f\xf7\xdc\x7b\xcf\x3d\xd0\x54\x53\\n\xff\xbb\xc4\x24\x38\x92\x2e\xb6\x76\x86\x0f\x27\x54\x18\x07\x8d\\n\x02\x5d\xd5\xa5\x12\xca\x67\x11\xc9\xef\x97\xdb\xf3\xc5\x74\xe4\\n\xf8\xd2\x01\x6c\x67\xed\x31\x2a\x19\xa0\x07\xe4\x0b\xaa\x4b\x58\\n\x94\x00\x44\xb5\x4b\xb1\x86\x41\xef\x22\xec\x08\x32\xed\x4e\xc6\\n\xde\x5c\x0a\xc0\x93\xf9\xf9\xd0\x8f\xdd\x9b\x19\x94\x38\xf0\x5e\\n\x95\xd4\x4a\x62\x70\xb3\x56\xec\x90\x53\xe8\x0b\xf9\x3a\x8b\x30\\n\x0a\x64\x97\xcb\xb1\x14\x69\xf1\xeb\xdd\x64\x4d\xd9\x8e\x37\x67\\n\xe7\xbc\x93\x87\xce\x5a\xb2\xee\x9c\x9c\x37\x65\xe7\xbc\x13\x3b\\n\xe7\x65\xce\x8b\x3d\xb3\x02\xd5\xb2\xbf\x16\x24\xe9\xc6\x63\x73\\n\xf5\x02\x54\x72\xbd\x69\x94\x57\x08\x13\xcb\x93\x83\x79\x63\x80\\n\x48\xba\xd8\x7a\xed\xea\xc1\x57\x41\xbf\xb9\xf1\x7b\x8f\x4c\xcc\\n\x4f\xf5\xc0\x29\x2c\x8a\x6a\xcf\xcf\xf2\x95\x48\xd0\xc5\xb4\x82\\n\x92\x3b\xc3\x87\x13\xc0\x2d\x5f\x65\xa6\x11\x73\x00\xcb\x97\x67\\n\x40\x6f\x47\xf8\x60\x2c\x30\x26\x68\xa1\xf2\xd4\xd8\x0c\xba\x70\\n\xf5\xc8\x4d\x0c\x6c\xa8\xb2\x25\x60\x0e\x00\x1a\x15\xf4\x63\xa3\\n\xe6\xa7\x12\xf8\x80\xd0\xdf\x00\x00\xd7\x15\x29\x5d\x14\x40\x61\\n\x97\xbf\x0d\xcb\x08\x00\xc4\xac\x53\xd6\x34\x10\x11\x20\xb0\x17\\n\x9c\x05\xb0\x87\x4f\xf7\x45\x01\x14\xed\x02\xf6\xcc\x01\x94\x4f\\n\x0a\xc3\x17\x05\x00\x46\x80\x82\x31\x80\x88\xe4\x45\xb8\x33\xe4\\n\x14\xfa\x1a\x75\xb6\x9d\xd5\x28\x70\x1b\xd1\x77\xc6\x00\xfb\xe5\\n\xf6\x3c\xc2\x4e\xc8\xd7\xd9\x86\xdc\x55\x05\xb5\x32\xc0\xf6\x51\\n\x5b\xcb\x82\x31\x40\x31\x1d\x39\x56\x65\x0a\x61\xd4\xce\x79\x53\\n\xa6\xfe\x76\xce\x4b\x01\x23\xa2\x7e\x72\xfd\x69\xff\x6f\x63\x00\\n\x80\x95\xf8\xe0\x5b\x20\x0b\xcc\xd6\x0d\xa1\x2a\xf6\xdc\xda\x0c\\n\x22\x2f\x44\xc8\xb8\x89\xfb\x81\xe5\x87\x7a\xe6\x81\xb4\x5a\x76\\n\xb8\xf0\x12\x61\x1a\x58\x14\xb5\x52\x6e\x62\x60\xa3\x56\xa8\xed\\n\xac\x46\xab\x65\x1f\x11\x21\xe3\xfe\x8a\x3d\x3f\xef\x3b\x36\x18\\n\x48\xbc\x71\x94\x2c\xd0\xab\xca\x96\x08\x4b\x08\xdf\x01\x50\x6e\\n\x50\x79\x31\x11\x60\x5b\xd4\x4f\x9e\xb7\x73\x63\x00\xa8\xfc\x90\\n\x1d\xe1\x83\x31\xaa\x23\x99\x20\xdd\x15\x7f\x2d\x89\xca\x3a\x96\\n\xe6\x8f\xda\x5a\x16\xce\x3a\xf3\xa6\x9a\x6a\xea\x5f\xfd\x01\xd3\\n\x1c\xd9\x7f\x5e\xb9\x33\xcd\x00\x00\x00\x00\x49\x45\x4e\x44\xae\\n\x42\x60\x82\\n\x00\x00\x00\xc3\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdc\x0b\x07\x09\x2e\x37\xff\x44\xe8\xf0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x00\x27\x49\x44\x41\x54\x78\xda\xed\xc1\x01\\n\x0d\x00\x00\x00\xc2\xa0\xf7\x4f\x6d\x0e\x37\xa0\x00\x00\x00\x00\\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x77\x03\x40\x40\\n\x00\x01\xaf\x7a\x0e\xe8\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x00\xc3\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdc\x0b\x07\x09\x2e\x37\xff\x44\xe8\xf0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x00\x27\x49\x44\x41\x54\x78\xda\xed\xc1\x01\\n\x0d\x00\x00\x00\xc2\xa0\xf7\x4f\x6d\x0e\x37\xa0\x00\x00\x00\x00\\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x77\x03\x40\x40\\n\x00\x01\xaf\x7a\x0e\xe8\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x00\xdc\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x10\x00\x00\x00\x40\x08\x06\x00\x00\x00\x13\x7d\xf7\x96\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x2d\x19\xaf\x4a\xeb\xd0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x00\x40\x49\x44\x41\x54\x58\xc3\xed\xce\x31\\n\x0a\x00\x20\x0c\x03\x40\xf5\xa3\x7d\x5b\x5f\xaa\x53\xc1\xc9\xc5\\n\x45\xe4\x32\x05\x1a\x8e\xb6\x76\x99\x5e\x25\x22\x66\xf5\xcc\xec\\n\xfb\xe8\x74\x1b\xb7\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\n\x00\x00\xf0\x36\xf0\x41\x16\x0b\x42\x08\x78\x15\x57\x44\xa2\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xdc\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x10\x00\x00\x00\x40\x08\x06\x00\x00\x00\x13\x7d\xf7\x96\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x2d\x19\xaf\x4a\xeb\xd0\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x00\x40\x49\x44\x41\x54\x58\xc3\xed\xce\x31\\n\x0a\x00\x20\x0c\x03\x40\xf5\xa3\x7d\x5b\x5f\xaa\x53\xc1\xc9\xc5\\n\x45\xe4\x32\x05\x1a\x8e\xb6\x76\x99\x5e\x25\x22\x66\xf5\xcc\xec\\n\xfb\xe8\x74\x1b\xb7\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\n\x00\x00\xf0\x36\xf0\x41\x16\x0b\x42\x08\x78\x15\x57\x44\xa2\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x56\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x14\x2d\x80\x7a\x92\xdf\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xba\x49\x44\x41\x54\x78\xda\xed\x9b\x5b\\n\x92\x02\x21\x0c\x45\x4d\x16\xa6\x1b\xd0\xd5\x8e\x1b\xd0\x8d\xe9\\n\x9f\x65\x39\xda\x3c\x92\x7b\x13\x68\xf2\x3d\x95\xe6\x1c\x1e\x43\\n\x10\x0e\x87\x15\x2b\x56\xec\x39\x84\xf9\xb1\xbf\xe3\xf1\x51\xf3\\n\x77\x97\xfb\x5d\xa6\x10\x50\x0b\x1c\x29\x44\xb2\x42\xb3\x64\xc8\\n\x28\xe0\x28\x11\x32\x22\xbc\xa7\x04\x19\x11\xdc\x53\x84\x8c\x0e\\n\x6f\x95\x20\xa3\x83\x5b\x45\xc8\x4c\xf0\x3d\x12\x64\x36\xf8\x56\\n\x09\xba\xb6\xc2\x13\xf6\x7e\xcb\x28\x10\x2b\xfc\xf9\x76\x7b\xe5\\n\xb8\x9e\x4e\x14\x51\xef\xdf\x2c\x7d\xb7\x24\x41\xbd\x1b\xf6\xd9\\n\x38\x34\xbc\x35\x14\x31\xf4\x51\x12\x7a\xf2\x96\x18\x14\x35\xef\\n\xbd\x25\x58\xf2\x6d\xb1\x98\xa7\xc0\xd6\xfc\xf3\x92\xb0\x95\xc7\\n\xba\xee\x88\x57\xef\xa3\x1a\xe9\x99\xf7\xdb\x82\xe8\xb6\x08\x22\\n\x46\x02\xb2\xe7\x21\xff\x05\x3c\x25\x30\xe0\xbf\x4e\x01\x8f\x4d\\n\x8f\xb5\xf1\x48\xf8\xcf\x69\x00\xd9\x0a\x5b\x46\x02\xab\xe7\xe1\\n\xb5\x40\x8f\x04\x36\x3c\xbc\x18\x6a\x91\x10\x01\xff\x6f\x0d\x40\\n\x15\x3d\x25\x38\x36\xfc\xfb\x3a\x40\x29\x87\x7b\xd7\x04\x46\x71\\n\x45\x3b\x0f\x68\x85\x61\x55\x96\xd4\x03\x91\x5a\x28\x16\x3c\x5d\\n\x40\x0d\x1c\x13\x3e\x44\x80\x65\x1f\x30\xbc\x80\x5a\x38\xa6\x04\\n\xcd\x06\xcf\x96\xa0\xd1\xf0\x8c\xf3\x84\x50\x01\x35\xf0\x91\x12\\n\x20\xd5\x60\x6f\xcf\x33\x36\x45\x94\x6a\xb0\x17\x26\x62\x24\x68\\n\xa6\x39\x1f\x21\x41\x33\xc1\x47\x48\x70\x3b\x14\x45\xcc\x61\xef\\n\x7c\xd0\x43\x51\xc4\x02\xc6\x18\x09\x9a\x15\x9e\x25\xe1\x67\x82\\n\xda\x69\xc0\xaa\xe7\xad\xdf\xf9\xf5\x23\x69\xc8\x99\x60\x86\x7c\\n\x45\x01\x96\x9b\x57\xa8\xc6\xf6\xe6\xdd\x62\xd1\xec\x3d\x8f\xce\\n\x6f\xbe\x20\x91\x3d\x4a\x23\x79\x5d\x91\xa9\x4d\xb6\x6e\x89\x4d\\n\x1a\xeb\xa2\x64\x6b\xf2\x5d\x5f\x95\xcd\x2c\x82\x76\x59\x3a\xa3\\n\x84\x90\xeb\xf2\x59\x24\x58\x1f\x4d\xac\x27\x33\xde\x0d\xdb\xed\\n\xa3\x29\xa4\x8c\xa1\x9e\xcd\x79\x08\x61\x3e\x9c\x5c\xb1\xf7\x78\\n\x02\x51\xa0\x5a\x91\x77\xd2\x02\x23\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x02\x56\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\\n\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x14\x2d\x80\x7a\x92\xdf\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xba\x49\x44\x41\x54\x78\xda\xed\x9b\x5b\\n\x92\x02\x21\x0c\x45\x4d\x16\xa6\x1b\xd0\xd5\x8e\x1b\xd0\x8d\xe9\\n\x9f\x65\x39\xda\x3c\x92\x7b\x13\x68\xf2\x3d\x95\xe6\x1c\x1e\x43\\n\x10\x0e\x87\x15\x2b\x56\xec\x39\x84\xf9\xb1\xbf\xe3\xf1\x51\xf3\\n\x77\x97\xfb\x5d\xa6\x10\x50\x0b\x1c\x29\x44\xb2\x42\xb3\x64\xc8\\n\x28\xe0\x28\x11\x32\x22\xbc\xa7\x04\x19\x11\xdc\x53\x84\x8c\x0e\\n\x6f\x95\x20\xa3\x83\x5b\x45\xc8\x4c\xf0\x3d\x12\x64\x36\xf8\x56\\n\x09\xba\xb6\xc2\x13\xf6\x7e\xcb\x28\x10\x2b\xfc\xf9\x76\x7b\xe5\\n\xb8\x9e\x4e\x14\x51\xef\xdf\x2c\x7d\xb7\x24\x41\xbd\x1b\xf6\xd9\\n\x38\x34\xbc\x35\x14\x31\xf4\x51\x12\x7a\xf2\x96\x18\x14\x35\xef\\n\xbd\x25\x58\xf2\x6d\xb1\x98\xa7\xc0\xd6\xfc\xf3\x92\xb0\x95\xc7\\n\xba\xee\x88\x57\xef\xa3\x1a\xe9\x99\xf7\xdb\x82\xe8\xb6\x08\x22\\n\x46\x02\xb2\xe7\x21\xff\x05\x3c\x25\x30\xe0\xbf\x4e\x01\x8f\x4d\\n\x8f\xb5\xf1\x48\xf8\xcf\x69\x00\xd9\x0a\x5b\x46\x02\xab\xe7\xe1\\n\xb5\x40\x8f\x04\x36\x3c\xbc\x18\x6a\x91\x10\x01\xff\x6f\x0d\x40\\n\x15\x3d\x25\x38\x36\xfc\xfb\x3a\x40\x29\x87\x7b\xd7\x04\x46\x71\\n\x45\x3b\x0f\x68\x85\x61\x55\x96\xd4\x03\x91\x5a\x28\x16\x3c\x5d\\n\x40\x0d\x1c\x13\x3e\x44\x80\x65\x1f\x30\xbc\x80\x5a\x38\xa6\x04\\n\xcd\x06\xcf\x96\xa0\xd1\xf0\x8c\xf3\x84\x50\x01\x35\xf0\x91\x12\\n\x20\xd5\x60\x6f\xcf\x33\x36\x45\x94\x6a\xb0\x17\x26\x62\x24\x68\\n\xa6\x39\x1f\x21\x41\x33\xc1\x47\x48\x70\x3b\x14\x45\xcc\x61\xef\\n\x7c\xd0\x43\x51\xc4\x02\xc6\x18\x09\x9a\x15\x9e\x25\xe1\x67\x82\\n\xda\x69\xc0\xaa\xe7\xad\xdf\xf9\xf5\x23\x69\xc8\x99\x60\x86\x7c\\n\x45\x01\x96\x9b\x57\xa8\xc6\xf6\xe6\xdd\x62\xd1\xec\x3d\x8f\xce\\n\x6f\xbe\x20\x91\x3d\x4a\x23\x79\x5d\x91\xa9\x4d\xb6\x6e\x89\x4d\\n\x1a\xeb\xa2\x64\x6b\xf2\x5d\x5f\x95\xcd\x2c\x82\x76\x59\x3a\xa3\\n\x84\x90\xeb\xf2\x59\x24\x58\x1f\x4d\xac\x27\x33\xde\x0d\xdb\xed\\n\xa3\x29\xa4\x8c\xa1\x9e\xcd\x79\x08\x61\x3e\x9c\x5c\xb1\xf7\x78\\n\x02\x51\xa0\x5a\x91\x77\xd2\x02\x23\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x03\xcc\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x49\x49\x44\\n\x41\x54\x58\x85\xed\x96\xcd\x6b\x5c\x55\x18\xc6\x7f\xcf\x9d\x99\\n\x98\xe9\x64\x16\xd2\x9d\xa9\x92\x0e\xa1\x0b\xd3\xd8\x76\xf0\x1f\\n\x68\x11\x14\x2b\x34\x81\xde\x55\xca\xcc\xbd\xa5\x54\x5c\x04\x44\\n\x6d\x3a\xd5\x4d\x16\x2e\xe2\x44\x57\xb3\x1b\xea\x78\xa7\x18\xb2\\n\x08\xc8\x54\xb0\x88\x1b\xeb\xc6\x85\x68\xf3\x55\x53\xa4\xb4\x55\\n\x9a\x52\x70\x25\x99\x30\xa5\x36\xb9\xaf\x8b\xf9\x68\xc1\xcc\x0c\\n\x53\xba\x6b\x9e\xdd\x39\xe7\x39\xef\xfb\xbb\xef\x7d\xef\x39\x17\\n\x76\xb5\xab\xe7\x5d\xea\xc5\xec\xba\x6e\xdf\x40\x3c\x3e\x2e\x69\\n\x0c\x48\x1b\x0c\x02\x60\xb6\x8e\x74\x4d\x50\xa9\xd6\x6a\x95\x85\\n\x85\x85\x7f\x9f\x39\x80\x9f\xc9\x9c\x34\x29\x2f\xd8\x0f\xac\xca\\n\xec\xaa\x49\xeb\x8d\xe5\x41\xe0\x28\x30\x0a\xdc\x32\x69\x2a\x08\\n\x82\x6f\x9e\x09\x80\xeb\xba\x91\x64\x22\x91\x37\xb3\x0f\x04\xdf\\n\x13\x89\xe4\x4a\xa5\xd2\xf2\x4e\x5e\xcf\xf3\x0e\x0b\x66\x30\x7b\\n\xd3\xcc\x66\x87\x52\xa9\xdc\xf4\xf4\x74\xd8\x29\x7e\xb4\x1b\x40\\n\x23\xf9\xfb\xc0\xb9\x52\xb9\xfc\x79\x27\x6f\x10\x04\x4b\xc0\x5b\\n\xa7\x3d\xef\x1c\x30\xf3\xe7\xed\xdb\x00\x53\x9d\xf6\x74\xac\x80\\n\x9f\xc9\x9c\x44\x5a\x10\x7c\x54\x2a\x97\xbf\x00\x98\x9c\x9c\x7c\\n\x61\x73\x63\xe3\x5d\x83\x09\xd5\x4b\x0e\x66\x2b\xe6\x38\x73\xc9\\n\x64\xb2\x58\x28\x14\x1e\x02\xf8\xd9\xec\x14\xf0\x99\x49\xe3\x41\\n\x10\x54\x7a\x06\x70\x5d\xb7\x6f\x60\xcf\x9e\x1b\xc0\x1f\x5f\x95\\n\xcb\x6f\x03\x9c\x99\x98\xd8\xb7\x1d\x8b\x5d\xc1\x6c\x14\x08\x01\\n\xa7\x61\x0f\x01\x47\xb0\xe2\x6c\x6d\x1d\xbf\x38\x37\xb7\xde\x80\\n\xf8\x01\xd8\xbf\x59\xab\x8d\xb4\x6b\x4c\x67\xa7\x49\x80\x81\x78\\n\x7c\x1c\x48\x29\x12\xb9\xd0\x7c\xf2\xed\x58\xec\x8a\x99\x1d\xdc\\n\x61\xaf\xd3\xa0\x18\x0d\xa3\xd1\xef\x5c\xd7\xed\x03\x70\xcc\xce\\n\x03\xc3\x89\x44\xe2\x44\xbb\x3c\x6d\x01\x24\x8d\x61\xb6\xdc\x6c\\n\xb8\x6a\xb5\x7a\x16\xb3\x51\x75\xa8\x9a\x40\x06\xaf\x0d\xc4\xe3\\n\x67\x01\xbe\xbc\x74\x69\x11\xb8\x8e\x59\xef\x00\x40\x1a\xe9\xa7\\n\xd6\xc8\xec\x14\xf5\x52\x77\x96\x14\x02\xa7\x5a\x43\xb3\x1f\x65\\n\xf6\x7a\xcf\x00\x06\x2f\xe9\xf1\x77\x8e\x60\xa4\x0b\x70\x13\xd4\\n\x91\x34\xd2\x1c\x86\x70\x0f\x69\xb0\x67\x80\x7a\x2c\xeb\xe9\xa4\\n\xdc\x31\x81\xe3\x88\x0e\x95\xeb\x04\x70\x5f\x66\xfb\x5a\x30\xf0\\n\x7b\xa7\x40\x2d\x49\x61\x08\xd7\x5b\xfb\xcc\x06\x31\xbb\xff\x34\\n\x00\xbf\x9a\x74\xf4\x89\xc0\x5f\x77\xf1\x37\x33\x3a\x32\x9b\x7b\\n\x62\xe6\x98\xe0\x97\x9e\x01\x04\x15\xe0\xa0\xe7\x79\x87\x01\x92\\n\xc9\x64\x51\xb0\x62\x60\x6d\x73\x83\x21\x2d\x6d\x3e\x78\x50\x04\\n\xf0\x7d\x3f\x0d\xbc\x6a\xf0\x6d\xcf\x00\xd5\x5a\xad\x02\xdc\x12\\n\xcc\x00\x14\x0a\x85\x87\xce\xd6\xd6\x71\x07\x56\x1b\x96\xc7\xaf\\n\xa3\xde\xf9\x48\x5a\xde\x0e\xc3\x77\x1a\x87\x8e\x14\x86\x79\xe0\\n\x66\xac\xbf\xff\x72\xbb\x3c\x91\x76\x0b\x6b\x6b\x6b\xdb\xe9\x43\\n\x87\xee\x02\x9f\xa4\x8f\x1c\xa9\x2d\x2e\x2d\xfd\x7c\x6d\x75\x75\\n\x63\xf8\xc0\x81\x52\x5f\x34\xfa\xb7\x49\x7b\x05\x2f\x02\x8f\x0c\\n\x16\x1d\x98\xd9\xac\xd5\xde\x9b\x9f\x9f\xff\x07\xc0\xcf\x66\x2f\\n\x00\x67\x04\xa7\x2f\x96\x4a\x37\xda\xe5\xe9\xda\xe5\x5e\x26\x93\\n\x97\xf4\xa1\xa4\x5c\x29\x08\x66\xbb\xf9\x01\xf9\xd9\x6c\x0e\xf8\\n\x54\xd2\x6c\x29\x08\x72\x9d\xcc\x5d\x6f\xc3\xa1\x54\x2a\xf7\xd7\\n\x9d\x3b\x66\x66\x79\x2f\x9b\x7d\x23\x62\x96\x6b\x9c\x70\xff\x93\\n\xef\xfb\x69\x85\x61\xde\xe0\x98\xa4\xfc\x2b\x43\x43\x1f\x77\xa5\\n\xed\x66\x68\xca\xf3\xbc\x31\x99\xcd\x02\xc3\xd4\x3f\xb3\xab\xc0\\n\xdd\xc6\xf2\xcb\xd4\x7f\x48\x46\x80\x9b\x8d\xdb\xb3\x6d\xe3\x3d\\n\x15\x00\xd4\x6f\xc8\x44\x22\x71\x42\x61\x38\x86\x94\x06\x9a\xe7\\n\xc4\xba\xc1\x6f\x32\xab\xc4\xfa\xfb\x2f\x17\x8b\xc5\x47\xbd\xc4\\n\xdd\xd5\xae\x9e\x6f\xfd\x07\xb0\xd0\x3c\xea\x1c\xa0\xa5\x5f\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x03\xcc\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x49\x49\x44\\n\x41\x54\x58\x85\xed\x96\xcd\x6b\x5c\x55\x18\xc6\x7f\xcf\x9d\x99\\n\x98\xe9\x64\x16\xd2\x9d\xa9\x92\x0e\xa1\x0b\xd3\xd8\x76\xf0\x1f\\n\x68\x11\x14\x2b\x34\x81\xde\x55\xca\xcc\xbd\xa5\x54\x5c\x04\x44\\n\x6d\x3a\xd5\x4d\x16\x2e\xe2\x44\x57\xb3\x1b\xea\x78\xa7\x18\xb2\\n\x08\xc8\x54\xb0\x88\x1b\xeb\xc6\x85\x68\xf3\x55\x53\xa4\xb4\x55\\n\x9a\x52\x70\x25\x99\x30\xa5\x36\xb9\xaf\x8b\xf9\x68\xc1\xcc\x0c\\n\x53\xba\x6b\x9e\xdd\x39\xe7\x39\xef\xfb\xbb\xef\x7d\xef\x39\x17\\n\x76\xb5\xab\xe7\x5d\xea\xc5\xec\xba\x6e\xdf\x40\x3c\x3e\x2e\x69\\n\x0c\x48\x1b\x0c\x02\x60\xb6\x8e\x74\x4d\x50\xa9\xd6\x6a\x95\x85\\n\x85\x85\x7f\x9f\x39\x80\x9f\xc9\x9c\x34\x29\x2f\xd8\x0f\xac\xca\\n\xec\xaa\x49\xeb\x8d\xe5\x41\xe0\x28\x30\x0a\xdc\x32\x69\x2a\x08\\n\x82\x6f\x9e\x09\x80\xeb\xba\x91\x64\x22\x91\x37\xb3\x0f\x04\xdf\\n\x13\x89\xe4\x4a\xa5\xd2\xf2\x4e\x5e\xcf\xf3\x0e\x0b\x66\x30\x7b\\n\xd3\xcc\x66\x87\x52\xa9\xdc\xf4\xf4\x74\xd8\x29\x7e\xb4\x1b\x40\\n\x23\xf9\xfb\xc0\xb9\x52\xb9\xfc\x79\x27\x6f\x10\x04\x4b\xc0\x5b\\n\xa7\x3d\xef\x1c\x30\xf3\xe7\xed\xdb\x00\x53\x9d\xf6\x74\xac\x80\\n\x9f\xc9\x9c\x44\x5a\x10\x7c\x54\x2a\x97\xbf\x00\x98\x9c\x9c\x7c\\n\x61\x73\x63\xe3\x5d\x83\x09\xd5\x4b\x0e\x66\x2b\xe6\x38\x73\xc9\\n\x64\xb2\x58\x28\x14\x1e\x02\xf8\xd9\xec\x14\xf0\x99\x49\xe3\x41\\n\x10\x54\x7a\x06\x70\x5d\xb7\x6f\x60\xcf\x9e\x1b\xc0\x1f\x5f\x95\\n\xcb\x6f\x03\x9c\x99\x98\xd8\xb7\x1d\x8b\x5d\xc1\x6c\x14\x08\x01\\n\xa7\x61\x0f\x01\x47\xb0\xe2\x6c\x6d\x1d\xbf\x38\x37\xb7\xde\x80\\n\xf8\x01\xd8\xbf\x59\xab\x8d\xb4\x6b\x4c\x67\xa7\x49\x80\x81\x78\\n\x7c\x1c\x48\x29\x12\xb9\xd0\x7c\xf2\xed\x58\xec\x8a\x99\x1d\xdc\\n\x61\xaf\xd3\xa0\x18\x0d\xa3\xd1\xef\x5c\xd7\xed\x03\x70\xcc\xce\\n\x03\xc3\x89\x44\xe2\x44\xbb\x3c\x6d\x01\x24\x8d\x61\xb6\xdc\x6c\\n\xb8\x6a\xb5\x7a\x16\xb3\x51\x75\xa8\x9a\x40\x06\xaf\x0d\xc4\xe3\\n\x67\x01\xbe\xbc\x74\x69\x11\xb8\x8e\x59\xef\x00\x40\x1a\xe9\xa7\\n\xd6\xc8\xec\x14\xf5\x52\x77\x96\x14\x02\xa7\x5a\x43\xb3\x1f\x65\\n\xf6\x7a\xcf\x00\x06\x2f\xe9\xf1\x77\x8e\x60\xa4\x0b\x70\x13\xd4\\n\x91\x34\xd2\x1c\x86\x70\x0f\x69\xb0\x67\x80\x7a\x2c\xeb\xe9\xa4\\n\xdc\x31\x81\xe3\x88\x0e\x95\xeb\x04\x70\x5f\x66\xfb\x5a\x30\xf0\\n\x7b\xa7\x40\x2d\x49\x61\x08\xd7\x5b\xfb\xcc\x06\x31\xbb\xff\x34\\n\x00\xbf\x9a\x74\xf4\x89\xc0\x5f\x77\xf1\x37\x33\x3a\x32\x9b\x7b\\n\x62\xe6\x98\xe0\x97\x9e\x01\x04\x15\xe0\xa0\xe7\x79\x87\x01\x92\\n\xc9\x64\x51\xb0\x62\x60\x6d\x73\x83\x21\x2d\x6d\x3e\x78\x50\x04\\n\xf0\x7d\x3f\x0d\xbc\x6a\xf0\x6d\xcf\x00\xd5\x5a\xad\x02\xdc\x12\\n\xcc\x00\x14\x0a\x85\x87\xce\xd6\xd6\x71\x07\x56\x1b\x96\xc7\xaf\\n\xa3\xde\xf9\x48\x5a\xde\x0e\xc3\x77\x1a\x87\x8e\x14\x86\x79\xe0\\n\x66\xac\xbf\xff\x72\xbb\x3c\x91\x76\x0b\x6b\x6b\x6b\xdb\xe9\x43\\n\x87\xee\x02\x9f\xa4\x8f\x1c\xa9\x2d\x2e\x2d\xfd\x7c\x6d\x75\x75\\n\x63\xf8\xc0\x81\x52\x5f\x34\xfa\xb7\x49\x7b\x05\x2f\x02\x8f\x0c\\n\x16\x1d\x98\xd9\xac\xd5\xde\x9b\x9f\x9f\xff\x07\xc0\xcf\x66\x2f\\n\x00\x67\x04\xa7\x2f\x96\x4a\x37\xda\xe5\xe9\xda\xe5\x5e\x26\x93\\n\x97\xf4\xa1\xa4\x5c\x29\x08\x66\xbb\xf9\x01\xf9\xd9\x6c\x0e\xf8\\n\x54\xd2\x6c\x29\x08\x72\x9d\xcc\x5d\x6f\xc3\xa1\x54\x2a\xf7\xd7\\n\x9d\x3b\x66\x66\x79\x2f\x9b\x7d\x23\x62\x96\x6b\x9c\x70\xff\x93\\n\xef\xfb\x69\x85\x61\xde\xe0\x98\xa4\xfc\x2b\x43\x43\x1f\x77\xa5\\n\xed\x66\x68\xca\xf3\xbc\x31\x99\xcd\x02\xc3\xd4\x3f\xb3\xab\xc0\\n\xdd\xc6\xf2\xcb\xd4\x7f\x48\x46\x80\x9b\x8d\xdb\xb3\x6d\xe3\x3d\\n\x15\x00\xd4\x6f\xc8\x44\x22\x71\x42\x61\x38\x86\x94\x06\x9a\xe7\\n\xc4\xba\xc1\x6f\x32\xab\xc4\xfa\xfb\x2f\x17\x8b\xc5\x47\xbd\xc4\\n\xdd\xd5\xae\x9e\x6f\xfd\x07\xb0\xd0\x3c\xea\x1c\xa0\xa5\x5f\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x1b\x0e\x16\\n\x4d\x5b\x6f\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\x73\x3e\x20\x0b\xa4\x08\x30\x32\x30\x20\x0b\xa6\\n\x08\x30\x30\x30\x42\x98\x10\xc1\x14\x01\x14\x13\x50\xb5\xa3\x01\\n\x00\xc6\xb9\x07\x90\x5d\x66\x1f\x83\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x1b\x0e\x16\\n\x4d\x5b\x6f\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\x73\x3e\x20\x0b\xa4\x08\x30\x32\x30\x20\x0b\xa6\\n\x08\x30\x30\x30\x42\x98\x10\xc1\x14\x01\x14\x13\x50\xb5\xa3\x01\\n\x00\xc6\xb9\x07\x90\x5d\x66\x1f\x83\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x03\xac\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x29\x49\x44\\n\x41\x54\x58\x85\xed\x95\x4f\x68\x5c\x55\x14\xc6\x7f\xe7\x65\x88\\n\x64\xda\xc6\xbd\xa9\x94\x48\x57\xb6\x91\x3a\x28\xae\xd3\x4d\xc5\\n\x0a\x4d\x40\x66\x63\xda\x37\x2f\x25\xcd\x46\x07\xd1\x24\x8e\xae\\n\xb2\x50\xa8\x49\xdd\x64\x99\xc2\xbc\x19\xd3\x6e\x9e\x20\x53\xc1\\n\xe2\x9f\x85\x75\x1b\xfc\xd3\xa4\x15\x91\x52\x4a\x70\x4a\xd7\x25\\n\x33\x24\xcd\xe0\xfb\x5c\xbc\x37\x4d\x90\xbc\x37\x1d\xe9\xce\xf9\\n\x56\xf7\xcf\x77\xce\xfd\xee\x39\xe7\x9e\x0b\x3d\xf4\xf0\x7f\x87\\n\x75\x43\x0e\x82\xa0\x7f\xab\xd1\x18\x97\xd9\x98\x41\x0e\x18\x8a\\n\xb7\xea\x98\xfd\x2a\xa8\x65\xb3\xd9\x5a\x3e\x9f\xdf\x79\xea\x02\\n\xaa\xe5\xf2\x5b\x98\x2d\x00\xc3\x06\xb7\x04\x37\x64\x56\x07\x70\\n\xc2\x70\x08\xb3\x51\xc1\x08\x70\xd7\x60\xee\x9c\xe7\x7d\xf5\x54\\n\x04\x04\x41\xd0\xb7\xd5\x6c\x2e\x00\xef\x1b\x7c\x6b\x61\x58\x3a\\n\x7b\xfe\xfc\xda\x7e\x5c\xdf\xf7\x4f\x38\x70\x11\x38\x05\x2c\xde\\n\xdb\xd8\x28\xcd\xcf\xcf\x87\x69\xfe\x33\x9d\x04\xc4\x87\xbf\x27\\n\x69\xd6\x9d\x9c\xbc\x94\xc6\xf5\x3c\xef\x26\xf0\x7a\xd5\xf7\x67\\n\x81\x8b\xc3\x47\x8e\x00\xcc\xa5\xd9\xa4\x46\x20\x0e\xfb\x97\x66\\n\x36\x73\xae\x50\xf8\x1c\x60\x69\x69\xe9\x99\xc1\xc1\xc1\x69\x93\\n\xde\x26\x0a\x39\x26\xad\xcb\xec\xea\xc3\xcd\xcd\xe5\x62\xb1\xf8\\n\x08\xa0\x52\xa9\xcc\x99\xf4\x99\x03\xe3\x67\x3d\xaf\xd6\xb5\x80\\n\x20\x08\xfa\xb7\x9b\xcd\x3f\x24\xfd\xe9\x4e\x4e\xbe\x01\x70\xe5\\n\xf2\xe5\xc3\x61\x26\x73\x3d\xce\x75\x08\x38\x31\x3d\x1a\x9b\xad\\n\xf7\xb5\x5a\xa7\x27\xa6\xa6\xea\x00\x15\xdf\xff\xde\xcc\x86\x07\\n\xb2\xd9\x63\x49\x85\xe9\xec\xb7\x08\xb0\xd5\x68\x8c\x0b\x5e\x70\\n\xa4\x8f\xda\x37\x0f\x33\x99\xeb\x32\x3b\xbe\x8f\x6d\x7b\x3c\xf2\\n\x77\x26\xf3\x4d\x10\x04\xfd\x00\xe6\x38\x1f\x22\x1d\xdd\x6e\x36\\n\xcf\x24\x9d\x93\x28\x40\x66\x63\xc0\x5a\xbb\xe0\x9e\x3d\x74\xe8\\n\x82\x60\x04\x29\x39\x6d\xd1\xde\x4b\x5b\x8d\xc6\x05\x00\xd7\x75\\n\x7f\xc3\xec\x36\xd0\xbd\x00\x83\x9c\x49\x3f\xed\x59\x9a\x20\x0a\\n\x75\x3a\xa4\xd0\x22\x6e\x7b\xfe\xa3\xe0\x95\xae\x05\x60\xf6\x5c\\n\xfb\x9d\xc7\x38\x96\xca\xdf\xb5\x73\x14\x71\xdb\xb8\x8f\xd9\x50\\n\x12\x3d\xd5\xa1\xcc\xba\xea\x94\xfb\xea\x01\x43\x4a\x8c\x5c\xb2\\n\x00\xe9\x81\x49\x87\xf7\xac\xfc\xce\x13\xa6\x40\x70\xfb\xf1\x34\\n\xba\xfd\x83\xee\x05\x98\xfd\x8c\xd9\xe8\x9e\x95\x2b\xa9\xfc\x5d\\n\x3b\xc7\xe0\xea\xae\x1e\x9d\x04\x56\xbb\x16\x20\xa8\x21\x1d\xf7\\n\x7d\xff\x04\xc0\xc3\xcd\xcd\x65\xcc\xd6\x31\x53\xca\xe1\x02\x6e\\n\x0e\x1c\x3c\xb8\x0c\xb0\x52\x2e\xe7\x0c\x5e\x44\xfa\xba\x6b\x01\\n\xd9\x6c\xb6\x06\xdc\x8d\x7b\x3b\xc5\x62\xf1\x51\x5f\xab\x75\x1a\\n\xb8\x15\x53\x76\xd3\xd1\xce\xb1\xb4\x86\xe3\xbc\x99\xcf\xe7\x77\\n\x24\x59\x18\x7d\x5e\x77\xb6\x5b\xad\x6b\x5d\x0b\xc8\xe7\xf3\x3b\\n\x38\xce\x2c\x70\x2a\xee\xed\x4c\x4c\x4d\xd5\x07\xb2\xd9\x57\x91\\n\xde\x95\xb4\x0a\x34\x81\xa6\x60\xd5\xcc\xde\x19\x38\x70\xe0\x35\\n\xd7\x75\xef\x03\x54\x7d\xbf\x04\x9c\x94\xd9\xcc\xf4\xf4\x74\x2b\\n\xe9\x9c\x8e\x55\x5e\xf5\xfd\x05\xe0\x03\xa0\xe4\x7a\xde\x62\x27\\n\xbe\x24\xab\xfa\x7e\xc9\xcc\x3e\x01\x16\x5d\xcf\x2b\xa5\xf1\x3b\\n\x16\xd5\xbd\x8d\x8d\x92\xa4\x4b\xc0\x42\xd5\xf7\xbf\xab\x56\xab\\n\x2f\x27\x71\x57\xca\xe5\xdc\x17\x95\xca\x0f\x66\xf6\x29\xd1\x77\\n\xfc\x71\x27\xff\x4f\xfc\xce\x57\x7c\x7f\x2c\x34\x5b\x44\x3a\x1a\\n\xb7\xd7\x1b\x82\xbf\x62\x27\xcf\x23\x8d\x12\x35\xa0\x3b\x32\x9b\\n\x29\x14\x0a\x89\x85\xf7\x9f\x04\xc0\xe3\x1f\xf2\x8c\x60\x0c\xc8\\n\x61\x16\xf5\x09\xa9\x6e\xf0\x8b\xa4\xda\x76\xab\x75\x2d\x2d\xe7\\n\x3d\xf4\xd0\xc3\xbf\xf1\x0f\x78\xe5\x4e\xf2\x11\xe4\x69\x42\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x03\xac\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x29\x49\x44\\n\x41\x54\x58\x85\xed\x95\x4f\x68\x5c\x55\x14\xc6\x7f\xe7\x65\x88\\n\x64\xda\xc6\xbd\xa9\x94\x48\x57\xb6\x91\x3a\x28\xae\xd3\x4d\xc5\\n\x0a\x4d\x40\x66\x63\xda\x37\x2f\x25\xcd\x46\x07\xd1\x24\x8e\xae\\n\xb2\x50\xa8\x49\xdd\x64\x99\xc2\xbc\x19\xd3\x6e\x9e\x20\x53\xc1\\n\xe2\x9f\x85\x75\x1b\xfc\xd3\xa4\x15\x91\x52\x4a\x70\x4a\xd7\x25\\n\x33\x24\xcd\xe0\xfb\x5c\xbc\x37\x4d\x90\xbc\x37\x1d\xe9\xce\xf9\\n\x56\xf7\xcf\x77\xce\xfd\xee\x39\xe7\x9e\x0b\x3d\xf4\xf0\x7f\x87\\n\x75\x43\x0e\x82\xa0\x7f\xab\xd1\x18\x97\xd9\x98\x41\x0e\x18\x8a\\n\xb7\xea\x98\xfd\x2a\xa8\x65\xb3\xd9\x5a\x3e\x9f\xdf\x79\xea\x02\\n\xaa\xe5\xf2\x5b\x98\x2d\x00\xc3\x06\xb7\x04\x37\x64\x56\x07\x70\\n\xc2\x70\x08\xb3\x51\xc1\x08\x70\xd7\x60\xee\x9c\xe7\x7d\xf5\x54\\n\x04\x04\x41\xd0\xb7\xd5\x6c\x2e\x00\xef\x1b\x7c\x6b\x61\x58\x3a\\n\x7b\xfe\xfc\xda\x7e\x5c\xdf\xf7\x4f\x38\x70\x11\x38\x05\x2c\xde\\n\xdb\xd8\x28\xcd\xcf\xcf\x87\x69\xfe\x33\x9d\x04\xc4\x87\xbf\x27\\n\x69\xd6\x9d\x9c\xbc\x94\xc6\xf5\x3c\xef\x26\xf0\x7a\xd5\xf7\x67\\n\x81\x8b\xc3\x47\x8e\x00\xcc\xa5\xd9\xa4\x46\x20\x0e\xfb\x97\x66\\n\x36\x73\xae\x50\xf8\x1c\x60\x69\x69\xe9\x99\xc1\xc1\xc1\x69\x93\\n\xde\x26\x0a\x39\x26\xad\xcb\xec\xea\xc3\xcd\xcd\xe5\x62\xb1\xf8\\n\x08\xa0\x52\xa9\xcc\x99\xf4\x99\x03\xe3\x67\x3d\xaf\xd6\xb5\x80\\n\x20\x08\xfa\xb7\x9b\xcd\x3f\x24\xfd\xe9\x4e\x4e\xbe\x01\x70\xe5\\n\xf2\xe5\xc3\x61\x26\x73\x3d\xce\x75\x08\x38\x31\x3d\x1a\x9b\xad\\n\xf7\xb5\x5a\xa7\x27\xa6\xa6\xea\x00\x15\xdf\xff\xde\xcc\x86\x07\\n\xb2\xd9\x63\x49\x85\xe9\xec\xb7\x08\xb0\xd5\x68\x8c\x0b\x5e\x70\\n\xa4\x8f\xda\x37\x0f\x33\x99\xeb\x32\x3b\xbe\x8f\x6d\x7b\x3c\xf2\\n\x77\x26\xf3\x4d\x10\x04\xfd\x00\xe6\x38\x1f\x22\x1d\xdd\x6e\x36\\n\xcf\x24\x9d\x93\x28\x40\x66\x63\xc0\x5a\xbb\xe0\x9e\x3d\x74\xe8\\n\x82\x60\x04\x29\x39\x6d\xd1\xde\x4b\x5b\x8d\xc6\x05\x00\xd7\x75\\n\x7f\xc3\xec\x36\xd0\xbd\x00\x83\x9c\x49\x3f\xed\x59\x9a\x20\x0a\\n\x75\x3a\xa4\xd0\x22\x6e\x7b\xfe\xa3\xe0\x95\xae\x05\x60\xf6\x5c\\n\xfb\x9d\xc7\x38\x96\xca\xdf\xb5\x73\x14\x71\xdb\xb8\x8f\xd9\x50\\n\x12\x3d\xd5\xa1\xcc\xba\xea\x94\xfb\xea\x01\x43\x4a\x8c\x5c\xb2\\n\x00\xe9\x81\x49\x87\xf7\xac\xfc\xce\x13\xa6\x40\x70\xfb\xf1\x34\\n\xba\xfd\x83\xee\x05\x98\xfd\x8c\xd9\xe8\x9e\x95\x2b\xa9\xfc\x5d\\n\x3b\xc7\xe0\xea\xae\x1e\x9d\x04\x56\xbb\x16\x20\xa8\x21\x1d\xf7\\n\x7d\xff\x04\xc0\xc3\xcd\xcd\x65\xcc\xd6\x31\x53\xca\xe1\x02\x6e\\n\x0e\x1c\x3c\xb8\x0c\xb0\x52\x2e\xe7\x0c\x5e\x44\xfa\xba\x6b\x01\\n\xd9\x6c\xb6\x06\xdc\x8d\x7b\x3b\xc5\x62\xf1\x51\x5f\xab\x75\x1a\\n\xb8\x15\x53\x76\xd3\xd1\xce\xb1\xb4\x86\xe3\xbc\x99\xcf\xe7\x77\\n\x24\x59\x18\x7d\x5e\x77\xb6\x5b\xad\x6b\x5d\x0b\xc8\xe7\xf3\x3b\\n\x38\xce\x2c\x70\x2a\xee\xed\x4c\x4c\x4d\xd5\x07\xb2\xd9\x57\x91\\n\xde\x95\xb4\x0a\x34\x81\xa6\x60\xd5\xcc\xde\x19\x38\x70\xe0\x35\\n\xd7\x75\xef\x03\x54\x7d\xbf\x04\x9c\x94\xd9\xcc\xf4\xf4\x74\x2b\\n\xe9\x9c\x8e\x55\x5e\xf5\xfd\x05\xe0\x03\xa0\xe4\x7a\xde\x62\x27\\n\xbe\x24\xab\xfa\x7e\xc9\xcc\x3e\x01\x16\x5d\xcf\x2b\xa5\xf1\x3b\\n\x16\xd5\xbd\x8d\x8d\x92\xa4\x4b\xc0\x42\xd5\xf7\xbf\xab\x56\xab\\n\x2f\x27\x71\x57\xca\xe5\xdc\x17\x95\xca\x0f\x66\xf6\x29\xd1\x77\\n\xfc\x71\x27\xff\x4f\xfc\xce\x57\x7c\x7f\x2c\x34\x5b\x44\x3a\x1a\\n\xb7\xd7\x1b\x82\xbf\x62\x27\xcf\x23\x8d\x12\x35\xa0\x3b\x32\x9b\\n\x29\x14\x0a\x89\x85\xf7\x9f\x04\xc0\xe3\x1f\xf2\x8c\x60\x0c\xc8\\n\x61\x16\xf5\x09\xa9\x6e\xf0\x8b\xa4\xda\x76\xab\x75\x2d\x2d\xe7\\n\x3d\xf4\xd0\xc3\xbf\xf1\x0f\x78\xe5\x4e\xf2\x11\xe4\x69\x42\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x15\x3b\xdc\\n\x3b\x0c\x9b\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\x73\x3e\x20\x0b\xa4\x08\x30\x32\x30\x20\x0b\xa6\\n\x08\x30\x30\x30\x42\x98\x10\xc1\x14\x01\x14\x13\x50\xb5\xa3\x01\\n\x00\xc6\xb9\x07\x90\x5d\x66\x1f\x83\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x15\x3b\xdc\\n\x3b\x0c\x9b\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\x73\x3e\x20\x0b\xa4\x08\x30\x32\x30\x20\x0b\xa6\\n\x08\x30\x30\x30\x42\x98\x10\xc1\x14\x01\x14\x13\x50\xb5\xa3\x01\\n\x00\xc6\xb9\x07\x90\x5d\x66\x1f\x83\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xe0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x51\x00\x00\x00\x3a\x08\x06\x00\x00\x00\xc8\xbc\xb5\xaf\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x29\x1c\x08\x84\x7e\x56\x00\x00\x00\x60\x49\x44\x41\x54\x78\\n\xda\xed\xd9\xb1\x0d\x00\x20\x08\x00\x41\x71\x50\x86\x63\x51\xed\\n\x8d\x85\x25\x89\x77\xa5\x15\xf9\x48\x45\x8c\xa6\xaa\x6a\x9d\x6f\\n\x99\x19\x1d\x67\x9d\x03\x11\x45\x14\x11\x11\x45\x14\x51\x44\x44\\n\x14\x51\x44\x11\x11\x51\x44\x11\x45\x44\x44\x11\x45\x14\x11\x11\\n\x45\x14\xf1\x5b\xd1\x75\xb0\xdb\xdd\xd9\x4f\xb4\xce\x88\x28\x22\\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcf\x36\xce\x69\x07\x1e\xe9\\n\x39\x55\x40\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xe0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x51\x00\x00\x00\x3a\x08\x06\x00\x00\x00\xc8\xbc\xb5\xaf\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x29\x1c\x08\x84\x7e\x56\x00\x00\x00\x60\x49\x44\x41\x54\x78\\n\xda\xed\xd9\xb1\x0d\x00\x20\x08\x00\x41\x71\x50\x86\x63\x51\xed\\n\x8d\x85\x25\x89\x77\xa5\x15\xf9\x48\x45\x8c\xa6\xaa\x6a\x9d\x6f\\n\x99\x19\x1d\x67\x9d\x03\x11\x45\x14\x11\x11\x45\x14\x51\x44\x44\\n\x14\x51\x44\x11\x11\x51\x44\x11\x45\x44\x44\x11\x45\x14\x11\x11\\n\x45\x14\xf1\x5b\xd1\x75\xb0\xdb\xdd\xd9\x4f\xb4\xce\x88\x28\x22\\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcf\x36\xce\x69\x07\x1e\xe9\\n\x39\x55\x40\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x9e\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x15\x0f\xfd\\n\x8f\xf8\x2e\x00\x00\x00\x22\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x0d\xfe\x9f\x87\xb1\x18\x91\x05\x18\x0d\xe1\x42\x48\x2a\x0c\x19\\n\x18\x18\x91\x05\x10\x2a\xd1\x00\x00\xca\xb5\x07\xd2\x76\xbb\xb2\\n\xc5\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x9e\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x08\x15\x0f\xfd\\n\x8f\xf8\x2e\x00\x00\x00\x22\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x0d\xfe\x9f\x87\xb1\x18\x91\x05\x18\x0d\xe1\x42\x48\x2a\x0c\x19\\n\x18\x18\x91\x05\x10\x2a\xd1\x00\x00\xca\xb5\x07\xd2\x76\xbb\xb2\\n\xc5\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\xf8\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x75\x49\x44\\n\x41\x54\x58\x85\xed\x96\xcd\x4e\x13\x51\x18\x86\x9f\xaf\x15\xd2\\n\x32\x78\x03\x56\x4d\x69\x58\x89\xa6\x3f\xf1\x06\x20\x26\x1a\x37\\n\x94\x84\xd9\xb6\x33\xc4\x0b\x30\x46\x10\x34\x51\x16\x2e\x48\xd1\\n\xb8\x72\x43\xb4\x74\xd8\x92\x98\xe2\xca\xb8\x11\x37\x2c\x8c\xda\\n\x36\x12\xc0\x10\x40\x03\x86\x0b\xc0\x54\xa3\x71\x3e\x17\xb4\xd1\\n\x44\xa6\x65\x0a\x3b\xfb\x6c\xbf\xf7\x9c\xf7\x49\xe6\xcc\x99\x81\\n\x36\x6d\xfe\x77\xc4\x4f\xd8\x34\xcd\xce\xee\x70\x78\x48\x44\xd2\\n\x40\x4a\x21\x02\x80\xea\x0e\x22\xef\x05\x8a\x7b\xd5\x6a\x71\x7e\\n\x7e\xfe\xc7\xb1\x0b\xd8\x99\xcc\xb0\x8a\xe4\x04\x7a\x80\x0f\xa2\\n\xba\xa8\x22\x3b\xb5\x71\x04\xe8\x07\x2e\x00\x1b\x2a\x32\x56\x28\\n\x14\x9e\x1d\x8b\x80\x69\x9a\xc1\x93\x86\x91\x53\xd5\x1b\x02\x2f\\n\x08\x06\xc7\xf3\xf9\x7c\xe5\xa0\xac\x65\x59\x09\x81\x29\x54\x2f\\n\xab\xea\x74\x34\x16\x1b\x9f\x9c\x9c\x74\x1b\xed\x7f\xa2\x99\x40\\n\xad\xfc\x3a\x30\x9a\x77\x9c\x07\x8d\xb2\x85\x42\xa1\x0c\x5c\x19\\n\xb1\xac\x51\x60\xea\xd3\xe6\x26\xc0\x58\xa3\x35\xc1\x46\x43\x3b\\n\x93\x19\x06\x1e\x09\x8c\xce\x3a\xce\xc3\x66\xb2\x75\x4a\xe5\xf2\\n\x52\x32\x91\xf8\x2e\x22\xf7\x12\xc9\x64\xa5\x5c\x2e\xaf\x79\x65\\n\x3d\x1f\x81\x69\x9a\x9d\xdd\x5d\x5d\xab\xc0\xc7\x59\xc7\xb9\x7a\\n\xd8\xf2\xbf\xb1\xb3\xd9\x97\x40\xcf\xd7\x6a\xb5\xcf\xeb\x60\x06\\n\xbc\x16\x77\x87\xc3\x43\x40\x4c\x82\xc1\x89\x56\xca\x01\x02\xaa\\n\xb7\x80\x5e\xc3\x30\x06\x3d\x33\x5e\x03\x11\x49\xa3\x5a\xf1\x3a\\n\x70\x87\xe1\xe9\xdc\x5c\x09\x58\x46\xd5\xbf\x00\x90\x42\xe4\x75\\n\xab\xe5\x75\x44\xf5\x95\xa8\x5e\xf4\x2d\xa0\x70\x4a\xfe\xbc\xe7\\n\x2d\xe3\xc2\x17\x44\x22\xbe\x05\x00\x54\xd5\xd7\x4d\x79\x60\x41\\n\x20\x20\xfb\x1e\xfe\x05\x76\x45\xf5\xf4\x51\x05\x54\x35\x82\xea\\n\x6e\x2b\x02\x6f\x55\xa4\xff\xa8\x02\xc0\x80\xc0\x1b\xdf\x02\x02\\n\x45\xe0\xbc\x65\x59\x89\x56\x9b\x6d\xdb\x4e\x01\xe7\x14\x9e\xfb\\n\x16\xd8\xab\x56\x8b\xc0\x86\xc0\x54\x8b\xfd\x22\xae\x9b\x03\xd6\\n\x3b\x42\xa1\x05\xaf\x90\xe7\x55\xbc\xb2\xb2\xf2\x2b\x15\x8f\x6f\\n\x03\x77\x52\xc9\x64\xb5\x54\x2e\x2f\xf9\x69\xb7\xb3\xd9\x09\xe0\\n\x9a\xc0\xc8\x93\x7c\x7e\xd5\xb7\x00\x40\xa9\x52\x59\x4b\xc4\xe3\\n\x06\x70\x37\x95\x4c\x7e\x3b\xa4\x84\xd4\xca\xef\x8b\xc8\x74\xde\\n\x71\x1e\x37\x0a\x37\xfd\x1a\x46\x63\xb1\xf1\xcf\x5b\x5b\xaa\xaa\\n\x39\x2b\x9b\xbd\x14\x54\x1d\xaf\xdd\x70\xff\x60\xdb\x76\x4a\x5c\\n\x37\xa7\x30\x20\x22\xb9\xb3\xd1\xe8\xed\xa6\xb6\xcd\x02\x75\x2c\\n\xcb\x4a\x8b\xea\x34\xd0\x0b\x2c\x03\x8b\xc0\x76\x6d\x7c\x86\xfd\\n\x1f\x92\x3e\x60\x5d\xe0\x66\xde\x71\x3c\x0f\x5e\x4b\x02\xb0\xff\\n\x85\x34\x0c\x63\x50\x5c\x37\x8d\x48\x0a\xa8\xdf\x13\x3b\x0a\xef\\n\x44\xb5\xd8\x11\x0a\x2d\xcc\xcc\xcc\xfc\xf4\xb3\x6f\x9b\x36\xff\\n\x37\xbf\x01\x4a\x37\xdd\xdd\x8c\xf1\x82\x6a\x00\x00\x00\x00\x49\\n\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\xf8\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x75\x49\x44\\n\x41\x54\x58\x85\xed\x96\xcd\x4e\x13\x51\x18\x86\x9f\xaf\x15\xd2\\n\x32\x78\x03\x56\x4d\x69\x58\x89\xa6\x3f\xf1\x06\x20\x26\x1a\x37\\n\x94\x84\xd9\xb6\x33\xc4\x0b\x30\x46\x10\x34\x51\x16\x2e\x48\xd1\\n\xb8\x72\x43\xb4\x74\xd8\x92\x98\xe2\xca\xb8\x11\x37\x2c\x8c\xda\\n\x36\x12\xc0\x10\x40\x03\x86\x0b\xc0\x54\xa3\x71\x3e\x17\xb4\xd1\\n\x44\xa6\x65\x0a\x3b\xfb\x6c\xbf\xf7\x9c\xf7\x49\xe6\xcc\x99\x81\\n\x36\x6d\xfe\x77\xc4\x4f\xd8\x34\xcd\xce\xee\x70\x78\x48\x44\xd2\\n\x40\x4a\x21\x02\x80\xea\x0e\x22\xef\x05\x8a\x7b\xd5\x6a\x71\x7e\\n\x7e\xfe\xc7\xb1\x0b\xd8\x99\xcc\xb0\x8a\xe4\x04\x7a\x80\x0f\xa2\\n\xba\xa8\x22\x3b\xb5\x71\x04\xe8\x07\x2e\x00\x1b\x2a\x32\x56\x28\\n\x14\x9e\x1d\x8b\x80\x69\x9a\xc1\x93\x86\x91\x53\xd5\x1b\x02\x2f\\n\x08\x06\xc7\xf3\xf9\x7c\xe5\xa0\xac\x65\x59\x09\x81\x29\x54\x2f\\n\xab\xea\x74\x34\x16\x1b\x9f\x9c\x9c\x74\x1b\xed\x7f\xa2\x99\x40\\n\xad\xfc\x3a\x30\x9a\x77\x9c\x07\x8d\xb2\x85\x42\xa1\x0c\x5c\x19\\n\xb1\xac\x51\x60\xea\xd3\xe6\x26\xc0\x58\xa3\x35\xc1\x46\x43\x3b\\n\x93\x19\x06\x1e\x09\x8c\xce\x3a\xce\xc3\x66\xb2\x75\x4a\xe5\xf2\\n\x52\x32\x91\xf8\x2e\x22\xf7\x12\xc9\x64\xa5\x5c\x2e\xaf\x79\x65\\n\x3d\x1f\x81\x69\x9a\x9d\xdd\x5d\x5d\xab\xc0\xc7\x59\xc7\xb9\x7a\\n\xd8\xf2\xbf\xb1\xb3\xd9\x97\x40\xcf\xd7\x6a\xb5\xcf\xeb\x60\x06\\n\xbc\x16\x77\x87\xc3\x43\x40\x4c\x82\xc1\x89\x56\xca\x01\x02\xaa\\n\xb7\x80\x5e\xc3\x30\x06\x3d\x33\x5e\x03\x11\x49\xa3\x5a\xf1\x3a\\n\x70\x87\xe1\xe9\xdc\x5c\x09\x58\x46\xd5\xbf\x00\x90\x42\xe4\x75\\n\xab\xe5\x75\x44\xf5\x95\xa8\x5e\xf4\x2d\xa0\x70\x4a\xfe\xbc\xe7\\n\x2d\xe3\xc2\x17\x44\x22\xbe\x05\x00\x54\xd5\xd7\x4d\x79\x60\x41\\n\x20\x20\xfb\x1e\xfe\x05\x76\x45\xf5\xf4\x51\x05\x54\x35\x82\xea\\n\x6e\x2b\x02\x6f\x55\xa4\xff\xa8\x02\xc0\x80\xc0\x1b\xdf\x02\x02\\n\x45\xe0\xbc\x65\x59\x89\x56\x9b\x6d\xdb\x4e\x01\xe7\x14\x9e\xfb\\n\x16\xd8\xab\x56\x8b\xc0\x86\xc0\x54\x8b\xfd\x22\xae\x9b\x03\xd6\\n\x3b\x42\xa1\x05\xaf\x90\xe7\x55\xbc\xb2\xb2\xf2\x2b\x15\x8f\x6f\\n\x03\x77\x52\xc9\x64\xb5\x54\x2e\x2f\xf9\x69\xb7\xb3\xd9\x09\xe0\\n\x9a\xc0\xc8\x93\x7c\x7e\xd5\xb7\x00\x40\xa9\x52\x59\x4b\xc4\xe3\\n\x06\x70\x37\x95\x4c\x7e\x3b\xa4\x84\xd4\xca\xef\x8b\xc8\x74\xde\\n\x71\x1e\x37\x0a\x37\xfd\x1a\x46\x63\xb1\xf1\xcf\x5b\x5b\xaa\xaa\\n\x39\x2b\x9b\xbd\x14\x54\x1d\xaf\xdd\x70\xff\x60\xdb\x76\x4a\x5c\\n\x37\xa7\x30\x20\x22\xb9\xb3\xd1\xe8\xed\xa6\xb6\xcd\x02\x75\x2c\\n\xcb\x4a\x8b\xea\x34\xd0\x0b\x2c\x03\x8b\xc0\x76\x6d\x7c\x86\xfd\\n\x1f\x92\x3e\x60\x5d\xe0\x66\xde\x71\x3c\x0f\x5e\x4b\x02\xb0\xff\\n\x85\x34\x0c\x63\x50\x5c\x37\x8d\x48\x0a\xa8\xdf\x13\x3b\x0a\xef\\n\x44\xb5\xd8\x11\x0a\x2d\xcc\xcc\xcc\xfc\xf4\xb3\x6f\x9b\x36\xff\\n\x37\xbf\x01\x4a\x37\xdd\xdd\x8c\xf1\x82\x6a\x00\x00\x00\x00\x49\\n\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1f\x20\xb9\\n\x8d\x77\xe9\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x06\xe6\x7c\x60\x60\x60\x42\x30\xa1\x1c\x08\x93\x81\x81\x09\xc1\\n\x64\x60\x60\x62\x60\x48\x11\x40\xe2\x20\x73\x19\x90\x8d\x40\x02\\n\x00\x23\xed\x08\xaf\x64\x9f\x0f\x15\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1f\x20\xb9\\n\x8d\x77\xe9\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x06\xe6\x7c\x60\x60\x60\x42\x30\xa1\x1c\x08\x93\x81\x81\x09\xc1\\n\x64\x60\x60\x62\x60\x48\x11\x40\xe2\x20\x73\x19\x90\x8d\x40\x02\\n\x00\x23\xed\x08\xaf\x64\x9f\x0f\x15\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa5\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x02\x04\x6d\\n\x98\x1b\x69\x00\x00\x00\x29\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\xff\xcf\xa3\x08\x18\x32\x32\x30\x20\x0b\x32\x1a\\n\x32\x30\x30\x42\x98\x10\x41\x46\x43\x14\x13\x50\xb5\xa3\x01\x00\\n\xd6\x10\x07\xd2\x2f\x48\xdf\x4a\x00\x00\x00\x00\x49\x45\x4e\x44\\n\xae\x42\x60\x82\\n\x00\x00\x00\xa5\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x02\x04\x6d\\n\x98\x1b\x69\x00\x00\x00\x29\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x00\x8c\x0c\x0c\xff\xcf\xa3\x08\x18\x32\x32\x30\x20\x0b\x32\x1a\\n\x32\x30\x30\x42\x98\x10\x41\x46\x43\x14\x13\x50\xb5\xa3\x01\x00\\n\xd6\x10\x07\xd2\x2f\x48\xdf\x4a\x00\x00\x00\x00\x49\x45\x4e\x44\\n\xae\x42\x60\x82\\n\x00\x00\x02\xd8\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x55\x49\x44\\n\x41\x54\x58\x85\xed\x95\x4d\x4f\x53\x51\x10\x86\x9f\xb9\x1a\x12\\n\xef\x4f\x10\x0d\xc1\xb0\x12\x4d\xb0\xf1\x0f\xc0\x06\xe3\x06\x48\\n\x4c\x77\xd0\x0f\x16\x6c\x8d\x01\x2c\xae\x58\x68\x82\x05\xff\xc2\\n\x3d\xad\xec\xae\x89\x16\x57\x7e\x2c\xc4\xad\xf1\x8b\x68\x62\x0c\\n\x21\xa4\xb1\x86\x3f\xd0\x86\x86\x26\x7d\x5d\xb4\x21\xc6\x70\x5b\\n\x2e\xb0\xb3\xef\x76\xe6\xcc\x3c\x67\xce\x99\x19\xe8\xa9\xa7\xff\\n\x5d\x16\xc7\x39\x0c\xc3\xbe\xfd\x6a\x75\x4a\x66\x93\x06\x09\xa0\\n\xbf\x6d\xaa\x60\xf6\x59\x50\xf2\x7d\xbf\x94\x4c\x26\x0f\xce\x1c\\n\xa0\x18\x04\x77\x30\xcb\x03\x83\x06\xdf\x04\x9b\x32\xab\x00\x78\\n\xcd\x66\x3f\x66\xa3\x82\xeb\xc0\x8e\xc1\xe2\x4c\x26\xf3\xfc\x4c\\n\x00\xc2\x30\x3c\xb7\x5f\xab\xe5\x81\x7b\x06\xaf\xac\xd9\xcc\x4d\\n\xcf\xce\x6e\x1d\xe5\xeb\x9c\x1b\xf1\x60\x05\x18\x07\x56\x77\xcb\\n\xe5\xdc\xf2\xf2\x72\xb3\x53\xfc\xf3\xdd\x00\xda\xc9\xef\x4a\x5a\\n\x48\x65\xb3\x6b\x9d\x7c\x33\x99\xcc\x57\xe0\x56\xd1\xb9\x05\x60\\n\x65\x70\x60\x00\x60\xb1\xd3\x99\x8e\x15\x68\x97\xfd\x99\x99\xcd\\n\xcf\xa4\xd3\x4f\xba\xc1\xfe\xad\x42\xa1\xb0\x68\xd2\x63\x0f\xa6\\n\xa6\x33\x99\x52\x6c\x80\x30\x0c\xfb\xea\xb5\xda\x0f\x49\x3f\x53\\n\xd9\xec\xed\x38\xc9\x0f\x21\x9c\x7b\x63\x66\x83\x17\x7c\x7f\x38\\n\xea\x63\x7a\x51\x87\xf7\xab\xd5\x29\xc1\x15\x4f\x5a\x3a\x49\x72\\n\x00\xf3\xbc\xfb\x48\x43\xf5\x5a\x6d\x22\xca\x27\x12\x40\x66\x93\\n\xc0\x56\xd4\x87\x3b\x8e\x52\xa9\xd4\x17\xcc\xbe\x03\xf1\x01\x0c\\n\x12\x26\xbd\x3f\x69\xf2\x43\x49\xef\x04\x37\xa3\xcc\xd1\x5d\x60\\n\x76\x51\x50\x39\x35\x00\xfc\xc6\xac\x3f\xca\x18\x59\x01\x00\x99\\n\xc5\x9a\x94\x47\xc9\xc0\x90\x22\x67\x41\x34\x80\xb4\x67\xd2\xa5\\n\xd3\x02\xa8\x75\xfb\xbd\x28\x7b\xa7\x27\xf8\x08\x8c\x9e\x1a\x40\\n\x1a\x33\xf8\x10\x65\x8f\xee\x02\x28\x21\x5d\x73\xce\x8d\x9c\x34\\n\xf9\x7a\x10\x24\x0c\xae\x22\xbd\x8c\x0d\xe0\xfb\x7e\x09\xd8\x69\\n\xcf\xf6\xd8\x92\x64\xcd\xd6\xf2\xda\xae\x37\x1a\x1b\xb1\x01\x92\\n\xc9\xe4\x01\x9e\xb7\x00\x8c\xb7\x67\x7b\x2c\x15\x9d\xcb\x01\x63\\n\x32\x9b\x9f\x9b\x9b\x6b\xc4\x06\x00\x48\xa5\x52\x2f\x80\x55\x60\\n\xe5\xb8\x10\x92\xac\x10\x04\x4b\x66\xf6\x10\xc8\xa7\xd3\xe9\xc8\\n\xf2\x77\x05\x00\xd8\x2d\x97\x73\x92\xd6\x80\x7c\xd1\xb9\xd7\xc5\\n\x62\xf1\x46\x94\xef\x7a\x10\x24\x9e\x16\x0a\x6f\xcd\xec\x11\xad\\n\x75\xfc\xa0\x5b\xfc\x63\xf7\xf9\xba\x73\x93\x4d\xb3\x55\xa4\xa1\\n\xf6\x78\xdd\x14\xfc\x6a\x07\xb9\x8c\x34\x0a\x0c\x03\xdb\x32\x9b\\n\xef\x76\xf3\xd8\x00\x70\xb8\x21\x27\x04\x93\x40\x02\xb3\xd6\x9c\\n\x90\x2a\x06\x9f\x24\x95\xea\x8d\xc6\x46\xa7\x37\xef\xa9\xa7\x9e\\n\xfe\xd5\x1f\x3e\xd4\xef\x44\x0d\xbc\xff\x65\x00\x00\x00\x00\x49\\n\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\xd8\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x02\x55\x49\x44\\n\x41\x54\x58\x85\xed\x95\x4d\x4f\x53\x51\x10\x86\x9f\xb9\x1a\x12\\n\xef\x4f\x10\x0d\xc1\xb0\x12\x4d\xb0\xf1\x0f\xc0\x06\xe3\x06\x48\\n\x4c\x77\xd0\x0f\x16\x6c\x8d\x01\x2c\xae\x58\x68\x82\x05\xff\xc2\\n\x3d\xad\xec\xae\x89\x16\x57\x7e\x2c\xc4\xad\xf1\x8b\x68\x62\x0c\\n\x21\xa4\xb1\x86\x3f\xd0\x86\x86\x26\x7d\x5d\xb4\x21\xc6\x70\x5b\\n\x2e\xb0\xb3\xef\x76\xe6\xcc\x3c\x67\xce\x99\x19\xe8\xa9\xa7\xff\\n\x5d\x16\xc7\x39\x0c\xc3\xbe\xfd\x6a\x75\x4a\x66\x93\x06\x09\xa0\\n\xbf\x6d\xaa\x60\xf6\x59\x50\xf2\x7d\xbf\x94\x4c\x26\x0f\xce\x1c\\n\xa0\x18\x04\x77\x30\xcb\x03\x83\x06\xdf\x04\x9b\x32\xab\x00\x78\\n\xcd\x66\x3f\x66\xa3\x82\xeb\xc0\x8e\xc1\xe2\x4c\x26\xf3\xfc\x4c\\n\x00\xc2\x30\x3c\xb7\x5f\xab\xe5\x81\x7b\x06\xaf\xac\xd9\xcc\x4d\\n\xcf\xce\x6e\x1d\xe5\xeb\x9c\x1b\xf1\x60\x05\x18\x07\x56\x77\xcb\\n\xe5\xdc\xf2\xf2\x72\xb3\x53\xfc\xf3\xdd\x00\xda\xc9\xef\x4a\x5a\\n\x48\x65\xb3\x6b\x9d\x7c\x33\x99\xcc\x57\xe0\x56\xd1\xb9\x05\x60\\n\x65\x70\x60\x00\x60\xb1\xd3\x99\x8e\x15\x68\x97\xfd\x99\x99\xcd\\n\xcf\xa4\xd3\x4f\xba\xc1\xfe\xad\x42\xa1\xb0\x68\xd2\x63\x0f\xa6\\n\xa6\x33\x99\x52\x6c\x80\x30\x0c\xfb\xea\xb5\xda\x0f\x49\x3f\x53\\n\xd9\xec\xed\x38\xc9\x0f\x21\x9c\x7b\x63\x66\x83\x17\x7c\x7f\x38\\n\xea\x63\x7a\x51\x87\xf7\xab\xd5\x29\xc1\x15\x4f\x5a\x3a\x49\x72\\n\x00\xf3\xbc\xfb\x48\x43\xf5\x5a\x6d\x22\xca\x27\x12\x40\x66\x93\\n\xc0\x56\xd4\x87\x3b\x8e\x52\xa9\xd4\x17\xcc\xbe\x03\xf1\x01\x0c\\n\x12\x26\xbd\x3f\x69\xf2\x43\x49\xef\x04\x37\xa3\xcc\xd1\x5d\x60\\n\x76\x51\x50\x39\x35\x00\xfc\xc6\xac\x3f\xca\x18\x59\x01\x00\x99\\n\xc5\x9a\x94\x47\xc9\xc0\x90\x22\x67\x41\x34\x80\xb4\x67\xd2\xa5\\n\xd3\x02\xa8\x75\xfb\xbd\x28\x7b\xa7\x27\xf8\x08\x8c\x9e\x1a\x40\\n\x1a\x33\xf8\x10\x65\x8f\xee\x02\x28\x21\x5d\x73\xce\x8d\x9c\x34\\n\xf9\x7a\x10\x24\x0c\xae\x22\xbd\x8c\x0d\xe0\xfb\x7e\x09\xd8\x69\\n\xcf\xf6\xd8\x92\x64\xcd\xd6\xf2\xda\xae\x37\x1a\x1b\xb1\x01\x92\\n\xc9\xe4\x01\x9e\xb7\x00\x8c\xb7\x67\x7b\x2c\x15\x9d\xcb\x01\x63\\n\x32\x9b\x9f\x9b\x9b\x6b\xc4\x06\x00\x48\xa5\x52\x2f\x80\x55\x60\\n\xe5\xb8\x10\x92\xac\x10\x04\x4b\x66\xf6\x10\xc8\xa7\xd3\xe9\xc8\\n\xf2\x77\x05\x00\xd8\x2d\x97\x73\x92\xd6\x80\x7c\xd1\xb9\xd7\xc5\\n\x62\xf1\x46\x94\xef\x7a\x10\x24\x9e\x16\x0a\x6f\xcd\xec\x11\xad\\n\x75\xfc\xa0\x5b\xfc\x63\xf7\xf9\xba\x73\x93\x4d\xb3\x55\xa4\xa1\\n\xf6\x78\xdd\x14\xfc\x6a\x07\xb9\x8c\x34\x0a\x0c\x03\xdb\x32\x9b\\n\xef\x76\xf3\xd8\x00\x70\xb8\x21\x27\x04\x93\x40\x02\xb3\xd6\x9c\\n\x90\x2a\x06\x9f\x24\x95\xea\x8d\xc6\x46\xa7\x37\xef\xa9\xa7\x9e\\n\xfe\xd5\x1f\x3e\xd4\xef\x44\x0d\xbc\xff\x65\x00\x00\x00\x00\x49\\n\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xef\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x51\x00\x00\x00\x3a\x08\x06\x00\x00\x00\xc8\xbc\xb5\xaf\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x2a\x32\xff\x7f\x20\x5a\x00\x00\x00\x6f\x49\x44\x41\x54\x78\\n\xda\xed\xd0\xb1\x0d\x00\x30\x08\x03\x41\xc8\xa0\x0c\xc7\xa2\x49\\n\xcf\x04\x28\xba\x2f\x5d\x59\x97\xb1\xb4\xee\xbe\x73\xab\xaa\xdc\\n\xf8\xf5\x84\x20\x42\x84\x28\x88\x10\x21\x42\x14\x44\x88\x10\x21\\n\x0a\x22\x44\x88\x10\x05\x11\x22\x44\x88\x82\x08\x11\x22\x44\x41\\n\x84\x08\x51\x10\x21\x42\x84\x28\x88\x10\x21\x42\x14\x44\x88\x10\\n\x21\x0a\x22\x44\x88\x10\x05\x11\x22\x44\x88\x82\x08\x11\x22\x44\\n\x41\x84\x08\x51\x10\x21\x42\xfc\xaa\x07\x12\x55\x04\x74\x56\x9e\\n\x9e\x54\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xef\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x51\x00\x00\x00\x3a\x08\x06\x00\x00\x00\xc8\xbc\xb5\xaf\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\\n\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\\n\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\\n\x0b\x2a\x32\xff\x7f\x20\x5a\x00\x00\x00\x6f\x49\x44\x41\x54\x78\\n\xda\xed\xd0\xb1\x0d\x00\x30\x08\x03\x41\xc8\xa0\x0c\xc7\xa2\x49\\n\xcf\x04\x28\xba\x2f\x5d\x59\x97\xb1\xb4\xee\xbe\x73\xab\xaa\xdc\\n\xf8\xf5\x84\x20\x42\x84\x28\x88\x10\x21\x42\x14\x44\x88\x10\x21\\n\x0a\x22\x44\x88\x10\x05\x11\x22\x44\x88\x82\x08\x11\x22\x44\x41\\n\x84\x08\x51\x10\x21\x42\x84\x28\x88\x10\x21\x42\x14\x44\x88\x10\\n\x21\x0a\x22\x44\x88\x10\x05\x11\x22\x44\x88\x82\x08\x11\x22\x44\\n\x41\x84\x08\x51\x10\x21\x42\xfc\xaa\x07\x12\x55\x04\x74\x56\x9e\\n\x9e\x54\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1f\x0d\xfc\\n\x52\x2b\x9c\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\x73\x3e\xc0\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x4e\\n\x8a\x00\x9c\x93\x22\x80\x61\x1a\x0a\x00\x00\x29\x95\x08\xaf\x88\\n\xac\xba\x34\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1f\x0d\xfc\\n\x52\x2b\x9c\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\x73\x3e\xc0\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x4e\\n\x8a\x00\x9c\x93\x22\x80\x61\x1a\x0a\x00\x00\x29\x95\x08\xaf\x88\\n\xac\xba\x34\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xac\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x07\x00\x00\x00\x3f\x08\x06\x00\x00\x00\x2c\x7b\xd2\x13\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x2e\x14\xfa\xd6\xc4\xae\x00\x00\x00\x39\x49\x44\\n\x41\x54\x38\xcb\x63\x60\x20\x06\xc4\xc7\xc7\x33\xc4\xc7\xc7\xa3\\n\x88\x31\x61\x53\x84\x53\x12\xaf\xce\x91\x28\xc9\x82\xc4\xfe\x8f\\n\xc4\x66\x1c\x0d\xa1\x51\xc9\x51\xc9\x51\x49\x7c\x05\x06\xe3\x68\\n\x08\x91\x2a\x49\x3e\x00\x00\x88\x4b\x04\xd3\x39\x2e\x90\x3f\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xac\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x07\x00\x00\x00\x3f\x08\x06\x00\x00\x00\x2c\x7b\xd2\x13\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x2e\x14\xfa\xd6\xc4\xae\x00\x00\x00\x39\x49\x44\\n\x41\x54\x38\xcb\x63\x60\x20\x06\xc4\xc7\xc7\x33\xc4\xc7\xc7\xa3\\n\x88\x31\x61\x53\x84\x53\x12\xaf\xce\x91\x28\xc9\x82\xc4\xfe\x8f\\n\xc4\x66\x1c\x0d\xa1\x51\xc9\x51\xc9\x51\x49\x7c\x05\x06\xe3\x68\\n\x08\x91\x2a\x49\x3e\x00\x00\x88\x4b\x04\xd3\x39\x2e\x90\x3f\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x42\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x17\x3b\x5f\x83\x74\x4d\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xa6\x49\x44\x41\x54\x78\xda\xed\x9b\xdb\\n\x0e\xc3\x20\x0c\x43\x9b\x68\xff\xdd\xf6\xcb\xb7\xb7\x69\x9a\x76\\n\x49\x4b\xec\x98\x42\x5e\x37\x51\x7c\x70\x28\x85\xb0\x2c\x33\x66\\n\xcc\x18\x39\x8c\xf9\xb0\x6d\xdb\xee\xc1\xff\xd9\x25\x00\x44\x05\\n\x57\x02\x31\x55\xd1\x2c\x18\xd6\x8b\x70\x14\x08\xeb\x51\x7c\x26\\n\x04\xeb\x51\x78\x26\x08\xeb\x5d\x7c\x2b\x04\xeb\x5d\x78\x2b\x08\\n\xbb\x92\xf8\x33\x10\xec\x6a\xe2\x8f\x42\xb8\x55\x76\x72\x5d\xd7\\n\x67\x27\xf7\x7d\x2f\x01\x6c\x55\xa3\xff\x2a\x1e\x05\x21\xe2\x02\\n\x53\x11\x5f\x05\xc1\x2b\x6d\x7f\xe6\x77\x6a\x0a\x64\x8f\xfe\x11\\n\x71\x99\x4e\xf8\xe5\x02\x53\x14\xcf\x84\xe0\xd5\xb6\xff\x25\x92\\n\x91\x0e\x86\x1e\xfd\xa8\x78\xc6\xc4\xf8\xc9\x05\xae\x32\xf2\x55\\n\x4e\x70\x25\xdb\x57\x40\x30\x84\xfd\x5b\xed\x8c\x4c\x87\xf7\x34\\n\x70\x85\x91\xaf\x74\x82\xab\x89\x67\x43\x70\x45\xf1\x4c\x08\x96\\n\x91\xff\xe8\x57\x58\x76\xfb\xaf\xf3\x80\x2b\x8e\x3c\xd3\x09\xae\\n\x2e\x1e\x0d\xc1\x7b\x10\x8f\x84\xe0\xcc\x4e\x2a\xb6\x4f\x5d\x07\\n\x28\xb6\xef\x6a\x39\xc9\x4e\x3b\x57\xcb\x49\xf6\x9c\xe3\xc8\x9c\\n\xcc\x82\x80\x9c\x70\x53\xe6\x00\x24\x04\xf4\xdb\x26\xf5\x6b\x30\\n\xbb\xb3\x08\xf1\xd0\xaf\xc1\x4c\x27\xb0\xd6\x19\xd4\x75\x40\x14\\n\x02\x73\x91\x05\xd9\x11\x6a\x81\xc0\x5e\x61\x42\x37\x45\x8f\x8a\\n\x41\x8b\xa7\x6f\x8a\x1e\x71\x42\xc5\xb7\x05\x1c\x40\x14\x42\x95\\n\xf8\xaf\x29\x90\x99\x06\x2d\xeb\x81\xcb\x9c\x0c\x9d\x11\xc3\xaa\\n\x17\xa0\x1e\x8e\x46\x9d\xc0\x3c\x22\xa7\x1f\x8f\xff\x13\xc7\xae\\n\x14\x29\x29\x90\xf8\xe6\x04\x84\xf8\x7f\x05\x12\x65\x25\x32\xef\\n\x10\x2a\xc4\x87\x01\x20\x21\xa0\x22\x5a\x25\xe6\xcb\xe0\x31\x0b\\n\x25\x4f\x34\x3e\x6e\xa9\xac\x32\x08\x5a\xb1\xb4\x22\x84\x92\x72\\n\x79\x15\x08\xad\x97\x26\xe6\x95\x19\x40\xc7\xc6\xbc\x34\x85\x84\\n\xd1\xd5\xb5\xb9\x0c\x20\xcc\x8b\x93\x33\x46\x8f\x07\x53\x21\x72\\n\xe7\x17\x36\x2b\x63\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\\n\x82\\n\x00\x00\x02\x42\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\\n\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xb3\x00\x79\x00\x79\xdc\xdd\\n\x53\xfc\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\\n\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\\n\xdf\x04\x19\x10\x17\x3b\x5f\x83\x74\x4d\x00\x00\x00\x1d\x69\x54\\n\x58\x74\x43\x6f\x6d\x6d\x65\x6e\x74\x00\x00\x00\x00\x00\x43\x72\\n\x65\x61\x74\x65\x64\x20\x77\x69\x74\x68\x20\x47\x49\x4d\x50\x64\\n\x2e\x65\x07\x00\x00\x01\xa6\x49\x44\x41\x54\x78\xda\xed\x9b\xdb\\n\x0e\xc3\x20\x0c\x43\x9b\x68\xff\xdd\xf6\xcb\xb7\xb7\x69\x9a\x76\\n\x49\x4b\xec\x98\x42\x5e\x37\x51\x7c\x70\x28\x85\xb0\x2c\x33\x66\\n\xcc\x18\x39\x8c\xf9\xb0\x6d\xdb\xee\xc1\xff\xd9\x25\x00\x44\x05\\n\x57\x02\x31\x55\xd1\x2c\x18\xd6\x8b\x70\x14\x08\xeb\x51\x7c\x26\\n\x04\xeb\x51\x78\x26\x08\xeb\x5d\x7c\x2b\x04\xeb\x5d\x78\x2b\x08\\n\xbb\x92\xf8\x33\x10\xec\x6a\xe2\x8f\x42\xb8\x55\x76\x72\x5d\xd7\\n\x67\x27\xf7\x7d\x2f\x01\x6c\x55\xa3\xff\x2a\x1e\x05\x21\xe2\x02\\n\x53\x11\x5f\x05\xc1\x2b\x6d\x7f\xe6\x77\x6a\x0a\x64\x8f\xfe\x11\\n\x71\x99\x4e\xf8\xe5\x02\x53\x14\xcf\x84\xe0\xd5\xb6\xff\x25\x92\\n\x91\x0e\x86\x1e\xfd\xa8\x78\xc6\xc4\xf8\xc9\x05\xae\x32\xf2\x55\\n\x4e\x70\x25\xdb\x57\x40\x30\x84\xfd\x5b\xed\x8c\x4c\x87\xf7\x34\\n\x70\x85\x91\xaf\x74\x82\xab\x89\x67\x43\x70\x45\xf1\x4c\x08\x96\\n\x91\xff\xe8\x57\x58\x76\xfb\xaf\xf3\x80\x2b\x8e\x3c\xd3\x09\xae\\n\x2e\x1e\x0d\xc1\x7b\x10\x8f\x84\xe0\xcc\x4e\x2a\xb6\x4f\x5d\x07\\n\x28\xb6\xef\x6a\x39\xc9\x4e\x3b\x57\xcb\x49\xf6\x9c\xe3\xc8\x9c\\n\xcc\x82\x80\x9c\x70\x53\xe6\x00\x24\x04\xf4\xdb\x26\xf5\x6b\x30\\n\xbb\xb3\x08\xf1\xd0\xaf\xc1\x4c\x27\xb0\xd6\x19\xd4\x75\x40\x14\\n\x02\x73\x91\x05\xd9\x11\x6a\x81\xc0\x5e\x61\x42\x37\x45\x8f\x8a\\n\x41\x8b\xa7\x6f\x8a\x1e\x71\x42\xc5\xb7\x05\x1c\x40\x14\x42\x95\\n\xf8\xaf\x29\x90\x99\x06\x2d\xeb\x81\xcb\x9c\x0c\x9d\x11\xc3\xaa\\n\x17\xa0\x1e\x8e\x46\x9d\xc0\x3c\x22\xa7\x1f\x8f\xff\x13\xc7\xae\\n\x14\x29\x29\x90\xf8\xe6\x04\x84\xf8\x7f\x05\x12\x65\x25\x32\xef\\n\x10\x2a\xc4\x87\x01\x20\x21\xa0\x22\x5a\x25\xe6\xcb\xe0\x31\x0b\\n\x25\x4f\x34\x3e\x6e\xa9\xac\x32\x08\x5a\xb1\xb4\x22\x84\x92\x72\\n\x79\x15\x08\xad\x97\x26\xe6\x95\x19\x40\xc7\xc6\xbc\x34\x85\x84\\n\xd1\xd5\xb5\xb9\x0c\x20\xcc\x8b\x93\x33\x46\x8f\x07\x53\x21\x72\\n\xe7\x17\x36\x2b\x63\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\\n\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x1b\x29\xb3\\n\x47\xee\x04\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\x73\x3e\xc0\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x4e\\n\x8a\x00\x9c\x93\x22\x80\x61\x1a\x0a\x00\x00\x29\x95\x08\xaf\x88\\n\xac\xba\x34\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa0\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\x9c\x53\x34\xfc\x5d\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x0b\x1b\x29\xb3\\n\x47\xee\x04\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\x63\x60\x40\\n\x05\x73\x3e\xc0\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\xc5\x70\x4e\\n\x8a\x00\x9c\x93\x22\x80\x61\x1a\x0a\x00\x00\x29\x95\x08\xaf\x88\\n\xac\xba\x34\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x96\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x02\x62\x4b\x47\x44\x00\xd3\xb5\x57\xa0\x5c\x00\x00\\n\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\\n\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x0b\x07\x0c\\n\x0d\x1b\x75\xfe\x31\x99\x00\x00\x00\x27\x49\x44\x41\x54\x08\xd7\\n\x65\x8c\xb1\x0d\x00\x00\x08\x83\xe0\xff\xa3\x75\x70\xb1\xca\xd4\\n\x90\x50\x78\x08\x55\x21\x14\xb6\x54\x70\xe6\x48\x8d\x87\xcc\x0f\\n\x0d\xe0\xf0\x08\x02\x34\xe2\x2b\xa7\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\x96\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x09\x00\x00\x00\x06\x08\x04\x00\x00\x00\xbb\xce\x7c\x4e\\n\x00\x00\x00\x02\x62\x4b\x47\x44\x00\xd3\xb5\x57\xa0\x5c\x00\x00\\n\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\\n\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x0b\x07\x0c\\n\x0d\x1b\x75\xfe\x31\x99\x00\x00\x00\x27\x49\x44\x41\x54\x08\xd7\\n\x65\x8c\xb1\x0d\x00\x00\x08\x83\xe0\xff\xa3\x75\x70\xb1\xca\xd4\\n\x90\x50\x78\x08\x55\x21\x14\xb6\x54\x70\xe6\x48\x8d\x87\xcc\x0f\\n\x0d\xe0\xf0\x08\x02\x34\xe2\x2b\xa7\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x01\xe3\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x60\x49\x44\\n\x41\x54\x58\x85\xed\xd7\x3b\x4e\x42\x61\x10\x86\xe1\x77\x40\x45\\n\xbc\x2c\x00\xdd\x82\x98\x90\x00\x46\x05\x57\x21\xa5\x17\x62\x2c\\n\xb0\x43\x12\x5d\x83\x0d\xd8\x88\x15\xde\x62\x89\x7b\x30\x39\x60\\n\x14\x49\x4e\x08\x7b\x10\x7b\x2f\x08\x08\x63\xa1\x87\x40\xa0\x3c\\n\xc4\x44\xcf\xd7\xfd\x53\xfc\xdf\x53\xce\xc0\x7f\x8f\xf4\xbd\x54\\n\x25\x92\x79\xd8\x16\x95\x04\x82\x1f\x98\xb4\xa9\xe7\x03\xa5\x0a\\n\x92\x35\xf6\x43\x97\x88\xe8\x20\x40\x55\xd6\x8e\x4b\x17\xaa\x6c\\n\x02\x0d\x01\x53\xd1\x57\x3b\xda\x05\x99\x51\x08\x00\x1e\x90\x73\\n\x23\x19\xda\xb1\x10\x5d\x40\x24\x7d\x1f\x17\xe4\x0c\xb4\x88\x8c\\n\xc5\x8c\x64\xb0\x66\x47\xb9\x95\x68\xa6\xec\x43\xdb\x79\x60\x45\\n\x95\xad\x42\x6a\xe9\x0a\xc0\xd5\x55\xaa\x24\x80\x86\xfb\xd3\xb5\\n\x6e\x77\x39\x80\x91\x0c\xd6\x3a\xad\x56\x0c\x68\x8a\xb0\x67\xcd\\n\xbb\x00\x84\x05\x01\xf3\xf6\x20\xfc\x6c\x77\xb9\x95\xe2\x61\xe4\\n\x09\x30\x01\xff\x20\x00\xbc\x0a\xef\xa3\x2a\xef\xc9\x1b\x30\x35\\n\x0c\xf0\x2b\x71\x00\x0e\xc0\x01\x38\x00\x07\xe0\x00\x1c\x80\x03\\n\xe8\x05\xd4\xa5\x67\x53\x19\x61\xa6\x81\xfa\x10\x80\x56\x15\x02\\n\xd1\x4c\xd9\x37\xaa\xe6\xe5\xf4\xdd\x3c\x10\x10\xa8\x0c\x02\xd4\\n\x75\x0a\x78\xd0\xf6\xcd\xea\x51\x61\x6e\x14\xe5\xe3\xb8\xf3\xc0\\n\x44\x47\x34\x6b\xcd\xfb\x0e\x93\x68\xe6\x31\x07\x1a\x07\x9a\x80\\n\x09\xfa\x62\x4f\xbd\xcc\xf2\x7d\x98\x4c\x28\xe4\x0a\xc9\xf0\xee\\n\xc0\x61\x62\x21\x22\xe9\xd2\xc6\xcf\xde\xbe\x08\x78\xed\x01\x50\\n\x17\xa8\xa8\xca\x89\x91\x0a\x5f\xdb\xf4\xe7\x1f\xc9\x17\xa4\x29\\n\x70\x23\xfc\x8b\x13\x87\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x01\xe3\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x60\x49\x44\\n\x41\x54\x58\x85\xed\xd7\x3b\x4e\x42\x61\x10\x86\xe1\x77\x40\x45\\n\xbc\x2c\x00\xdd\x82\x98\x90\x00\x46\x05\x57\x21\xa5\x17\x62\x2c\\n\xb0\x43\x12\x5d\x83\x0d\xd8\x88\x15\xde\x62\x89\x7b\x30\x39\x60\\n\x14\x49\x4e\x08\x7b\x10\x7b\x2f\x08\x08\x63\xa1\x87\x40\xa0\x3c\\n\xc4\x44\xcf\xd7\xfd\x53\xfc\xdf\x53\xce\xc0\x7f\x8f\xf4\xbd\x54\\n\x25\x92\x79\xd8\x16\x95\x04\x82\x1f\x98\xb4\xa9\xe7\x03\xa5\x0a\\n\x92\x35\xf6\x43\x97\x88\xe8\x20\x40\x55\xd6\x8e\x4b\x17\xaa\x6c\\n\x02\x0d\x01\x53\xd1\x57\x3b\xda\x05\x99\x51\x08\x00\x1e\x90\x73\\n\x23\x19\xda\xb1\x10\x5d\x40\x24\x7d\x1f\x17\xe4\x0c\xb4\x88\x8c\\n\xc5\x8c\x64\xb0\x66\x47\xb9\x95\x68\xa6\xec\x43\xdb\x79\x60\x45\\n\x95\xad\x42\x6a\xe9\x0a\xc0\xd5\x55\xaa\x24\x80\x86\xfb\xd3\xb5\\n\x6e\x77\x39\x80\x91\x0c\xd6\x3a\xad\x56\x0c\x68\x8a\xb0\x67\xcd\\n\xbb\x00\x84\x05\x01\xf3\xf6\x20\xfc\x6c\x77\xb9\x95\xe2\x61\xe4\\n\x09\x30\x01\xff\x20\x00\xbc\x0a\xef\xa3\x2a\xef\xc9\x1b\x30\x35\\n\x0c\xf0\x2b\x71\x00\x0e\xc0\x01\x38\x00\x07\xe0\x00\x1c\x80\x03\\n\xe8\x05\xd4\xa5\x67\x53\x19\x61\xa6\x81\xfa\x10\x80\x56\x15\x02\\n\xd1\x4c\xd9\x37\xaa\xe6\xe5\xf4\xdd\x3c\x10\x10\xa8\x0c\x02\xd4\\n\x75\x0a\x78\xd0\xf6\xcd\xea\x51\x61\x6e\x14\xe5\xe3\xb8\xf3\xc0\\n\x44\x47\x34\x6b\xcd\xfb\x0e\x93\x68\xe6\x31\x07\x1a\x07\x9a\x80\\n\x09\xfa\x62\x4f\xbd\xcc\xf2\x7d\x98\x4c\x28\xe4\x0a\xc9\xf0\xee\\n\xc0\x61\x62\x21\x22\xe9\xd2\xc6\xcf\xde\xbe\x08\x78\xed\x01\x50\\n\x17\xa8\xa8\xca\x89\x91\x0a\x5f\xdb\xf4\xe7\x1f\xc9\x17\xa4\x29\\n\x70\x23\xfc\x8b\x13\x87\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x02\x00\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x7d\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\x02\x51\x14\x86\xbf\x83\x28\x3e\\n\x17\xa0\x6e\x41\x4d\x48\x78\x44\x9d\x71\x15\x5a\xfa\x8a\xb1\xd0\\n\x0e\x48\x74\x0d\x36\x60\xa3\x56\x3e\x63\xa9\x7b\x30\x19\x34\x82\\n\x24\x84\xb8\x07\xb5\xf7\x81\x82\x70\x2c\x74\x08\x04\xc3\x14\xce\\n\x58\xe8\x7c\xdd\xbd\xe7\xe6\xfe\x5f\x6e\x73\xcf\x81\xff\x8e\xb4\\n\xac\x54\xc5\xc8\xe4\x96\x44\x65\x0d\x61\x1c\xe8\x75\x29\xe7\x15\\n\xe5\x16\x64\xd7\x4a\x46\x8f\x11\xd1\x76\x01\x55\x99\xd9\xce\x1f\\n\xa9\xb2\x00\xbc\x09\x14\x15\x7d\x72\x23\x5d\x90\x41\x85\x30\x10\\n\x02\x39\xb4\x12\xd1\x15\x5b\xa2\x21\x60\xa4\xaf\x97\x05\x39\x00\\n\xbd\x44\x82\x73\x56\x22\x72\xef\x46\xb8\x8d\x99\x29\x0c\xa3\xb5\\n\x33\x60\x4a\x95\xc5\x6c\x2a\x7e\x02\x10\x68\x58\xaa\xac\x01\x6f\\n\x5d\xef\x81\x59\xb7\xc3\x01\xac\x44\xe4\xbe\x5e\xad\xce\x01\x15\\n\x11\xd6\xed\xfd\x86\x00\xc2\x98\x40\xf1\x62\x23\xf6\xe0\x76\xb8\\n\xcd\xe5\xa6\x71\x07\x14\x81\xf1\x76\x01\xe8\x53\x78\xf1\x2a\xbc\\n\x89\x67\xa0\xdf\x5e\x04\x9d\x4e\x9b\xe9\x9c\x3a\x9d\xe9\x84\x95\\n\x8c\x4b\xa7\x7a\xa0\x53\xf1\x37\xf0\x05\x7c\x01\x5f\xc0\x17\xf0\\n\x05\x7c\x01\x5f\xc0\xb1\x1f\x70\xfa\xcf\x7f\x4a\xf3\x0b\x94\xa5\\n\xa9\x53\xf1\x90\x01\xa0\xfc\x8d\x80\xde\x2a\x84\xcd\x4c\x61\xd8\\n\xab\xe4\xc9\xf4\xd5\x28\x10\x16\x28\xb5\x0b\x68\x60\x0f\x08\xa1\\n\xb5\xf3\xe9\xad\xec\x88\x17\xe1\xdd\x74\x9d\x01\x3d\x75\xd1\x5d\\n\x7b\xbf\x65\x30\x31\x33\x37\xfb\xa0\xcb\x40\x05\x28\x82\x3e\xba\\n\x13\x2f\x43\x7c\x0e\x26\x3d\x0a\xfb\xd9\x44\x6c\xb5\x6d\x30\xb1\\n\x25\x8c\x74\x7e\xfe\xab\x6f\x9f\x00\xfa\xdc\x11\xa0\x2c\x50\x52\\n\x95\x1d\x2b\x15\x3b\x75\xe9\xce\x3f\xc2\x07\xd1\xbc\x75\x94\xcf\\n\xbc\x8d\xf9\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x02\x00\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x7d\x49\x44\\n\x41\x54\x58\x85\xed\x97\x3b\x4e\x02\x51\x14\x86\xbf\x83\x28\x3e\\n\x17\xa0\x6e\x41\x4d\x48\x78\x44\x9d\x71\x15\x5a\xfa\x8a\xb1\xd0\\n\x0e\x48\x74\x0d\x36\x60\xa3\x56\x3e\x63\xa9\x7b\x30\x19\x34\x82\\n\x24\x84\xb8\x07\xb5\xf7\x81\x82\x70\x2c\x74\x08\x04\xc3\x14\xce\\n\x58\xe8\x7c\xdd\xbd\xe7\xe6\xfe\x5f\x6e\x73\xcf\x81\xff\x8e\xb4\\n\xac\x54\xc5\xc8\xe4\x96\x44\x65\x0d\x61\x1c\xe8\x75\x29\xe7\x15\\n\xe5\x16\x64\xd7\x4a\x46\x8f\x11\xd1\x76\x01\x55\x99\xd9\xce\x1f\\n\xa9\xb2\x00\xbc\x09\x14\x15\x7d\x72\x23\x5d\x90\x41\x85\x30\x10\\n\x02\x39\xb4\x12\xd1\x15\x5b\xa2\x21\x60\xa4\xaf\x97\x05\x39\x00\\n\xbd\x44\x82\x73\x56\x22\x72\xef\x46\xb8\x8d\x99\x29\x0c\xa3\xb5\\n\x33\x60\x4a\x95\xc5\x6c\x2a\x7e\x02\x10\x68\x58\xaa\xac\x01\x6f\\n\x5d\xef\x81\x59\xb7\xc3\x01\xac\x44\xe4\xbe\x5e\xad\xce\x01\x15\\n\x11\xd6\xed\xfd\x86\x00\xc2\x98\x40\xf1\x62\x23\xf6\xe0\x76\xb8\\n\xcd\xe5\xa6\x71\x07\x14\x81\xf1\x76\x01\xe8\x53\x78\xf1\x2a\xbc\\n\x89\x67\xa0\xdf\x5e\x04\x9d\x4e\x9b\xe9\x9c\x3a\x9d\xe9\x84\x95\\n\x8c\x4b\xa7\x7a\xa0\x53\xf1\x37\xf0\x05\x7c\x01\x5f\xc0\x17\xf0\\n\x05\x7c\x01\x5f\xc0\xb1\x1f\x70\xfa\xcf\x7f\x4a\xf3\x0b\x94\xa5\\n\xa9\x53\xf1\x90\x01\xa0\xfc\x8d\x80\xde\x2a\x84\xcd\x4c\x61\xd8\\n\xab\xe4\xc9\xf4\xd5\x28\x10\x16\x28\xb5\x0b\x68\x60\x0f\x08\xa1\\n\xb5\xf3\xe9\xad\xec\x88\x17\xe1\xdd\x74\x9d\x01\x3d\x75\xd1\x5d\\n\x7b\xbf\x65\x30\x31\x33\x37\xfb\xa0\xcb\x40\x05\x28\x82\x3e\xba\\n\x13\x2f\x43\x7c\x0e\x26\x3d\x0a\xfb\xd9\x44\x6c\xb5\x6d\x30\xb1\\n\x25\x8c\x74\x7e\xfe\xab\x6f\x9f\x00\xfa\xdc\x11\xa0\x2c\x50\x52\\n\x95\x1d\x2b\x15\x3b\x75\xe9\xce\x3f\xc2\x07\xd1\xbc\x75\x94\xcf\\n\xbc\x8d\xf9\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x03\xa5\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x22\x49\x44\\n\x41\x54\x58\x85\xed\x96\x4d\x6c\x54\x55\x14\xc7\x7f\xe7\x0d\xa9\\n\x09\xcc\x90\x50\x76\xb6\xc6\x60\x60\xe3\xa3\x86\x34\xf4\xc3\xc6\\n\x67\xa4\x1b\xa2\x98\x40\x13\x5d\xc9\x1a\x36\xda\x84\x7e\x59\x5c\\n\xcd\xce\x3a\xa4\x33\x09\xcb\xae\x65\x83\x89\x19\x4c\x04\xc3\xc6\\n\x3a\x98\xb4\x6f\x22\x62\x4b\x27\xc6\x34\xac\x9c\x06\x37\x94\x74\\n\x98\x92\x50\x3a\xef\xef\xe2\x4d\xa7\x35\x99\xe9\xcc\x43\x76\xf4\\n\xbf\xba\xe7\xbd\x73\xef\xf9\xdd\x73\xee\x17\xec\x69\x4f\xaf\xba\\n\x2c\x8a\xb3\x9b\x2c\xb4\x1d\x4e\xac\x0f\xc9\x38\x07\xea\x06\x3a\\n\xaa\xbf\x8a\x88\xdf\xcd\x2c\xfb\xa8\x74\x20\x5b\x48\xba\x1b\x2f\\n\x1d\xc0\xcb\xcc\x7f\x82\x2c\x05\x1c\x01\xbb\x8f\x34\x8b\x43\x11\\n\xc0\xa4\x0e\xe1\x9c\x02\x75\x61\x3c\x30\x6c\x22\x77\xa9\xf7\xfb\\n\x97\x02\xf0\xe9\xf5\xeb\xb1\x7f\x56\xde\x4c\x21\x46\x80\x9f\x24\\n\x26\x7f\x1d\xed\x5b\xa8\xe7\x3b\x90\xc9\x9f\x88\x05\x9a\xc2\x38\\n\x0d\x5c\xb9\x53\xea\x9d\x24\x69\x41\xab\x93\xac\x2b\x2f\xe3\x4f\\n\x7b\x69\xbf\xf2\x7e\x66\x7e\xac\xe5\x3e\x69\x7f\xdc\x4b\xfb\x15\\n\x2f\xed\xa7\x9a\xf9\xee\x9a\x81\x6a\xda\xbf\x33\x6c\x2c\x37\xd2\\n\x3b\x0d\xf0\xe1\xd5\xe5\xd7\x9e\x3c\x7f\x7c\xd1\xe0\x33\x59\xd0\\n\x15\x0e\x62\x8b\x18\xd7\xe2\xb1\xf6\x99\x5b\xc3\xc7\x9e\x55\xc1\\n\x27\x10\xdf\x60\x0c\xdd\xb9\xd4\x97\x8d\x0c\xe0\x26\x0b\x6d\xed\\n\x07\xcb\x7f\x1a\xfa\x2b\x37\xd2\xff\x11\xc0\x07\x57\xe7\x3b\x2b\\n\x9b\xce\x4d\x50\x17\x58\x00\x72\xaa\xc3\x84\x6d\x63\x31\x16\xd3\\n\x99\xd9\xe1\xfe\x22\xc0\x7b\x99\xfc\x6d\x93\x8e\xac\x96\xe2\x6e\\n\xa3\x85\xe9\x34\x02\x38\x9c\x58\x1f\x02\xde\x0a\x64\x97\xb7\x66\\n\x5e\xd9\x74\x6e\x62\x3a\x1e\x7a\x68\x47\xdf\x5a\xbb\xab\xb2\xc9\\n\x8f\x6e\xb2\xd0\x06\xe0\x04\xf6\x25\x70\xf4\x50\xa2\x7c\xb6\x51\\n\x9c\x86\x00\xe1\x56\x63\x61\x6b\xc1\x95\x2b\xab\x17\x40\x5d\x68\\n\x97\xb2\x09\x03\x7b\xa7\xfd\x60\xf9\x02\x40\x6e\xb4\xe7\x9e\xc4\\n\x92\x41\x74\x00\x50\xb7\xa1\x5f\x6a\x66\x60\xe7\xc3\x54\xef\x2e\\n\x41\x00\x9c\xdf\xb2\x0d\x7e\xc6\x38\xf9\x02\x00\xbc\x2e\xac\x58\\n\xb3\x4c\xee\x7f\xd3\x5e\x5f\x06\x0e\xc8\xdd\x01\xb4\xc2\xf6\x81\\n\x15\x09\x00\x2c\xda\x49\x59\x37\x80\x99\x11\x66\x25\x32\xc0\x43\\n\x02\x3a\x6b\x96\xac\xd0\x6a\x09\x24\x96\xb6\x6d\x75\x00\x0f\xa3\\n\x03\x88\xdf\x04\xa7\xb6\x3d\xf5\x6d\xab\x25\x30\xb3\x6b\x3b\x3e\\n\x0d\x02\xf9\xc8\x00\x66\x96\x35\xe3\xf8\x40\x26\x7f\x02\x20\x1e\\n\x6b\x9f\xc1\x58\xc4\xd0\x2e\xd1\x25\xe3\x8f\xd5\x52\x7c\x06\xc0\\n\xcb\xcc\x75\x03\x6f\x63\xfa\x21\x32\xc0\xa3\xd2\x81\x2c\xc6\x83\\n\x58\xa0\x29\x80\x5b\xc3\xc7\x9e\xc5\x62\x3a\x03\xdc\xaf\x46\xab\\n\x95\xa3\xba\xf2\x11\x2c\x54\x54\xf9\xb8\x90\x74\x37\x90\x0c\x39\\n\x29\x60\xf9\xe9\xfe\x7d\x37\x22\x03\x14\x92\xee\x86\xc4\x38\xc6\\n\x69\x2f\xed\x8f\x03\xcc\x0e\xf7\x17\x57\xd7\xe2\x3d\xc0\x17\x52\\n\x90\x07\xd6\x81\x75\xa4\xbc\x99\x3e\x7f\xbc\x16\xef\x9b\x1b\x19\\n\x58\x01\xf0\xd2\xfe\x24\x30\x68\x0a\xc6\xee\x5e\x3c\xf9\xbc\x51\\n\x9c\xa6\xf2\xd2\x7e\xaa\x7a\xb1\x8c\xb7\xd4\x41\x32\x6f\x7a\xfe\\n\x72\x78\x81\xf9\x53\xcd\xdc\x9b\x6f\xb3\xa4\x1c\x2f\x91\xff\x1a\\n\x63\x02\xb8\x6d\x72\x26\x73\xa3\x3d\xf7\xea\xc2\x66\xe6\xba\xab\\n\x69\x1f\x34\x23\x95\x5b\xeb\xfd\xaa\xd9\x75\x1c\xe1\x41\xe2\x9f\\n\x43\x5c\x01\x8e\x4a\x2c\x99\x31\x8b\xf1\x37\x00\xe2\x0d\xc2\x1d\\n\xe3\x02\xcb\xa6\x60\x2c\x37\xfa\x6e\xc3\x85\xf7\x42\x00\x10\xde\\n\x90\x87\x12\xe5\xb3\x54\x9f\x64\x86\x75\x86\xf1\x55\x34\xd9\x5d\\n\x1c\x65\x9f\xee\xdf\x77\xe3\x7f\xd5\x7c\x4f\x7b\x7a\xe5\xf4\x2f\\n\x95\x3f\x47\xac\x6d\xe5\x30\x73\x00\x00\x00\x00\x49\x45\x4e\x44\\n\xae\x42\x60\x82\\n\x00\x00\x03\xa5\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x03\x22\x49\x44\\n\x41\x54\x58\x85\xed\x96\x4d\x6c\x54\x55\x14\xc7\x7f\xe7\x0d\xa9\\n\x09\xcc\x90\x50\x76\xb6\xc6\x60\x60\xe3\xa3\x86\x34\xf4\xc3\xc6\\n\x67\xa4\x1b\xa2\x98\x40\x13\x5d\xc9\x1a\x36\xda\x84\x7e\x59\x5c\\n\xcd\xce\x3a\xa4\x33\x09\xcb\xae\x65\x83\x89\x19\x4c\x04\xc3\xc6\\n\x3a\x98\xb4\x6f\x22\x62\x4b\x27\xc6\x34\xac\x9c\x06\x37\x94\x74\\n\x98\x92\x50\x3a\xef\xef\xe2\x4d\xa7\x35\x99\xe9\xcc\x43\x76\xf4\\n\xbf\xba\xe7\xbd\x73\xef\xf9\xdd\x73\xee\x17\xec\x69\x4f\xaf\xba\\n\x2c\x8a\xb3\x9b\x2c\xb4\x1d\x4e\xac\x0f\xc9\x38\x07\xea\x06\x3a\\n\xaa\xbf\x8a\x88\xdf\xcd\x2c\xfb\xa8\x74\x20\x5b\x48\xba\x1b\x2f\\n\x1d\xc0\xcb\xcc\x7f\x82\x2c\x05\x1c\x01\xbb\x8f\x34\x8b\x43\x11\\n\xc0\xa4\x0e\xe1\x9c\x02\x75\x61\x3c\x30\x6c\x22\x77\xa9\xf7\xfb\\n\x97\x02\xf0\xe9\xf5\xeb\xb1\x7f\x56\xde\x4c\x21\x46\x80\x9f\x24\\n\x26\x7f\x1d\xed\x5b\xa8\xe7\x3b\x90\xc9\x9f\x88\x05\x9a\xc2\x38\\n\x0d\x5c\xb9\x53\xea\x9d\x24\x69\x41\xab\x93\xac\x2b\x2f\xe3\x4f\\n\x7b\x69\xbf\xf2\x7e\x66\x7e\xac\xe5\x3e\x69\x7f\xdc\x4b\xfb\x15\\n\x2f\xed\xa7\x9a\xf9\xee\x9a\x81\x6a\xda\xbf\x33\x6c\x2c\x37\xd2\\n\x3b\x0d\xf0\xe1\xd5\xe5\xd7\x9e\x3c\x7f\x7c\xd1\xe0\x33\x59\xd0\\n\x15\x0e\x62\x8b\x18\xd7\xe2\xb1\xf6\x99\x5b\xc3\xc7\x9e\x55\xc1\\n\x27\x10\xdf\x60\x0c\xdd\xb9\xd4\x97\x8d\x0c\xe0\x26\x0b\x6d\xed\\n\x07\xcb\x7f\x1a\xfa\x2b\x37\xd2\xff\x11\xc0\x07\x57\xe7\x3b\x2b\\n\x9b\xce\x4d\x50\x17\x58\x00\x72\xaa\xc3\x84\x6d\x63\x31\x16\xd3\\n\x99\xd9\xe1\xfe\x22\xc0\x7b\x99\xfc\x6d\x93\x8e\xac\x96\xe2\x6e\\n\xa3\x85\xe9\x34\x02\x38\x9c\x58\x1f\x02\xde\x0a\x64\x97\xb7\x66\\n\x5e\xd9\x74\x6e\x62\x3a\x1e\x7a\x68\x47\xdf\x5a\xbb\xab\xb2\xc9\\n\x8f\x6e\xb2\xd0\x06\xe0\x04\xf6\x25\x70\xf4\x50\xa2\x7c\xb6\x51\\n\x9c\x86\x00\xe1\x56\x63\x61\x6b\xc1\x95\x2b\xab\x17\x40\x5d\x68\\n\x97\xb2\x09\x03\x7b\xa7\xfd\x60\xf9\x02\x40\x6e\xb4\xe7\x9e\xc4\\n\x92\x41\x74\x00\x50\xb7\xa1\x5f\x6a\x66\x60\xe7\xc3\x54\xef\x2e\\n\x41\x00\x9c\xdf\xb2\x0d\x7e\xc6\x38\xf9\x02\x00\xbc\x2e\xac\x58\\n\xb3\x4c\xee\x7f\xd3\x5e\x5f\x06\x0e\xc8\xdd\x01\xb4\xc2\xf6\x81\\n\x15\x09\x00\x2c\xda\x49\x59\x37\x80\x99\x11\x66\x25\x32\xc0\x43\\n\x02\x3a\x6b\x96\xac\xd0\x6a\x09\x24\x96\xb6\x6d\x75\x00\x0f\xa3\\n\x03\x88\xdf\x04\xa7\xb6\x3d\xf5\x6d\xab\x25\x30\xb3\x6b\x3b\x3e\\n\x0d\x02\xf9\xc8\x00\x66\x96\x35\xe3\xf8\x40\x26\x7f\x02\x20\x1e\\n\x6b\x9f\xc1\x58\xc4\xd0\x2e\xd1\x25\xe3\x8f\xd5\x52\x7c\x06\xc0\\n\xcb\xcc\x75\x03\x6f\x63\xfa\x21\x32\xc0\xa3\xd2\x81\x2c\xc6\x83\\n\x58\xa0\x29\x80\x5b\xc3\xc7\x9e\xc5\x62\x3a\x03\xdc\xaf\x46\xab\\n\x95\xa3\xba\xf2\x11\x2c\x54\x54\xf9\xb8\x90\x74\x37\x90\x0c\x39\\n\x29\x60\xf9\xe9\xfe\x7d\x37\x22\x03\x14\x92\xee\x86\xc4\x38\xc6\\n\x69\x2f\xed\x8f\x03\xcc\x0e\xf7\x17\x57\xd7\xe2\x3d\xc0\x17\x52\\n\x90\x07\xd6\x81\x75\xa4\xbc\x99\x3e\x7f\xbc\x16\xef\x9b\x1b\x19\\n\x58\x01\xf0\xd2\xfe\x24\x30\x68\x0a\xc6\xee\x5e\x3c\xf9\xbc\x51\\n\x9c\xa6\xf2\xd2\x7e\xaa\x7a\xb1\x8c\xb7\xd4\x41\x32\x6f\x7a\xfe\\n\x72\x78\x81\xf9\x53\xcd\xdc\x9b\x6f\xb3\xa4\x1c\x2f\x91\xff\x1a\\n\x63\x02\xb8\x6d\x72\x26\x73\xa3\x3d\xf7\xea\xc2\x66\xe6\xba\xab\\n\x69\x1f\x34\x23\x95\x5b\xeb\xfd\xaa\xd9\x75\x1c\xe1\x41\xe2\x9f\\n\x43\x5c\x01\x8e\x4a\x2c\x99\x31\x8b\xf1\x37\x00\xe2\x0d\xc2\x1d\\n\xe3\x02\xcb\xa6\x60\x2c\x37\xfa\x6e\xc3\x85\xf7\x42\x00\x10\xde\\n\x90\x87\x12\xe5\xb3\x54\x9f\x64\x86\x75\x86\xf1\x55\x34\xd9\x5d\\n\x1c\x65\x9f\xee\xdf\x77\xe3\x7f\xd5\x7c\x4f\x7b\x7a\xe5\xf4\x2f\\n\x95\x3f\x47\xac\x6d\xe5\x30\x73\x00\x00\x00\x00\x49\x45\x4e\x44\\n\xae\x42\x60\x82\\n\x00\x00\x01\xec\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\\n\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\\n\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\\n\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\\n\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\\n\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x01\x69\x49\x44\\n\x41\x54\x58\x85\xed\x97\xcd\x4a\xc3\x40\x14\x46\xcf\x4d\x83\x5a\\n\x7f\x1e\x40\x7d\x05\x2b\x74\xeb\x73\xd8\x5d\xed\x98\x88\x82\xbe\\n\x8f\x0a\x85\x26\x99\x92\x65\x7d\x0c\xd7\xa5\xf8\x0e\xea\xde\x7f\\n\x4b\x7b\x5d\x68\x4a\x89\xcd\x46\xa6\x54\x34\xdf\x6e\x66\x2e\x39\\n\x67\x66\x98\x21\x03\xff\x3d\x92\x6f\x07\xc6\x1c\x02\xa7\x40\x0d\\n\x58\x71\xc4\x79\x05\x6e\x44\xe4\x22\x4a\x12\x0b\xe8\x2c\x01\x09\\n\x8c\x49\x80\x16\xf0\x06\xf4\x81\x47\x47\x02\xeb\x40\x1d\x58\x06\\n\xe2\xd8\xda\xa3\x4c\x62\x22\x10\x18\x13\x00\x91\xc0\xb5\x3f\x1a\\n\x35\xda\x69\x7a\xe7\x08\x0e\xc0\x49\xb3\xb9\x39\xf4\xbc\x1e\x22\\n\x7b\x02\x26\xb2\xb6\x0b\xe0\x4d\xd5\x9c\x02\x6f\x63\x91\x7d\xd7\\n\x70\x80\x76\x9a\xde\x89\xef\x37\x80\x77\x15\x39\xcb\xfa\xa7\x05\\n\x76\x80\x7e\x92\x24\xf7\xae\xe1\x59\xa2\x28\xba\x45\xa4\x8f\x6a\\n\x6d\x96\x40\x15\xd5\xe7\x79\xc1\x27\x19\x8f\x9f\x80\xd5\x59\x02\\n\x0b\x49\x29\xb0\x70\x01\xbf\x68\x20\x30\x46\x8b\xc6\x7e\x92\xd8\\n\xda\xfc\xad\x0b\xfc\x82\x15\x28\x05\x4a\x81\x52\xa0\xf0\x1e\x28\\n\x3a\xb7\xae\xb3\xf0\x15\x28\x05\x7e\x95\xc0\x0b\x22\xab\x85\x95\\n\xce\x88\xde\x1a\xf0\xf2\x4d\x40\xe1\x06\xa8\x9f\x34\x9b\x9b\xf3\\n\x62\xb7\x5a\xad\x6d\x54\xeb\xc0\xe0\x9b\x80\x27\x72\x09\x2c\x0f\\n\x2b\x95\xab\x30\x0c\xb7\xe6\x01\xaf\x88\xf4\x80\x25\x15\xb9\xc8\\n\xfa\xf3\x0f\x93\x0e\x10\x00\xef\x5f\x7f\xaf\x0f\x4e\xe8\x22\x1b\\n\x5f\x33\x5f\x52\xe8\x24\xd6\x1e\x93\x7f\x98\x64\xa5\xa1\x31\x07\\n\x2a\x72\x86\xea\x2e\x50\x75\x22\xf0\xb9\xe7\x03\x54\xcf\xe3\x6e\\n\x37\x75\xf4\xcd\x3f\x92\x0f\xe2\x9e\x6a\x27\x2a\x1c\x88\x2a\x00\\n\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\\n\x00\x00\x00\x93\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x02\x62\x4b\x47\x44\x00\xd3\xb5\x57\xa0\x5c\x00\x00\\n\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\\n\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x0b\x07\x0c\\n\x0c\x2b\x4a\x3c\x30\x74\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\\n\x63\x60\x40\x05\xff\xff\xc3\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\\n\xc5\x70\x0e\x23\x23\x9c\xc3\xc8\x88\x61\x1a\x0a\x00\x00\x9e\x14\\n\x0a\x05\x2b\xca\xe5\x75\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x00\x93\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x02\x62\x4b\x47\x44\x00\xd3\xb5\x57\xa0\x5c\x00\x00\\n\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\\n\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x0b\x07\x0c\\n\x0c\x2b\x4a\x3c\x30\x74\x00\x00\x00\x24\x49\x44\x41\x54\x08\xd7\\n\x63\x60\x40\x05\xff\xff\xc3\x58\x4c\xc8\x5c\x26\x64\x59\x26\x64\\n\xc5\x70\x0e\x23\x23\x9c\xc3\xc8\x88\x61\x1a\x0a\x00\x00\x9e\x14\\n\x0a\x05\x2b\xca\xe5\x75\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\\n\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1d\x00\xb0\\n\xd5\x35\xa3\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x06\xfe\x9f\x67\x60\x60\x42\x30\xa1\x1c\x08\x93\x81\x81\x09\xc1\\n\x64\x60\x60\x62\x60\x60\x34\x44\xe2\x20\x73\x19\x90\x8d\x40\x02\\n\x00\x64\x40\x09\x75\x86\xb3\xad\x9c\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n\x00\x00\x00\xa6\\n\x89\\n\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\\n\x00\x00\x06\x00\x00\x00\x09\x08\x04\x00\x00\x00\xbb\x93\x95\x16\\n\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\\n\x02\x62\x4b\x47\x44\x00\xff\x87\x8f\xcc\xbf\x00\x00\x00\x09\x70\\n\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\\n\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xdc\x08\x17\x14\x1d\x00\xb0\\n\xd5\x35\xa3\x00\x00\x00\x2a\x49\x44\x41\x54\x08\xd7\x63\x60\xc0\\n\x06\xfe\x9f\x67\x60\x60\x42\x30\xa1\x1c\x08\x93\x81\x81\x09\xc1\\n\x64\x60\x60\x62\x60\x60\x34\x44\xe2\x20\x73\x19\x90\x8d\x40\x02\\n\x00\x64\x40\x09\x75\x86\xb3\xad\x9c\x00\x00\x00\x00\x49\x45\x4e\\n\x44\xae\x42\x60\x82\\n"

3802 
	=qt_resource_name
 = "\\n\x00\x09\\n\x09\x5f\x97\x13\\n\x00\x71\\n\x00\x73\x00\x73\x00\x5f\x00\x69\x00\x63\x00\x6f\x00\x6e\x00\x73\\n\x00\x0a\\n\x09\x24\x4d\x25\\n\x00\x71\\n\x00\x64\x00\x61\x00\x72\x00\x6b\x00\x73\x00\x74\x00\x79\x00\x6c\x00\x65\\n\x00\x09\\n\x0c\x78\x54\x88\\n\x00\x6e\\n\x00\x65\x00\x77\x00\x50\x00\x72\x00\x65\x00\x66\x00\x69\x00\x78\\n\x00\x02\\n\x00\x00\x07\x83\\n\x00\x72\\n\x00\x63\\n\x00\x11\\n\x0a\xe5\x6c\x07\\n\x00\x72\\n\x00\x61\x00\x64\x00\x69\x00\x6f\x00\x5f\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\\n\x00\x09\\n\x06\x98\x83\x27\\n\x00\x63\\n\x00\x6c\x00\x6f\x00\x73\x00\x65\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x11\\n\x08\x8c\x6a\xa7\\n\x00\x48\\n\x00\x73\x00\x65\x00\x70\x00\x61\x00\x72\x00\x74\x00\x6f\x00\x6f\x00\x6c\x00\x62\x00\x61\x00\x72\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\\n\x00\x1a\\n\x01\x21\xeb\x47\\n\x00\x73\\n\x00\x74\x00\x79\x00\x6c\x00\x65\x00\x73\x00\x68\x00\x65\x00\x65\x00\x74\x00\x2d\x00\x62\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x68\\n\x00\x2d\x00\x6d\x00\x6f\x00\x72\x00\x65\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0a\\n\x05\x95\xde\x27\\n\x00\x75\\n\x00\x6e\x00\x64\x00\x6f\x00\x63\x00\x6b\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x13\\n\x08\xc8\x96\xe7\\n\x00\x72\\n\x00\x61\x00\x64\x00\x69\x00\x6f\x00\x5f\x00\x75\x00\x6e\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x2e\x00\x70\\n\x00\x6e\x00\x67\\n\x00\x15\\n\x0f\xf3\xc0\x07\\n\x00\x75\\n\x00\x70\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x5f\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x64\\n\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x1f\\n\x0a\xae\x27\x47\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x75\x00\x6e\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\\n\x00\x64\x00\x5f\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0f\\n\x0c\xe2\x68\x67\\n\x00\x74\\n\x00\x72\x00\x61\x00\x6e\x00\x73\x00\x70\x00\x61\x00\x72\x00\x65\x00\x6e\x00\x74\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x16\\n\x01\x75\xcc\x87\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x75\x00\x6e\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\\n\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x14\\n\x0b\xc5\xd7\xc7\\n\x00\x73\\n\x00\x74\x00\x79\x00\x6c\x00\x65\x00\x73\x00\x68\x00\x65\x00\x65\x00\x74\x00\x2d\x00\x76\x00\x6c\x00\x69\x00\x6e\x00\x65\x00\x2e\\n\x00\x70\x00\x6e\x00\x67\\n\x00\x11\\n\x08\x90\x94\x67\\n\x00\x63\\n\x00\x6c\x00\x6f\x00\x73\x00\x65\x00\x2d\x00\x70\x00\x72\x00\x65\x00\x73\x00\x73\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\\n\x00\x14\\n\x07\xec\xd1\xc7\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x2e\\n\x00\x70\x00\x6e\x00\x67\\n\x00\x0e\\n\x0e\xde\xfa\xc7\\n\x00\x6c\\n\x00\x65\x00\x66\x00\x74\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x12\\n\x07\x8f\x9d\x27\\n\x00\x62\\n\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x68\x00\x5f\x00\x6f\x00\x70\x00\x65\x00\x6e\x00\x2d\x00\x6f\x00\x6e\x00\x2e\x00\x70\x00\x6e\\n\x00\x67\\n\x00\x0f\\n\x02\x9f\x05\x87\\n\x00\x72\\n\x00\x69\x00\x67\x00\x68\x00\x74\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0e\\n\x04\xa2\xfc\xa7\\n\x00\x64\\n\x00\x6f\x00\x77\x00\x6e\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x11\\n\x08\xc4\x6a\xa7\\n\x00\x56\\n\x00\x73\x00\x65\x00\x70\x00\x61\x00\x72\x00\x74\x00\x6f\x00\x6f\x00\x6c\x00\x62\x00\x61\x00\x72\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\\n\x00\x19\\n\x08\x3e\xcc\x07\\n\x00\x73\\n\x00\x74\x00\x79\x00\x6c\x00\x65\x00\x73\x00\x68\x00\x65\x00\x65\x00\x74\x00\x2d\x00\x62\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x68\\n\x00\x2d\x00\x65\x00\x6e\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x1c\\n\x01\xe0\x4a\x07\\n\x00\x72\\n\x00\x61\x00\x64\x00\x69\x00\x6f\x00\x5f\x00\x75\x00\x6e\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x5f\x00\x64\\n\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x10\\n\x01\x07\x4a\xa7\\n\x00\x56\\n\x00\x6d\x00\x6f\x00\x76\x00\x65\x00\x74\x00\x6f\x00\x6f\x00\x6c\x00\x62\x00\x61\x00\x72\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x14\\n\x06\x5e\x2c\x07\\n\x00\x62\\n\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x68\x00\x5f\x00\x63\x00\x6c\x00\x6f\x00\x73\x00\x65\x00\x64\x00\x2d\x00\x6f\x00\x6e\x00\x2e\\n\x00\x70\x00\x6e\x00\x67\\n\x00\x0f\\n\x06\x53\x25\xa7\\n\x00\x62\\n\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x68\x00\x5f\x00\x6f\x00\x70\x00\x65\x00\x6e\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0c\\n\x06\x41\x40\x87\\n\x00\x73\\n\x00\x69\x00\x7a\x00\x65\x00\x67\x00\x72\x00\x69\x00\x70\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x10\\n\x01\x00\xca\xa7\\n\x00\x48\\n\x00\x6d\x00\x6f\x00\x76\x00\x65\x00\x74\x00\x6f\x00\x6f\x00\x6c\x00\x62\x00\x61\x00\x72\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x1c\\n\x08\x3f\xda\x67\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x75\x00\x6e\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\\n\x00\x64\x00\x5f\x00\x66\x00\x6f\x00\x63\x00\x75\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0f\\n\x01\xf4\x81\x47\\n\x00\x63\\n\x00\x6c\x00\x6f\x00\x73\x00\x65\x00\x2d\x00\x68\x00\x6f\x00\x76\x00\x65\x00\x72\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x18\\n\x03\x8e\xde\x67\\n\x00\x72\\n\x00\x69\x00\x67\x00\x68\x00\x74\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x5f\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\\n\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x1a\\n\x0e\xbc\xc3\x67\\n\x00\x72\\n\x00\x61\x00\x64\x00\x69\x00\x6f\x00\x5f\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x5f\x00\x64\x00\x69\x00\x73\\n\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x17\\n\x0c\xab\x51\x07\\n\x00\x64\\n\x00\x6f\x00\x77\x00\x6e\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x5f\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\\n\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x11\\n\x0b\xda\x30\xa7\\n\x00\x62\\n\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x68\x00\x5f\x00\x63\x00\x6c\x00\x6f\x00\x73\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\\n\x00\x1a\\n\x01\x87\xae\x67\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x69\x00\x6e\x00\x64\x00\x65\x00\x74\x00\x65\x00\x72\x00\x6d\\n\x00\x69\x00\x6e\x00\x61\x00\x74\x00\x65\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x23\\n\x06\xf2\x1a\x47\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x69\x00\x6e\x00\x64\x00\x65\x00\x74\x00\x65\x00\x72\x00\x6d\\n\x00\x69\x00\x6e\x00\x61\x00\x74\x00\x65\x00\x5f\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x70\\n\x00\x6e\x00\x67\\n\x00\x17\\n\x0c\x65\xce\x07\\n\x00\x6c\\n\x00\x65\x00\x66\x00\x74\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x5f\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\\n\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x19\\n\x0b\x59\x6e\x87\\n\x00\x72\\n\x00\x61\x00\x64\x00\x69\x00\x6f\x00\x5f\x00\x75\x00\x6e\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x5f\x00\x66\\n\x00\x6f\x00\x63\x00\x75\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x1a\\n\x05\x11\xe0\xe7\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x5f\\n\x00\x66\x00\x6f\x00\x63\x00\x75\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x17\\n\x0f\x1e\x9b\x47\\n\x00\x72\\n\x00\x61\x00\x64\x00\x69\x00\x6f\x00\x5f\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x5f\x00\x66\x00\x6f\x00\x63\\n\x00\x75\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x20\\n\x09\xd7\x1f\xa7\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x69\x00\x6e\x00\x64\x00\x65\x00\x74\x00\x65\x00\x72\x00\x6d\\n\x00\x69\x00\x6e\x00\x61\x00\x74\x00\x65\x00\x5f\x00\x66\x00\x6f\x00\x63\x00\x75\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x1d\\n\x09\x07\x81\x07\\n\x00\x63\\n\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x62\x00\x6f\x00\x78\x00\x5f\x00\x63\x00\x68\x00\x65\x00\x63\x00\x6b\x00\x65\x00\x64\x00\x5f\\n\x00\x64\x00\x69\x00\x73\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x0c\\n\x06\xe6\xe6\x67\\n\x00\x75\\n\x00\x70\x00\x5f\x00\x61\x00\x72\x00\x72\x00\x6f\x00\x77\x00\x2e\x00\x70\x00\x6e\x00\x67\\n\x00\x09\\n\x00\x28\xad\x23\\n\x00\x73\\n\x00\x74\x00\x79\x00\x6c\x00\x65\x00\x2e\x00\x71\x00\x73\x00\x73\\n\x00\x09\\n\x00\x28\xad\x03\\n\x00\x73\\n\x00\x74\x00\x79\x00\x6c\x00\x65\x00\x2e\x00\x71\x00\x72\x00\x63\\n"

4018 
	=qt_resource_struct
 = "\\n\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\\n\x00\x00\x00\x18\x00\x02\x00\x00\x00\x01\x00\x00\x00\x7f\\n\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x2d\\n\x00\x00\x00\x32\x00\x02\x00\x00\x00\x01\x00\x00\x00\x04\\n\x00\x00\x00\x4a\x00\x02\x00\x00\x00\x28\x00\x00\x00\x05\\n\x00\x00\x04\x50\x00\x00\x00\x00\x00\x01\x00\x00\x20\xb7\\n\x00\x00\x03\xba\x00\x00\x00\x00\x00\x01\x00\x00\x1e\x09\\n\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x01\x00\x00\x06\xae\\n\x00\x00\x01\xd4\x00\x00\x00\x00\x00\x01\x00\x00\x0f\xc8\\n\x00\x00\x05\xa4\x00\x00\x00\x00\x00\x01\x00\x00\x2b\x9a\\n\x00\x00\x03\x7c\x00\x00\x00\x00\x00\x01\x00\x00\x1b\x0d\\n\x00\x00\x04\xb4\x00\x00\x00\x00\x00\x01\x00\x00\x23\x7e\\n\x00\x00\x02\xd6\x00\x00\x00\x00\x00\x01\x00\x00\x18\x1d\\n\x00\x00\x04\xd8\x00\x00\x00\x00\x00\x01\x00\x00\x25\xd8\\n\x00\x00\x02\xfa\x00\x00\x00\x00\x00\x01\x00\x00\x18\xc1\\n\x00\x00\x06\x96\x00\x00\x00\x00\x00\x01\x00\x00\x32\xfd\\n\x00\x00\x00\xf6\x00\x00\x00\x00\x00\x01\x00\x00\x07\x68\\n\x00\x00\x04\x32\x00\x00\x00\x00\x00\x01\x00\x00\x20\x32\\n\x00\x00\x04\x0e\x00\x00\x00\x00\x00\x01\x00\x00\x1f\x88\\n\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x01\x00\x00\x1e\xf1\\n\x00\x00\x00\x7c\x00\x00\x00\x00\x00\x01\x00\x00\x03\xb0\\n\x00\x00\x07\x8a\x00\x00\x00\x00\x00\x01\x00\x00\x3c\x9f\\n\x00\x00\x05\xde\x00\x00\x00\x00\x00\x01\x00\x00\x2d\x8b\\n\x00\x00\x02\xac\x00\x00\x00\x00\x00\x01\x00\x00\x17\x83\\n\x00\x00\x02\x5c\x00\x00\x00\x00\x00\x01\x00\x00\x14\xe9\\n\x00\x00\x03\x44\x00\x00\x00\x00\x00\x01\x00\x00\x1a\x29\\n\x00\x00\x04\x76\x00\x00\x00\x00\x00\x01\x00\x00\x21\x97\\n\x00\x00\x00\x94\x00\x00\x00\x00\x00\x01\x00\x00\x05\xfe\\n\x00\x00\x02\x34\x00\x00\x00\x00\x00\x01\x00\x00\x12\x8f\\n\x00\x00\x03\x1c\x00\x00\x00\x00\x00\x01\x00\x00\x19\x6a\\n\x00\x00\x01\x10\x00\x00\x00\x00\x00\x01\x00\x00\x09\xae\\n\x00\x00\x07\x4a\x00\x00\x00\x00\x00\x01\x00\x00\x3a\xb0\\n\x00\x00\x07\x04\x00\x00\x00\x00\x00\x01\x00\x00\x38\xaa\\n\x00\x00\x01\x6c\x00\x00\x00\x00\x00\x01\x00\x00\x0d\x2d\\n\x00\x00\x00\x54\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\\n\x00\x00\x06\x5e\x00\x00\x00\x00\x00\x01\x00\x00\x30\x25\\n\x00\x00\x02\x06\x00\x00\x00\x00\x00\x01\x00\x00\x11\x9c\\n\x00\x00\x05\x7c\x00\x00\x00\x00\x00\x01\x00\x00\x2a\xf6\\n\x00\x00\x06\x2a\x00\x00\x00\x00\x00\x01\x00\x00\x2f\x7b\\n\x00\x00\x05\x48\x00\x00\x00\x00\x00\x01\x00\x00\x2a\x4c\\n\x00\x00\x01\xb0\x00\x00\x00\x00\x00\x01\x00\x00\x0f\x01\\n\x00\x00\x05\x0e\x00\x00\x00\x00\x00\x01\x00\x00\x26\x7c\\n\x00\x00\x02\x8a\x00\x00\x00\x00\x00\x01\x00\x00\x16\xd9\\n\x00\x00\x06\xd0\x00\x00\x00\x00\x00\x01\x00\x00\x35\x01\\n\x00\x00\x01\x3c\x00\x00\x00\x00\x00\x01\x00\x00\x0c\x8a\\n\x00\x00\x00\x4a\x00\x02\x00\x00\x00\x4f\x00\x00\x00\x30\\n\x00\x00\x07\xc0\x00\x01\x00\x00\x00\x01\x00\x00\x61\xb9\\n\x00\x00\x07\xa8\x00\x01\x00\x00\x00\x01\x00\x00\x4f\x7d\\n\x00\x00\x04\x50\x00\x00\x00\x00\x00\x01\x00\x00\x93\x6f\\n\x00\x00\x04\x50\x00\x00\x00\x00\x00\x01\x00\x00\x94\x4f\\n\x00\x00\x03\xba\x00\x00\x00\x00\x00\x01\x00\x00\x72\x7b\\n\x00\x00\x03\xba\x00\x00\x00\x00\x00\x01\x00\x00\x73\x63\\n\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x01\x00\x00\x7d\x49\\n\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x01\x00\x00\x7c\x8f\\n\x00\x00\x01\xd4\x00\x00\x00\x00\x00\x01\x00\x00\x7a\xbb\\n\x00\x00\x01\xd4\x00\x00\x00\x00\x00\x01\x00\x00\x78\xe7\\n\x00\x00\x05\xa4\x00\x00\x00\x00\x00\x01\x00\x00\x88\xfa\\n\x00\x00\x05\xa4\x00\x00\x00\x00\x00\x01\x00\x00\x87\x09\\n\x00\x00\x03\x7c\x00\x00\x00\x00\x00\x01\x00\x00\xb1\x93\\n\x00\x00\x03\x7c\x00\x00\x00\x00\x00\x01\x00\x00\xae\x97\\n\x00\x00\x04\xb4\x00\x00\x00\x00\x00\x01\x00\x00\x63\x8b\\n\x00\x00\x04\xb4\x00\x00\x00\x00\x00\x01\x00\x00\x65\xe5\\n\x00\x00\x02\xd6\x00\x00\x00\x00\x00\x01\x00\x00\x7e\xa7\\n\x00\x00\x02\xd6\x00\x00\x00\x00\x00\x01\x00\x00\x7e\x03\\n\x00\x00\x04\xd8\x00\x00\x00\x00\x00\x01\x00\x00\xbe\xd3\\n\x00\x00\x04\xd8\x00\x00\x00\x00\x00\x01\x00\x00\xbf\x77\\n\x00\x00\x02\xfa\x00\x00\x00\x00\x00\x01\x00\x00\xb6\x8c\\n\x00\x00\x02\xfa\x00\x00\x00\x00\x00\x01\x00\x00\xb5\xe3\\n\x00\x00\x06\x96\x00\x00\x00\x00\x00\x01\x00\x00\xcc\x51\\n\x00\x00\x06\x96\x00\x00\x00\x00\x00\x01\x00\x00\xce\x55\\n\x00\x00\x00\xf6\x00\x00\x00\x00\x00\x01\x00\x00\xc3\xc1\\n\x00\x00\x00\xf6\x00\x00\x00\x00\x00\x01\x00\x00\xc1\x7b\\n\x00\x00\x04\x32\x00\x00\x00\x00\x00\x01\x00\x00\x68\xc4\\n\x00\x00\x04\x32\x00\x00\x00\x00\x00\x01\x00\x00\x68\x3f\\n\x00\x00\x04\x0e\x00\x00\x00\x00\x00\x01\x00\x00\xa1\x83\\n\x00\x00\x04\x0e\x00\x00\x00\x00\x00\x01\x00\x00\xa2\x2d\\n\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x01\x00\x00\xd9\x9b\\n\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x01\x00\x00\xda\x32\\n\x00\x00\x00\x7c\x00\x00\x00\x00\x00\x01\x00\x00\x76\x99\\n\x00\x00\x00\x7c\x00\x00\x00\x00\x00\x01\x00\x00\x74\x4b\\n\x00\x00\x07\x8a\x00\x00\x00\x00\x00\x01\x00\x00\xad\x53\\n\x00\x00\x07\x8a\x00\x00\x00\x00\x00\x01\x00\x00\xad\xf5\\n\x00\x00\x05\xde\x00\x00\x00\x00\x00\x01\x00\x00\xd7\xab\\n\x00\x00\x02\xac\x00\x00\x00\x00\x00\x01\x00\x00\xc7\xe9\\n\x00\x00\x02\xac\x00\x00\x00\x00\x00\x01\x00\x00\xc7\x4f\\n\x00\x00\x02\x5c\x00\x00\x00\x00\x00\x01\x00\x00\x85\x19\\n\x00\x00\x02\x5c\x00\x00\x00\x00\x00\x01\x00\x00\x83\x29\\n\x00\x00\x03\x44\x00\x00\x00\x00\x00\x01\x00\x00\xab\x8b\\n\x00\x00\x03\x44\x00\x00\x00\x00\x00\x01\x00\x00\xac\x6f\\n\x00\x00\x04\x76\x00\x00\x00\x00\x00\x01\x00\x00\xca\x6a\\n\x00\x00\x04\x76\x00\x00\x00\x00\x00\x01\x00\x00\xc8\x83\\n\x00\x00\x00\x94\x00\x00\x00\x00\x00\x01\x00\x00\xc0\xcb\\n\x00\x00\x00\x94\x00\x00\x00\x00\x00\x01\x00\x00\xc0\x1b\\n\x00\x00\x02\x34\x00\x00\x00\x00\x00\x01\x00\x00\x95\x2f\\n\x00\x00\x02\x34\x00\x00\x00\x00\x00\x01\x00\x00\x97\x89\\n\x00\x00\x03\x1c\x00\x00\x00\x00\x00\x01\x00\x00\x6d\xb0\\n\x00\x00\x03\x1c\x00\x00\x00\x00\x00\x01\x00\x00\x6c\xf1\\n\x00\x00\x01\x10\x00\x00\x00\x00\x00\x01\x00\x00\xb7\x35\\n\x00\x00\x01\x10\x00\x00\x00\x00\x00\x01\x00\x00\xba\x11\\n\x00\x00\x07\x4a\x00\x00\x00\x00\x00\x01\x00\x00\x81\x3a\\n\x00\x00\x07\x4a\x00\x00\x00\x00\x00\x01\x00\x00\x7f\x4b\\n\x00\x00\x07\x04\x00\x00\x00\x00\x00\x01\x00\x00\x6e\x6f\\n\x00\x00\x07\x04\x00\x00\x00\x00\x00\x01\x00\x00\x70\x75\\n\x00\x00\x01\x6c\x00\x00\x00\x00\x00\x01\x00\x00\x69\x49\\n\x00\x00\x01\x6c\x00\x00\x00\x00\x00\x01\x00\x00\x6b\x1d\\n\x00\x00\x00\x54\x00\x00\x00\x00\x00\x01\x00\x00\xa2\xd7\\n\x00\x00\x00\x54\x00\x00\x00\x00\x00\x01\x00\x00\xa6\x87\\n\x00\x00\x06\x5e\x00\x00\x00\x00\x00\x01\x00\x00\x8c\x31\\n\x00\x00\x06\x5e\x00\x00\x00\x00\x00\x01\x00\x00\x8f\x09\\n\x00\x00\x02\x06\x00\x00\x00\x00\x00\x01\x00\x00\xbd\xe0\\n\x00\x00\x02\x06\x00\x00\x00\x00\x00\x01\x00\x00\xbc\xed\\n\x00\x00\x05\x7c\x00\x00\x00\x00\x00\x01\x00\x00\xc6\xab\\n\x00\x00\x05\x7c\x00\x00\x00\x00\x00\x01\x00\x00\xc6\x07\\n\x00\x00\x06\x2a\x00\x00\x00\x00\x00\x01\x00\x00\xb4\x8f\\n\x00\x00\x06\x2a\x00\x00\x00\x00\x00\x01\x00\x00\xb5\x39\\n\x00\x00\x05\x48\x00\x00\x00\x00\x00\x01\x00\x00\xaa\xe1\\n\x00\x00\x05\x48\x00\x00\x00\x00\x00\x01\x00\x00\xaa\x37\\n\x00\x00\x01\xb0\x00\x00\x00\x00\x00\x01\x00\x00\x91\xe1\\n\x00\x00\x01\xb0\x00\x00\x00\x00\x00\x01\x00\x00\x92\xa8\\n\x00\x00\x05\x0e\x00\x00\x00\x00\x00\x01\x00\x00\x99\xe3\\n\x00\x00\x05\x0e\x00\x00\x00\x00\x00\x01\x00\x00\x9d\xb3\\n\x00\x00\x02\x8a\x00\x00\x00\x00\x00\x01\x00\x00\xda\xc9\\n\x00\x00\x02\x8a\x00\x00\x00\x00\x00\x01\x00\x00\xdb\x73\\n\x00\x00\x06\xd0\x00\x00\x00\x00\x00\x01\x00\x00\xd0\x59\\n\x00\x00\x06\xd0\x00\x00\x00\x00\x00\x01\x00\x00\xd4\x02\\n\x00\x00\x01\x3c\x00\x00\x00\x00\x00\x01\x00\x00\x8b\x8e\\n\x00\x00\x01\x3c\x00\x00\x00\x00\x00\x01\x00\x00\x8a\xeb\\n\x00\x00\x07\xa8\x00\x01\x00\x00\x00\x01\x00\x00\x3d\x41\\n"

4149 def 
	$qInitResources
 ( ) :

4150 
QtCore
 . 
	`qRegisterResourceData
 ( 0x01 , 
qt_resource_struct
 , 
qt_resource_name
 , 
qt_resource_data
 ) 
	}

4152 def 
	$qCleanupResources
 ( ) :

4153 
QtCore
 . 
	`qUnregisterResourceData
 ( 0x01 , 
qt_resource_struct
 , 
qt_resource_name
 , 
qt_resource_data
 ) 
	}

4155 
	`qInitResources
 ( )


	@./CCNT_RX_TX.py

2 import 
	~socket

3 import 
	~time

4 import 
	~struct

5 import 
	~numpy

6 import 
	~pylab

7 import 
	~sys

8 import 
	~CCNT_test

9 from 
	~CCNT_test_unit
 import *

10 import 
	~Queue

11 import 
	~threading

14 
	=IP
 = "10.0.1.8"

15 
	=PORT
 = 5009

18 
	=buf_size
 = 4096

23 
	=dt
 = 
numpy
 . 
	`dtype
 ( 'uint32' )

26 
	=q
 = 
Queue
 . 
	`Queue
 ( )

28 
	=TF_I
 = 
CCNT_test
 . 
TF_index

30 
	=pF
 = 2047

31 
	=pS
 = 2047

33 
	=samp
 = 1

34 
	=CH
 = 1

36 
	=TF
 , 
	=TF_state
 , 
	=pF
 , 
	=pS
 , 
	=samp
 , 
	=CCNT
 , 
	=resizeDim
 = 
CCNT_test
 . 
	`set_CCNT
 ( 
pF
 = 
pF
 , 
pS
 = 
pS
 , 
CH
 = 
CH
 , 
samp
 = 
samp
 )

38 print "resizeDim" , 
resizeDim

39 
	=count
 = 0

41 
	=storedArray
 = 
numpy
 . 
	`zeros
 ( [ 
pF
 , 
pS
 , 
samp
 , 
CH
 ] , 
numpy
 . 
int32
 )

42 print "storedArray" , 
storedArray
 . 
shape

44 
	=header_max
 = 
TF

45 print 
header_max

48 def 
	$test_scanSize
 ( ) :

49 
	=temp
 = 1

50 for 
i
 in 
resizeDim
 :

51 
	=temp
 = 
i
 * 
temp

53 assert 
TF
 * 
temp
 == 
pF
 * 
pS
 * 
samp
 * 
CH

54 return 
temp
 
	}

56 def 
	$constructPayload
 ( ) :

58 
	=OS_0
 = 2

59 
	=OS_1
 = 3

60 
	=OS_2
 = 5

63 
	=OS0
 = 0b001

64 
	=OS1
 = 0b010

65 
	=OS2
 = 0b100

66 
	=OSI
 = 3

69 if 
OSI
 > 0 :

70 
	=OS_value
 = 
	`int
 ( 
numpy
 . 
	`log2
 ( 
OSI
 ) )

72 
	=OS_value
 = 
OSI

73 print "OS_valuen" , 
	`bin
 ( 
OS_value
 )

75 
	=Sx
 = 
numpy
 . 
	`int16
 ( 0x8000 )

76 
	=Sy
 = 
numpy
 . 
	`int16
 ( 0x8000 )

77 
	=sdx
 = 
numpy
 . 
	`int16
 ( 0x0000 )

78 
	=sdy
 = 
numpy
 . 
	`int16
 ( 31 )

79 
	=dx
 = 
numpy
 . 
	`int16
 ( 31 )

80 
	=dy
 = 
numpy
 . 
	`int16
 ( 0x0000 )

85 
	=DVAR
 = 0xff

87 
	=OS
 = ( ( 
OS_value
 & 
OS2
 ) >> 2 ) << 
OS_2
 | ( ( 
OS_value
 & 
OS1
 ) >> 1 ) << 
OS_1
 | ( 
OS_value
 & 
OS0
 ) << 
OS_0

88 print "OS" , 
OS

89 
	=XFER
 = 
CH
 << 16 | ( ( 
CH
 * 4 ) - 1 ) << 8

91 print "XFER" , 
XFER

94 print "CCNT" , 
CCNT

95 print "pF" , 
pF

101 assert 
	`abs
 ( 
Sx
 + 
sdx
 * 
pS
 ) <= 
	`abs
 ( 0x8000 )

103 assert 
	`abs
 ( 
Sx
 + 
dx
 * 
pF
 ) <= 
	`abs
 ( 0x8000 )

105 assert 
	`abs
 ( 
Sy
 + 
sdy
 * 
pS
 ) <= 
	`abs
 ( 0x8000 )

107 assert 
	`abs
 ( 
Sy
 + 
dy
 * 
pF
 ) <= 
	`abs
 ( 0x8000 )

110 
	=res
 = "%8x" % 0xa0aa

111 
	=res
 += "%8x" % 
Sx

112 
	=res
 += "%8x" % 
Sy

113 
	=res
 += "%8x" % 
sdx

114 
	=res
 += "%8x" % 
sdy

115 
	=res
 += "%8x" % 
dx

116 
	=res
 += "%8x" % 
dy

117 
	=res
 += "%8x" % 
pF

118 
	=res
 += "%8x" % 
pS

119 
	=res
 += "%8x" % 
samp

120 
	=res
 += "%8x" % 
CH

121 
	=res
 += "%8x" % 
DVAR

122 
	=res
 += "%8x" % 
OS

123 
	=res
 += "%8x" % 
XFER

124 
	=res
 += "%8x" % 
CCNT

127 return 
res
 
	}

130 def 
	$loop
 ( ) :

131 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

132 
sock
 . 
	`connect
 ( ( 
IP
 , 9930 ) )

135 
	=payload
 = 
	`constructPayload
 ( )

136 print 
payload

137 
sock
 . 
	`send
 ( 
payload
 )

138 
sock
 . 
	`close
 ( ) 
	}

142 def 
	$RX_loop
 ( ) :

144 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

145 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

146 
	=datacount
 = 
	`test_scanSize
 ( )

147 print 
datacount

148 
	=count
 = 0

154 
	=data
 = 
sock
 . 
	`recv
 ( 
buf_size
 )

158 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

159 if 
header
 [ 0 ] > 
header_max
 :

164 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

166 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

169 
	=Z
 = 
Copy
 >> 14

175 
	=xindex
 , 
	=sub_xindex
 , 
	=yindex
 , 
	=samp_index
 , 
	=sub_samp_index
 = 
	`TF_I
 ( 
TF
 , 
TF_state
 , 
pF
 = 
pF
 , 
pS
 = 
pS
 , 
samp
 = 
samp
 , 
CCNT
 = 
CCNT
 , 
header
 = 
header
 , 
resizeDim
 = 
resizeDim
 )

179 
	=sub_data_array
 = 
sim_data
 . 
	`test_reshape
 ( 
Z
 , 
CCNT
 , 
samp
 , 
CH
 , 
TF_state
 = 
TF_state
 ) 
	}

183 def 
	$dump_loop
 ( 
dump
 ) :

185 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

186 
sock
 . 
	`settimeout
 ( 3 )

187 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

188 
	=datacount
 = 
	`test_scanSize
 ( )

189 print "data count" , 
datacount

190 
	=count
 = 0

194 
	=Hmax
 = 0

198 
	=data
 = ( 
sock
 . 
	`recv
 ( 
buf_size
 ) )

199 
	=count
 = 
count
 + 1

200 except 
socket
 . 
error
 as 
msg
 :

201 
sock
 . 
	`close
 ( )

202 print "error" , 
msg

205 if not 
data
 :

208 
dump
 . 
	`append
 ( 
data
 )

209 
q
 . 
	`put
 ( 
data
 )

219 print "length of dump" , 
	`len
 ( 
dump
 )

220 print "queue maxsize" , 
q
 . 
	`qsize
 ( )

221 
sock
 . 
	`close
 ( )

224 return 
Hmax
 , 
count
 
	}

229 def 
	$sortToImage
 ( 
dump
 , 
datacount
 ) :

235 
	=header_dump
 = [ ]

236 
	=Hmax
 = 0

237 for 
i
 in 
	`range
 ( 
	`len
 ( 
dump
 ) ) :

239 
	=data
 = 
dump
 . 
	`pop
 ( - 1 )

240 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

241 
	=ping
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 8 )

242 
	=pong
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 12 )

244 
header_dump
 . 
	`append
 ( 
data
 )

246 if 
header
 [ 0 ] <= 
header_max
 :

250 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

252 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

256 
	=Z
 = 
Copy
 >> 14

258 
	=xindex
 , 
	=sub_xindex
 , 
	=yindex
 , 
	=samp_index
 , 
	=sub_samp_index
 = 
	`TF_I
 ( 
TF
 , 
TF_state
 , 
pF
 = 
pF
 , 
pS
 = 
pS
 , 
samp
 = 
samp
 , 
CCNT
 = 
CCNT
 , 
header
 = 
header
 , 
resizeDim
 = 
resizeDim
 )

264 
	=sub_data_array
 = 
sim_data
 . 
	`test_reshape
 ( 
Z
 , 
CCNT
 , 
samp
 , 
CH
 , 
TF_state
 = 
TF_state
 )

269 
	`put_inP
 ( 
storedArray
 , 
sub_data_array
 , 
xindex
 , 
sub_xindex
 , 
yindex
 , 
samp_index
 , 
sub_samp_index
 , 
TF_state
 , 
resizeDim
 )

271 
	=Hmax
 = 
Hmax
 + 1

273 print "Hmax" , 
Hmax

274 for 
k
 in 
	`range
 ( 
CH
 ) :

276 print 
storedArray
 [ : , : , : , 
k
 ] . 
	`mean
 ( )

277 
pylab
 . 
	`imshow
 ( 
numpy
 . 
	`average
 ( 
storedArray
 [ : , : , : , 
k
 ] , 
axis
 = 2 ) )

280 
pylab
 . 
	`colorbar
 ( )

281 
pylab
 . 
	`show
 ( ) 
	}

290 def 
	$get_data_from_q
 ( 
q
 , 
datacount
 ) :

296 
	=header_dump
 = [ ]

297 
	=Hmax
 = 0

300 
	=data
 = 
q
 . 
	`get
 ( )

301 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

302 
	=ping
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 8 )

303 
	=pong
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 12 )

305 
header_dump
 . 
	`append
 ( 
data
 )

307 if 
header
 [ 0 ] <= 
header_max
 :

311 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

313 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

317 
	=Z
 = 
Copy
 >> 14

319 
	=xindex
 , 
	=sub_xindex
 , 
	=yindex
 , 
	=samp_index
 , 
	=sub_samp_index
 = 
	`TF_I
 ( 
TF
 , 
TF_state
 , 
pF
 = 
pF
 , 
pS
 = 
pS
 , 
samp
 = 
samp
 , 
CCNT
 = 
CCNT
 , 
header
 = 
header
 , 
resizeDim
 = 
resizeDim
 )

325 
	=sub_data_array
 = 
sim_data
 . 
	`test_reshape
 ( 
Z
 , 
CCNT
 , 
samp
 , 
CH
 , 
TF_state
 = 
TF_state
 )

327 print 
header
 , 
ping
 , 
pong
 , 
xindex
 , 
sub_xindex
 , 
yindex
 , 
Z
 . 
	`max
 ( ) , 
Z
 . 
	`min
 ( ) , "\n"

330 
	`put_inP
 ( 
storedArray
 , 
sub_data_array
 , 
xindex
 , 
sub_xindex
 , 
yindex
 , 
samp_index
 , 
sub_samp_index
 , 
TF_state
 , 
resizeDim
 )

332 
	=Hmax
 = 
Hmax
 + 1

334 if 
header
 [ 0 ] == 
header_max
 :

335 break 
	}

344 if 
__name__
 == "__main__" :

346 
	`loop
 ( )

348 
	=dump
 = [ ]

350 
	=datacount
 = 
	`test_scanSize
 ( )

351 
	=Producer
 = 
threading
 . 
	`Thread
 ( 
target
 = 
dump_loop
 , 
args
 = ( 
dump
 , ) )

353 
	=Consumer
 = 
threading
 . 
	`Thread
 ( 
target
 = 
get_data_from_q
 , 
args
 = ( 
q
 , 
datacount
 ) )

354 
Consumer
 . 
	`start
 ( )

355 
Producer
 . 
	`start
 ( )

357 while 
Producer
 . 
	`is_alive
 ( ) :

358 
time
 . 
	`sleep
 ( 1 )

360 
	`sortToImage
 ( 
dump
 , 
datacount
 )

362 print "final length of dump" , 
	`len
 ( 
dump
 )


	@./SunpSurf.py

1 import 
	~scanobject

2 import 
	~Mfigure

3 import 
	~scipy.ndimage
 as 
nd

4 import 
	~numpy

7 from 
	~mayavi.mlab
 import *

9 
	=Scan
 = 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( "../data/SunP/7_14_SP10kvionMx8.scan" )

10 
	=EB
 = 
Scan
 . 
DisplayArray
 [ : , : , 1 ]

11 
	=EB
 = 
numpy
 . 
	`fliplr
 ( 
EB
 )

12 
	=Gaus
 = 
nd
 . 
	`gaussian_filter
 ( 
EB
 , 1 , 
order
 = 0 )

14 
	`surf
 ( 
Gaus
 * - 1e9 , 
warp_scale
 = 'auto' , 
colormap
 = "YlOrRd" , 
vmin
 = 0.1 , 
vmax
 = 100 )


	@./Sun_getDL2.py

1 import 
	~numpy
 as 
np

2 import 
	~scipy

3 import 
	~numpy.ma

4 import 
	~sys

5 
sys
 . 
path
 . 
	`append
 ( '/home/mightydev2/Mighty_EBIC_Python/src/' )

6 import 
	~os.path

7 import 
	~scanobject

8 import 
	~matplotlib.pyplot
 as 
plt

9 from 
	~scipy
 import 
stats

12 
	=directory
 = 
os
 . 
	`getcwd
 ( )

15 
	=Scan
 = 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( "../data/7_14_SP10kvionMx11.scan" )

16 
	=pro
 = 
Scan
 . 
profiles
 [ 0 ]

18 
	=EB
 = 
pro
 . 
profileData
 [ : , : , 1 ]

20 print 
EB
 . 
shape

22 print 
EB
 . 
	`max
 ( )

24 
	=EB
 = 
EB
 / 
EB
 . 
	`max
 ( )

25 
	=X
 = 
pro
 . 
Xposition
 [ 127 : 149 ]

26 
	=Xp
 = 
pro
 . 
Xposition
 [ 162 : 222 ]

27 
	=Xp2
 = 
pro
 . 
Xposition
 [ 222 : 300 ]

28 
	=EB_lp
 = 
np
 . 
	`log
 ( 
EB
 [ 162 : 222 , 0 ] )

29 
	=EB_l
 = 
np
 . 
	`log
 ( 
EB
 [ 127 : 149 , 0 ] )

30 
	=EB_lp2
 = 
np
 . 
	`log
 ( 
EB
 [ 222 : 300 , 0 ] )

32 
	=slope_p
 , 
	=intercept_p
 , 
	=r_value_p
 , 
	=p_value_p
 , 
	=std_err_p
 = 
stats
 . 
	`linregress
 ( 
Xp
 , 
EB_lp
 )

33 
	=predict_yp
 = 
intercept_p
 + 
slope_p
 * 
Xp

35 
	=slope_p2
 , 
	=intercept_p2
 , 
	=r_value_p2
 , 
	=p_value_p2
 , 
	=std_err_p2
 = 
stats
 . 
	`linregress
 ( 
Xp2
 , 
EB_lp2
 )

36 
	=predict_yp2
 = 
intercept_p2
 + 
slope_p2
 * 
Xp2

39 
	=slope_n
 , 
	=intercept_n
 , 
	=r_value_n
 , 
	=p_value_n
 , 
	=std_err_n
 = 
stats
 . 
	`linregress
 ( 
X
 , 
EB_l
 )

40 
	=predict_y
 = 
intercept_n
 + 
slope_n
 * 
X

42 
	=F
 = 
np
 . 
	`exp
 ( ( 
X
 - 
X
 [ - 1 ] ) / ( 1 / 
slope_n
 ) )

43 
	=LF
 = ( 
np
 . 
	`log
 ( 
F
 ) )

48 print 
slope_n
 , 
slope_p

50 print 
pro
 . 
Xposition
 . 
shape

52 
plt
 . 
	`axes
 ( 
axisbg
 = 'w' )

53 
plt
 . 
	`rc
 ( 'axes' , 
fc
 = 'w' )

54 
	=LEB
 = 
np
 . 
	`abs
 ( 
np
 . 
	`log
 ( 
EB
 [ : , 0 ] ) )

56 
plt
 . 
	`plot
 ( 
pro
 . 
Xposition
 , 
LEB
 , 'b.' , 
markersize
 = 3 , )

66 
plt
 . 
	`xlabel
 ( "Microns" )

67 
plt
 . 
	`ylabel
 ( "Log of EBIC profile" )

69 
plt
 . 
	`tight_layout
 ( 
pad
 = 0.4 , 
w_pad
 = 0.5 , 
h_pad
 = 1.0 )

70 
plt
 . 
	`savefig
 ( "10kvDLSunx11_lglg.pdf" , 
format
 = 'pdf' )

71 
plt
 . 
	`show
 ( ) """\n\n#plot EBIC image\n\nplt.plot(pro.Xposition, pro.profileData[:,:,1], 'b.', markersize = 3)\nplt.ticklabel_format(style = 'sci', scilimits = (0,0), axis = 'y')\nplt.ylabel("EBIC Current")\nplt.xlabel("Microns")\nplt.tight_layout(pad=0.4, w_pad=0.5, h_pad=1.0)\n#plt.xlim(0,20)\nplt.savefig("10kvEBprofileSunx11.pdf", format = 'pdf') # can also save as a tif see docstring\nplt.show()\n\n\n    # get the array from the channel\nEB = Scan.DisplayArray[:,:,1]    \n    #Mask zeros values\nEB_nZ= numpy.ma.masked_equal(EB, 0.0)\nplt.imshow(EB_nZ, extent = Scan.extent, origin = 'lower',\\n    cmap = 'gist_yarg_r', vmax = 2.3*EB_nZ.max(), vmin = EB_nZ.min() )\n#plt.tight_layout()\nplt.plot([pro.startpoint[0], pro.endpoint[0]], [pro.startpoint[1], pro.endpoint[1]])\nplt.tight_layout()\nplt.colorbar(format = '%.2e')\nplt.savefig("10kvEBSunPx11.pdf", format = 'pdf', dpi = 600) # can also save as a tif see docstring\nplt.show()\n\nSE = Scan.DisplayArray[:,:,0]    \nplt.imshow(SE, extent = Scan.extent, origin = 'lower',cmap = 'gist_yarg_r')\nplt.plot([pro.startpoint[0], pro.endpoint[0]], [pro.startpoint[1], pro.endpoint[1]])\nplt.tight_layout()\nplt.savefig("10kvSESunPx11.pdf", format = 'pdf', dpi = 600) # can also save as a tif see docstring\nplt.show()\n"""


	@./edm.py

1 import 
	~EbicDataManager

3 import 
	~numpy

4 import 
	~sys
 , 
	~threading
 , 
	~Queue
 , 
	~time

6 import 
	~socket

10 import 
	~CCNT_test

11 from 
	~CCNT_test_unit
 import *

13 
	=IP
 = "10.0.1.8"

14 
	=PORT
 = 5009

19 
	=buf_size
 = 4096

20 
	=dt
 = 
numpy
 . 
	`dtype
 ( 'uint32' )

22 class 
	csocket_to_queue
 ( 
threading
 . 
Thread
 ) :

24 def 
	$__init__
 ( 
self
 , 
q
 ) :

26 
threading
 . 
Thread
 . 
	`__init__
 ( 
self
 )

27 
self
 . 
	=sock
 = 
socket
 . 
	`socket
 ( 
socket
 . 
AF_INET
 , 
socket
 . 
SOCK_DGRAM
 , 0 )

28 
self
 . 
sock
 . 
	`settimeout
 ( 0.5 )

29 
self
 . 
sock
 . 
	`bind
 ( ( "" , 
PORT
 ) )

30 
self
 . 
	=q
 = 
q

31 
self
 . 
	=count
 = 0 
	}

33 def 
	$run
 ( 
self
 ) :

38 
	=data
 = ( 
self
 . 
sock
 . 
	`recv
 ( 
buf_size
 ) )

39 
self
 . 
	=count
 = 
self
 . 
count
 + 1

40 except 
socket
 . 
error
 as 
msg
 :

41 
self
 . 
sock
 . 
	`close
 ( )

42 print "error" , 
msg

45 if not 
data
 :

47 
self
 . 
sock
 . 
	`close
 ( )

49 
self
 . 
q
 . 
	`put
 ( 
data
 )

51 
self
 . 
sock
 . 
	`close
 ( )

52 print "Recieve Socket Closed \n" 
	}

55 class 
	cEdm
 ( 
threading
 . 
Thread
 ) :

57 def 
	$__init__
 ( 
self
 , 
displayArray
 = None , 
scanFlag
 = None , 
progress
 = None , 
scanData
 = None

58 , 
scanConfig
 = None , 
scanObject
 = None , 
Transport
 = None , 
Aux1
 = None ,

59 
Aux2
 = None , 
OS
 = None , 
sockQ
 = None , 
q
 = None ) :

60 
self
 . 
	=scanData
 = 
scanData

61 
self
 . 
	=progress
 = 
progress

62 
self
 . 
	=scanConfig
 = 
scanConfig

63 
self
 . 
	=displayArray
 = 
displayArray

64 
self
 . 
	=scanFlag
 = 
scanFlag

65 
self
 . 
	=scanObject
 = 
scanObject

66 
self
 . 
	=transport
 = 
Transport

67 
self
 . 
	=Aux1
 = 
Aux1

68 
self
 . 
	=Aux2
 = 
Aux2

69 
self
 . 
	=OS
 = 
OS

70 
self
 . 
	=sockQ
 = 
sockQ

71 
self
 . 
	=q
 = 
q

72 if 
self
 . 
scanObject
 != None :

73 
self
 . 
	=sdm
 = 
EbicDataManager
 . 
	`ScanDataManager
 ( 
self
 . 
scanConfig
 , 
self
 . 
scanObject
 , 
OS
 = 
self
 . 
OS
 )

74 
threading
 . 
Thread
 . 
	`__init__
 ( 
self
 ) 
	}

77 def 
	$run
 ( 
self
 ) :

78 if 
self
 . 
scanObject
 != None :

80 
self
 . 
	=displayArray
 [ 0 ] = 
self
 . 
sdm
 . 
displayArray

81 
self
 . 
	`scanProgress_NEW
 ( )

84 if 
self
 . 
transport
 != None :

85 
self
 . 
	`takeIV
 ( )

86 if 
self
 . 
Aux1
 != None :

87 
self
 . 
	`setAux1
 ( )

88 if 
self
 . 
Aux2
 != None :

89 
self
 . 
	`setAux2
 ( ) 
	}

92 def 
	$setupAndStartScan
 ( 
self
 ) :

94 return 
	}

98 def 
	$setAux1
 ( 
self
 ) :

99 
	=vstep
 = 20.0 / 0xffff

100 
self
 . 
	=Aux1
 = 
self
 . 
Aux1
 / 
vstep

101 
	=vRamp
 = 255 
	}

103 def 
	$setAux2
 ( 
self
 ) :

104 
	=vstep
 = 20.0 / 0xffff

105 
self
 . 
	=Aux2
 = 
self
 . 
Aux2
 / 
vstep
 
	}

108 def 
	$takeIV
 ( 
self
 ) :

110 
	=vRamp
 = 255

111 
	=delayAux1Fine
 = 0

112 
	=delayAux1Coarse
 = 1

113 
	=samplesPerPoint
 = 
self
 . 
transport
 . 
samples

114 
	=delayFine
 = 100

115 
	=delayCoarse
 = 0

116 
	=sendVoltageValue
 = 
self
 . 
transport
 . 
start

117 
	=Up
 = True

118 print "step size = " , 
self
 . 
transport
 . 
step

119 for 
k
 in 
	`range
 ( 0 , 
self
 . 
transport
 . 
pointsUp
 + 
self
 . 
transport
 . 
pointsDown
 ) :

120 
self
 . 
ebicCommands
 . 
	`setAux1
 ( 
sendVoltageValue
 , 
vRamp
 , 
delayAux1Fine
 , 
delayAux1Coarse
 )

121 
	=startTime
 = 
time
 . 
	`time
 ( )

122 
time
 . 
	`sleep
 ( 
self
 . 
transport
 . 
delay
 )

123 
	=sampleAverage
 = [ ]

124 for 
n
 in 
	`range
 ( 0 , 
self
 . 
transport
 . 
points
 ) :

125 
	=data
 = 
self
 . 
	`samplePoint
 ( 
samplesPerPoint
 , 
self
 . 
transport
 . 
channelMask
 , 
delayFine
 , 
delayCoarse
 )

126 
time
 . 
	`sleep
 ( 0.066 )

127 
self
 . 
transport
 . 
dataIRaw
 . 
	`append
 ( 
data
 . 
dataArray
 )

128 
	=scaledData
 = 
data
 . 
dataArray
 * 
self
 . 
transport
 . 
vstep
 / 
self
 . 
transport
 . 
gain

129 
sampleAverage
 . 
	`append
 ( 
numpy
 . 
	`average
 ( 
scaledData
 ) )

130 
self
 . 
transport
 . 
soakTime
 . 
	`append
 ( 
time
 . 
	`time
 ( ) - 
startTime
 )

131 
self
 . 
transport
 . 
dataI
 . 
	`append
 ( 
numpy
 . 
	`average
 ( 
sampleAverage
 ) )

132 
self
 . 
transport
 . 
dataIstd
 . 
	`append
 ( 
numpy
 . 
	`std
 ( 
sampleAverage
 ) )

133 
self
 . 
transport
 . 
sentVoltage
 . 
	`append
 ( 
sendVoltageValue
 * 
self
 . 
transport
 . 
vstep
 )

134 if 
sendVoltageValue
 >= 
self
 . 
transport
 . 
end
 :

135 
	=Up
 = False

136 if 
Up
 == True :

137 
	=sendVoltageValue
 += 
self
 . 
transport
 . 
step

139 
	=sendVoltageValue
 -= 
self
 . 
transport
 . 
step

140 
self
 . 
transport
 . 
soakTime
 . 
	`append
 ( 
time
 . 
	`time
 ( ) - 
startTime
 )

141 
self
 . 
	=scanFlag
 [ 0 ] = True

142 return 
	}

146 def 
	$samplePoint
 ( 
self
 , 
samplesPerPoint
 , 
channelMask
 , 
delayFine
 , 
delayCoarse
 ) :

147 
	=ADCconfig
 = 
EbicDataManager
 . 
	`SampleConfig
 ( 
samplesPerPoint
 , 
channelMask
 , 
delayFine
 , 
delayCoarse
 )

148 
	=dataPoint
 = 
EbicDataManager
 . 
	`SampleADCsManager
 ( 
ADCconfig
 )

149 
self
 . 
edm
 . 
	`setupCommandCallback
 ( 
self
 . 
ebicCommands
 . 
SAMPLEADCFROMMASK
 , 
dataPoint
 . 
restructureToArray
 )

150 
self
 . 
ebicCommands
 . 
	`sampleADCfromMask
 ( * ( 
ADCconfig
 . 
	`sampleTuple
 ( ) ) )

151 return 
dataPoint
 
	}

156 def 
	$scanProgress_NEW
 ( 
self
 ) :

158 
	=datacount
 = 
self
 . 
sdm
 . 
	`test_scanSize
 ( )

159 print 
datacount

162 while 
self
 . 
sockQ
 . 
	`is_alive
 ( ) :

164 
	=data
 = 
self
 . 
q
 . 
	`get
 ( )

166 
	=header
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 1 , 
offset
 = 4 )

168 
	=X
 = 
numpy
 . 
	`frombuffer
 ( 
data
 , 
dtype
 = 
dt
 , 
count
 = 
datacount
 , 
offset
 = 16 )

170 
	=Copy
 = 
numpy
 . 
	`int32
 ( 
X
 << 14 )

173 
	=Z
 = 
Copy
 >> 14

177 if 
header
 <= 
self
 . 
sdm
 . 
TF
 :

180 
	=xindex
 , 
	=sub_xindex
 , 
	=yindex
 , 
	=samp_index
 , 
	=sub_samp_index
 = 
CCNT_test
 . 
	`TF_index
 ( 
self
 . 
sdm
 . 
TF
 ,

181 
self
 . 
sdm
 . 
TF_state
 , 
pF
 = 
self
 . 
sdm
 . 
pF
 , 
pS
 = 
self
 . 
sdm
 . 
pS
 , 
samp
 = 
self
 . 
sdm
 . 
samp
 ,

182 
CCNT
 = 
self
 . 
sdm
 . 
CCNT
 , 
header
 = 
header
 , 
resizeDim
 = 
self
 . 
sdm
 . 
resizeDim
 )

184 
	=sub_data_array
 = 
sim_data
 . 
	`test_reshape
 ( 
Z
 , 
self
 . 
sdm
 . 
CCNT
 , 
self
 . 
sdm
 . 
samp
 , 
self
 . 
sdm
 . 
CH
 ,

185 
TF_state
 = 
self
 . 
sdm
 . 
TF_state
 )

189 
	`put_inP
 ( 
self
 . 
sdm
 . 
dataArray
 , 
sub_data_array
 , 
xindex
 , 
sub_xindex
 , 
yindex
 , 
samp_index
 ,

190 
sub_samp_index
 , 
self
 . 
sdm
 . 
TF_state
 , 
self
 . 
sdm
 . 
resizeDim
 )

193 
	`put_in_Display
 ( 
self
 . 
sdm
 . 
displayArray
 , 
numpy
 . 
	`average
 ( 
sub_data_array
 , 
axis
 = 1 ) , 
xindex
 , 
sub_xindex
 ,

194 
yindex
 , 
samp_index
 , 
sub_samp_index
 , 
self
 . 
sdm
 . 
TF_state
 , 
self
 . 
sdm
 . 
resizeDim
 )

197 
self
 . 
	=displayArray
 [ 0 ] = 
self
 . 
sdm
 . 
displayArray

198 
self
 . 
	=progress
 [ 0 ] = 100 * ( ( 1.0 * 
header
 ) / 
self
 . 
sdm
 . 
TF
 )

199 if 
header
 == 
self
 . 
sdm
 . 
TF
 :

206 
self
 . 
	=scanData
 [ 0 ] = 
self
 . 
sdm
 . 
dataArray

207 
self
 . 
scanObject
 . 
	=rawDataArray
 = 
self
 . 
sdm
 . 
dataArray

208 
self
 . 
scanObject
 . 
	`scale_channels
 ( )

209 
self
 . 
	=scanFlag
 [ 0 ] = True 
	}


	@./config.py

1 import 
	~pickle

12 def 
	$setCalibration
 ( 
testmag
 = 1000 , 
testStepSizeH
 = 127 ,

13 
testStepSizeV
 = 127 , 
knownDistanceH
 = 1 , 
knownDistanceV
 = 1 ,

14 
pointsH
 = 100 , 
pointsV
 = 100 , 
hMax
 = 32767 , 
hMin
 = - 32767 , 
vMax
 = 32767 , 
vMin
 = - 32767 ) :

16 
	=rangeOfPoints
 = 0xffff

20 
	=hMagScale
 = ( 
testmag
 * 
	`float
 ( 
knownDistanceH
 ) ) / ( 
testStepSizeH
 * 
pointsH
 )

21 
	=vMagScale
 = ( 
testmag
 * 
	`float
 ( 
knownDistanceV
 ) ) / ( 
testStepSizeV
 * 
pointsV
 )

23 
	=aspectRatio
 = 
vMagScale
 / 
hMagScale

24 
	=cal
 = 
	`dict
 ( [ ( 'testmag' , 
testmag
 ) , ( 'testStepSizeH' , 
testStepSizeH
 ) , ( 'testStepSizeV' , 
testStepSizeV
 ) , ( 'knownDistanceH' , 
knownDistanceH
 ) ,

25 ( 'knownDistanceV' , 
knownDistanceV
 ) , ( 'pointsH' , 
pointsH
 ) , ( 'pointsV' , 
pointsV
 ) , ( 'aspectRatio' , 
aspectRatio
 ) ,

26 ( 'hMagScale' , 
hMagScale
 ) , ( 'vMagScale' , 
vMagScale
 ) , ( 'hMax' , 
hMax
 ) , ( 'hMin' , 
hMin
 ) , ( 'vMax' , 
vMax
 ) , ( 'vMin' , 
vMin
 ) ] )

29 
	=f
 = 
	`open
 ( 'calibration.mcal' , 'wb' )

30 
pickle
 . 
	`dump
 ( 
cal
 , 
f
 )

31 
f
 . 
	`close
 ( )

33 return 
cal
 
	}

36 def 
	$getCalibration
 ( ) :

38 
	=f
 = 
	`open
 ( 'calibration.mcal' , 'rb' )

39 
	=cal
 = 
pickle
 . 
	`load
 ( 
f
 )

40 
f
 . 
	`close
 ( )

42 return 
cal
 
	}


	@./SunpSurf2.py

1 import 
	~scanobject

2 import 
	~Mfigure

3 import 
	~scipy.ndimage
 as 
nd

4 import 
	~numpy

7 from 
	~mayavi.mlab
 import *

9 
	=Scan
 = 
scanobject
 . 
scanObjectUtils
 . 
	`load_scanobject
 ( "../data/SunP/7_14_SP10kvcleavedx1.scan" )

10 
	=EB
 = 
Scan
 . 
DisplayArray
 [ : , : , 1 ]

11 
	=SE
 = 
Scan
 . 
DisplayArray
 [ : , : , 0 ]

12 
	=EB
 = 
numpy
 . 
	`fliplr
 ( 
EB
 )

14 
	=SE
 = 
numpy
 . 
	`fliplr
 ( 
SE
 )

15 
	=Gaus
 = 
nd
 . 
	`gaussian_filter
 ( 
EB
 , 1 , 
order
 = 0 )

16 
	=G_se
 = 
nd
 . 
	`gaussian_filter
 ( 
SE
 , 2 , 
order
 = 0 )

17 
	`surf
 ( 
Gaus
 * - 1e9 , 
warp_scale
 = 'auto' , 
colormap
 = "YlOrRd" , 
vmin
 = 0 , 
vmax
 = 3 )

18 
	`surf
 ( 
G_se
 , 
warp_scale
 = 'auto' , 
colormap
 = "gist_gray" )


	@
1
.
0
35
535
./CCNT_RX_TX_IV.py
./Mexport.py
./pyQtWindow.py
./Surf.py
./scanobject.py
./reCenterSlice.py
./EbicDataSet.py
./rCenSliceUI.py
./EbicDataManager.py
./tracker.py
./drag.py
./qtdesigner.py
./Mfigure.py
./mplwidget.py
./Re_rc.py
./CCNT_test_unit.py
./Mighty_qt_designer.py
./profileUI.py
./scanUpdate.py
./CCNT_test.py
./HIST.py
./SetV.py
./reCenterSliceUI.py
./Sun_getDL.py
./profileDialog.py
./ReadCH_test.py
./__init__.py
./lineProfile.py
./style_rc.py
./CCNT_RX_TX.py
./SunpSurf.py
./Sun_getDL2.py
./edm.py
./config.py
./SunpSurf2.py
